7840069cc7501bfbfe3e8011d406a9be
"use strict";

/* istanbul ignore next */
function cov_1hajev5r1o() {
  var path = "/Users/yusukeyoshioka/projects/youtube/ai-chat/ai-chat-api/src/routes/dataRetention.ts";
  var hash = "46b16aef8f0356d152d1a1a0f93e4ccdb90d2f7e";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/yusukeyoshioka/projects/youtube/ai-chat/ai-chat-api/src/routes/dataRetention.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 22
        },
        end: {
          line: 12,
          column: 3
        }
      },
      "1": {
        start: {
          line: 3,
          column: 4
        },
        end: {
          line: 3,
          column: 33
        }
      },
      "2": {
        start: {
          line: 3,
          column: 26
        },
        end: {
          line: 3,
          column: 33
        }
      },
      "3": {
        start: {
          line: 4,
          column: 15
        },
        end: {
          line: 4,
          column: 52
        }
      },
      "4": {
        start: {
          line: 5,
          column: 4
        },
        end: {
          line: 7,
          column: 5
        }
      },
      "5": {
        start: {
          line: 6,
          column: 6
        },
        end: {
          line: 6,
          column: 68
        }
      },
      "6": {
        start: {
          line: 6,
          column: 51
        },
        end: {
          line: 6,
          column: 63
        }
      },
      "7": {
        start: {
          line: 8,
          column: 4
        },
        end: {
          line: 8,
          column: 39
        }
      },
      "8": {
        start: {
          line: 10,
          column: 4
        },
        end: {
          line: 10,
          column: 33
        }
      },
      "9": {
        start: {
          line: 10,
          column: 26
        },
        end: {
          line: 10,
          column: 33
        }
      },
      "10": {
        start: {
          line: 11,
          column: 4
        },
        end: {
          line: 11,
          column: 17
        }
      },
      "11": {
        start: {
          line: 13,
          column: 25
        },
        end: {
          line: 17,
          column: 2
        }
      },
      "12": {
        start: {
          line: 14,
          column: 4
        },
        end: {
          line: 14,
          column: 72
        }
      },
      "13": {
        start: {
          line: 16,
          column: 4
        },
        end: {
          line: 16,
          column: 21
        }
      },
      "14": {
        start: {
          line: 18,
          column: 19
        },
        end: {
          line: 24,
          column: 1
        }
      },
      "15": {
        start: {
          line: 19,
          column: 4
        },
        end: {
          line: 19,
          column: 42
        }
      },
      "16": {
        start: {
          line: 19,
          column: 31
        },
        end: {
          line: 19,
          column: 42
        }
      },
      "17": {
        start: {
          line: 20,
          column: 17
        },
        end: {
          line: 20,
          column: 19
        }
      },
      "18": {
        start: {
          line: 21,
          column: 4
        },
        end: {
          line: 21,
          column: 141
        }
      },
      "19": {
        start: {
          line: 21,
          column: 21
        },
        end: {
          line: 21,
          column: 141
        }
      },
      "20": {
        start: {
          line: 21,
          column: 40
        },
        end: {
          line: 21,
          column: 141
        }
      },
      "21": {
        start: {
          line: 21,
          column: 109
        },
        end: {
          line: 21,
          column: 141
        }
      },
      "22": {
        start: {
          line: 22,
          column: 4
        },
        end: {
          line: 22,
          column: 36
        }
      },
      "23": {
        start: {
          line: 23,
          column: 4
        },
        end: {
          line: 23,
          column: 18
        }
      },
      "24": {
        start: {
          line: 25,
          column: 16
        },
        end: {
          line: 33,
          column: 1
        }
      },
      "25": {
        start: {
          line: 26,
          column: 28
        },
        end: {
          line: 26,
          column: 110
        }
      },
      "26": {
        start: {
          line: 26,
          column: 91
        },
        end: {
          line: 26,
          column: 106
        }
      },
      "27": {
        start: {
          line: 27,
          column: 4
        },
        end: {
          line: 32,
          column: 7
        }
      },
      "28": {
        start: {
          line: 28,
          column: 36
        },
        end: {
          line: 28,
          column: 97
        }
      },
      "29": {
        start: {
          line: 28,
          column: 42
        },
        end: {
          line: 28,
          column: 70
        }
      },
      "30": {
        start: {
          line: 28,
          column: 85
        },
        end: {
          line: 28,
          column: 95
        }
      },
      "31": {
        start: {
          line: 29,
          column: 35
        },
        end: {
          line: 29,
          column: 100
        }
      },
      "32": {
        start: {
          line: 29,
          column: 41
        },
        end: {
          line: 29,
          column: 73
        }
      },
      "33": {
        start: {
          line: 29,
          column: 88
        },
        end: {
          line: 29,
          column: 98
        }
      },
      "34": {
        start: {
          line: 30,
          column: 32
        },
        end: {
          line: 30,
          column: 116
        }
      },
      "35": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 31,
          column: 78
        }
      },
      "36": {
        start: {
          line: 34,
          column: 22
        },
        end: {
          line: 36,
          column: 1
        }
      },
      "37": {
        start: {
          line: 35,
          column: 4
        },
        end: {
          line: 35,
          column: 62
        }
      },
      "38": {
        start: {
          line: 37,
          column: 0
        },
        end: {
          line: 37,
          column: 62
        }
      },
      "39": {
        start: {
          line: 38,
          column: 18
        },
        end: {
          line: 38,
          column: 53
        }
      },
      "40": {
        start: {
          line: 39,
          column: 15
        },
        end: {
          line: 39,
          column: 44
        }
      },
      "41": {
        start: {
          line: 40,
          column: 16
        },
        end: {
          line: 40,
          column: 46
        }
      },
      "42": {
        start: {
          line: 41,
          column: 29
        },
        end: {
          line: 41,
          column: 86
        }
      },
      "43": {
        start: {
          line: 42,
          column: 17
        },
        end: {
          line: 42,
          column: 41
        }
      },
      "44": {
        start: {
          line: 43,
          column: 30
        },
        end: {
          line: 43,
          column: 71
        }
      },
      "45": {
        start: {
          line: 44,
          column: 15
        },
        end: {
          line: 44,
          column: 41
        }
      },
      "46": {
        start: {
          line: 46,
          column: 0
        },
        end: {
          line: 64,
          column: 4
        }
      },
      "47": {
        start: {
          line: 46,
          column: 59
        },
        end: {
          line: 64,
          column: 2
        }
      },
      "48": {
        start: {
          line: 47,
          column: 4
        },
        end: {
          line: 63,
          column: 5
        }
      },
      "49": {
        start: {
          line: 49,
          column: 21
        },
        end: {
          line: 52,
          column: 10
        }
      },
      "50": {
        start: {
          line: 53,
          column: 8
        },
        end: {
          line: 57,
          column: 9
        }
      },
      "51": {
        start: {
          line: 54,
          column: 12
        },
        end: {
          line: 56,
          column: 76
        }
      },
      "52": {
        start: {
          line: 58,
          column: 23
        },
        end: {
          line: 58,
          column: 101
        }
      },
      "53": {
        start: {
          line: 59,
          column: 8
        },
        end: {
          line: 59,
          column: 25
        }
      },
      "54": {
        start: {
          line: 62,
          column: 8
        },
        end: {
          line: 62,
          column: 76
        }
      },
      "55": {
        start: {
          line: 66,
          column: 0
        },
        end: {
          line: 91,
          column: 4
        }
      },
      "56": {
        start: {
          line: 66,
          column: 84
        },
        end: {
          line: 91,
          column: 2
        }
      },
      "57": {
        start: {
          line: 67,
          column: 4
        },
        end: {
          line: 90,
          column: 5
        }
      },
      "58": {
        start: {
          line: 69,
          column: 30
        },
        end: {
          line: 69,
          column: 93
        }
      },
      "59": {
        start: {
          line: 71,
          column: 21
        },
        end: {
          line: 74,
          column: 10
        }
      },
      "60": {
        start: {
          line: 75,
          column: 8
        },
        end: {
          line: 79,
          column: 9
        }
      },
      "61": {
        start: {
          line: 76,
          column: 12
        },
        end: {
          line: 78,
          column: 76
        }
      },
      "62": {
        start: {
          line: 80,
          column: 23
        },
        end: {
          line: 80,
          column: 107
        }
      },
      "63": {
        start: {
          line: 81,
          column: 8
        },
        end: {
          line: 81,
          column: 25
        }
      },
      "64": {
        start: {
          line: 84,
          column: 8
        },
        end: {
          line: 88,
          column: 9
        }
      },
      "65": {
        start: {
          line: 85,
          column: 12
        },
        end: {
          line: 87,
          column: 73
        }
      },
      "66": {
        start: {
          line: 89,
          column: 8
        },
        end: {
          line: 89,
          column: 77
        }
      },
      "67": {
        start: {
          line: 93,
          column: 0
        },
        end: {
          line: 134,
          column: 4
        }
      },
      "68": {
        start: {
          line: 93,
          column: 86
        },
        end: {
          line: 134,
          column: 2
        }
      },
      "69": {
        start: {
          line: 94,
          column: 4
        },
        end: {
          line: 133,
          column: 5
        }
      },
      "70": {
        start: {
          line: 96,
          column: 29
        },
        end: {
          line: 96,
          column: 93
        }
      },
      "71": {
        start: {
          line: 98,
          column: 21
        },
        end: {
          line: 101,
          column: 10
        }
      },
      "72": {
        start: {
          line: 102,
          column: 8
        },
        end: {
          line: 106,
          column: 9
        }
      },
      "73": {
        start: {
          line: 103,
          column: 12
        },
        end: {
          line: 105,
          column: 76
        }
      },
      "74": {
        start: {
          line: 107,
          column: 23
        },
        end: {
          line: 107,
          column: 101
        }
      },
      "75": {
        start: {
          line: 109,
          column: 8
        },
        end: {
          line: 120,
          column: 9
        }
      },
      "76": {
        start: {
          line: 111,
          column: 16
        },
        end: {
          line: 113,
          column: 103
        }
      },
      "77": {
        start: {
          line: 114,
          column: 16
        },
        end: {
          line: 114,
          column: 22
        }
      },
      "78": {
        start: {
          line: 116,
          column: 16
        },
        end: {
          line: 116,
          column: 112
        }
      },
      "79": {
        start: {
          line: 117,
          column: 16
        },
        end: {
          line: 117,
          column: 22
        }
      },
      "80": {
        start: {
          line: 119,
          column: 16
        },
        end: {
          line: 119,
          column: 76
        }
      },
      "81": {
        start: {
          line: 121,
          column: 8
        },
        end: {
          line: 124,
          column: 11
        }
      },
      "82": {
        start: {
          line: 127,
          column: 8
        },
        end: {
          line: 131,
          column: 9
        }
      },
      "83": {
        start: {
          line: 128,
          column: 12
        },
        end: {
          line: 130,
          column: 73
        }
      },
      "84": {
        start: {
          line: 132,
          column: 8
        },
        end: {
          line: 132,
          column: 58
        }
      },
      "85": {
        start: {
          line: 136,
          column: 0
        },
        end: {
          line: 154,
          column: 4
        }
      },
      "86": {
        start: {
          line: 136,
          column: 57
        },
        end: {
          line: 154,
          column: 2
        }
      },
      "87": {
        start: {
          line: 137,
          column: 4
        },
        end: {
          line: 153,
          column: 5
        }
      },
      "88": {
        start: {
          line: 139,
          column: 21
        },
        end: {
          line: 142,
          column: 10
        }
      },
      "89": {
        start: {
          line: 143,
          column: 8
        },
        end: {
          line: 147,
          column: 9
        }
      },
      "90": {
        start: {
          line: 144,
          column: 12
        },
        end: {
          line: 146,
          column: 76
        }
      },
      "91": {
        start: {
          line: 148,
          column: 21
        },
        end: {
          line: 148,
          column: 124
        }
      },
      "92": {
        start: {
          line: 149,
          column: 8
        },
        end: {
          line: 149,
          column: 23
        }
      },
      "93": {
        start: {
          line: 152,
          column: 8
        },
        end: {
          line: 152,
          column: 71
        }
      },
      "94": {
        start: {
          line: 156,
          column: 0
        },
        end: {
          line: 164,
          column: 4
        }
      },
      "95": {
        start: {
          line: 156,
          column: 86
        },
        end: {
          line: 164,
          column: 2
        }
      },
      "96": {
        start: {
          line: 157,
          column: 4
        },
        end: {
          line: 163,
          column: 5
        }
      },
      "97": {
        start: {
          line: 158,
          column: 21
        },
        end: {
          line: 158,
          column: 115
        }
      },
      "98": {
        start: {
          line: 159,
          column: 8
        },
        end: {
          line: 159,
          column: 23
        }
      },
      "99": {
        start: {
          line: 162,
          column: 8
        },
        end: {
          line: 162,
          column: 78
        }
      },
      "100": {
        start: {
          line: 165,
          column: 0
        },
        end: {
          line: 193,
          column: 4
        }
      },
      "101": {
        start: {
          line: 165,
          column: 93
        },
        end: {
          line: 193,
          column: 2
        }
      },
      "102": {
        start: {
          line: 166,
          column: 4
        },
        end: {
          line: 192,
          column: 5
        }
      },
      "103": {
        start: {
          line: 168,
          column: 44
        },
        end: {
          line: 168,
          column: 101
        }
      },
      "104": {
        start: {
          line: 170,
          column: 8
        },
        end: {
          line: 179,
          column: 9
        }
      },
      "105": {
        start: {
          line: 172,
          column: 16
        },
        end: {
          line: 172,
          column: 94
        }
      },
      "106": {
        start: {
          line: 173,
          column: 16
        },
        end: {
          line: 173,
          column: 22
        }
      },
      "107": {
        start: {
          line: 175,
          column: 16
        },
        end: {
          line: 175,
          column: 92
        }
      },
      "108": {
        start: {
          line: 176,
          column: 16
        },
        end: {
          line: 176,
          column: 22
        }
      },
      "109": {
        start: {
          line: 178,
          column: 16
        },
        end: {
          line: 178,
          column: 76
        }
      },
      "110": {
        start: {
          line: 180,
          column: 8
        },
        end: {
          line: 183,
          column: 11
        }
      },
      "111": {
        start: {
          line: 186,
          column: 8
        },
        end: {
          line: 190,
          column: 9
        }
      },
      "112": {
        start: {
          line: 187,
          column: 12
        },
        end: {
          line: 189,
          column: 73
        }
      },
      "113": {
        start: {
          line: 191,
          column: 8
        },
        end: {
          line: 191,
          column: 65
        }
      },
      "114": {
        start: {
          line: 194,
          column: 0
        },
        end: {
          line: 194,
          column: 25
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 74
          },
          end: {
            line: 2,
            column: 75
          }
        },
        loc: {
          start: {
            line: 2,
            column: 96
          },
          end: {
            line: 9,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 6,
            column: 38
          },
          end: {
            line: 6,
            column: 39
          }
        },
        loc: {
          start: {
            line: 6,
            column: 49
          },
          end: {
            line: 6,
            column: 65
          }
        },
        line: 6
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 9,
            column: 6
          },
          end: {
            line: 9,
            column: 7
          }
        },
        loc: {
          start: {
            line: 9,
            column: 28
          },
          end: {
            line: 12,
            column: 1
          }
        },
        line: 9
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 13,
            column: 80
          },
          end: {
            line: 13,
            column: 81
          }
        },
        loc: {
          start: {
            line: 13,
            column: 95
          },
          end: {
            line: 15,
            column: 1
          }
        },
        line: 13
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 15,
            column: 5
          },
          end: {
            line: 15,
            column: 6
          }
        },
        loc: {
          start: {
            line: 15,
            column: 20
          },
          end: {
            line: 17,
            column: 1
          }
        },
        line: 15
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 18,
            column: 50
          },
          end: {
            line: 18,
            column: 51
          }
        },
        loc: {
          start: {
            line: 18,
            column: 65
          },
          end: {
            line: 24,
            column: 1
          }
        },
        line: 18
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 25,
            column: 44
          },
          end: {
            line: 25,
            column: 45
          }
        },
        loc: {
          start: {
            line: 25,
            column: 89
          },
          end: {
            line: 33,
            column: 1
          }
        },
        line: 25
      },
      "7": {
        name: "adopt",
        decl: {
          start: {
            line: 26,
            column: 13
          },
          end: {
            line: 26,
            column: 18
          }
        },
        loc: {
          start: {
            line: 26,
            column: 26
          },
          end: {
            line: 26,
            column: 112
          }
        },
        line: 26
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 26,
            column: 70
          },
          end: {
            line: 26,
            column: 71
          }
        },
        loc: {
          start: {
            line: 26,
            column: 89
          },
          end: {
            line: 26,
            column: 108
          }
        },
        line: 26
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 27,
            column: 36
          },
          end: {
            line: 27,
            column: 37
          }
        },
        loc: {
          start: {
            line: 27,
            column: 63
          },
          end: {
            line: 32,
            column: 5
          }
        },
        line: 27
      },
      "10": {
        name: "fulfilled",
        decl: {
          start: {
            line: 28,
            column: 17
          },
          end: {
            line: 28,
            column: 26
          }
        },
        loc: {
          start: {
            line: 28,
            column: 34
          },
          end: {
            line: 28,
            column: 99
          }
        },
        line: 28
      },
      "11": {
        name: "rejected",
        decl: {
          start: {
            line: 29,
            column: 17
          },
          end: {
            line: 29,
            column: 25
          }
        },
        loc: {
          start: {
            line: 29,
            column: 33
          },
          end: {
            line: 29,
            column: 102
          }
        },
        line: 29
      },
      "12": {
        name: "step",
        decl: {
          start: {
            line: 30,
            column: 17
          },
          end: {
            line: 30,
            column: 21
          }
        },
        loc: {
          start: {
            line: 30,
            column: 30
          },
          end: {
            line: 30,
            column: 118
          }
        },
        line: 30
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 34,
            column: 56
          },
          end: {
            line: 34,
            column: 57
          }
        },
        loc: {
          start: {
            line: 34,
            column: 71
          },
          end: {
            line: 36,
            column: 1
          }
        },
        line: 34
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 46,
            column: 45
          },
          end: {
            line: 46,
            column: 46
          }
        },
        loc: {
          start: {
            line: 46,
            column: 59
          },
          end: {
            line: 64,
            column: 2
          }
        },
        line: 46
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 46,
            column: 93
          },
          end: {
            line: 46,
            column: 94
          }
        },
        loc: {
          start: {
            line: 46,
            column: 106
          },
          end: {
            line: 64,
            column: 1
          }
        },
        line: 46
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 66,
            column: 70
          },
          end: {
            line: 66,
            column: 71
          }
        },
        loc: {
          start: {
            line: 66,
            column: 84
          },
          end: {
            line: 91,
            column: 2
          }
        },
        line: 66
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 66,
            column: 118
          },
          end: {
            line: 66,
            column: 119
          }
        },
        loc: {
          start: {
            line: 66,
            column: 131
          },
          end: {
            line: 91,
            column: 1
          }
        },
        line: 66
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 93,
            column: 72
          },
          end: {
            line: 93,
            column: 73
          }
        },
        loc: {
          start: {
            line: 93,
            column: 86
          },
          end: {
            line: 134,
            column: 2
          }
        },
        line: 93
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 93,
            column: 120
          },
          end: {
            line: 93,
            column: 121
          }
        },
        loc: {
          start: {
            line: 93,
            column: 133
          },
          end: {
            line: 134,
            column: 1
          }
        },
        line: 93
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 136,
            column: 43
          },
          end: {
            line: 136,
            column: 44
          }
        },
        loc: {
          start: {
            line: 136,
            column: 57
          },
          end: {
            line: 154,
            column: 2
          }
        },
        line: 136
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 136,
            column: 91
          },
          end: {
            line: 136,
            column: 92
          }
        },
        loc: {
          start: {
            line: 136,
            column: 104
          },
          end: {
            line: 154,
            column: 1
          }
        },
        line: 136
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 156,
            column: 72
          },
          end: {
            line: 156,
            column: 73
          }
        },
        loc: {
          start: {
            line: 156,
            column: 86
          },
          end: {
            line: 164,
            column: 2
          }
        },
        line: 156
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 156,
            column: 120
          },
          end: {
            line: 156,
            column: 121
          }
        },
        loc: {
          start: {
            line: 156,
            column: 133
          },
          end: {
            line: 164,
            column: 1
          }
        },
        line: 156
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 165,
            column: 79
          },
          end: {
            line: 165,
            column: 80
          }
        },
        loc: {
          start: {
            line: 165,
            column: 93
          },
          end: {
            line: 193,
            column: 2
          }
        },
        line: 165
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 165,
            column: 127
          },
          end: {
            line: 165,
            column: 128
          }
        },
        loc: {
          start: {
            line: 165,
            column: 140
          },
          end: {
            line: 193,
            column: 1
          }
        },
        line: 165
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 22
          },
          end: {
            line: 12,
            column: 3
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 23
          },
          end: {
            line: 2,
            column: 27
          }
        }, {
          start: {
            line: 2,
            column: 31
          },
          end: {
            line: 2,
            column: 51
          }
        }, {
          start: {
            line: 2,
            column: 57
          },
          end: {
            line: 12,
            column: 2
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 2,
            column: 57
          },
          end: {
            line: 12,
            column: 2
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 2,
            column: 74
          },
          end: {
            line: 9,
            column: 1
          }
        }, {
          start: {
            line: 9,
            column: 6
          },
          end: {
            line: 12,
            column: 1
          }
        }],
        line: 2
      },
      "2": {
        loc: {
          start: {
            line: 3,
            column: 4
          },
          end: {
            line: 3,
            column: 33
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 3,
            column: 4
          },
          end: {
            line: 3,
            column: 33
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 3
      },
      "3": {
        loc: {
          start: {
            line: 5,
            column: 4
          },
          end: {
            line: 7,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 5,
            column: 4
          },
          end: {
            line: 7,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 5
      },
      "4": {
        loc: {
          start: {
            line: 5,
            column: 8
          },
          end: {
            line: 5,
            column: 85
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 5,
            column: 8
          },
          end: {
            line: 5,
            column: 13
          }
        }, {
          start: {
            line: 5,
            column: 18
          },
          end: {
            line: 5,
            column: 84
          }
        }],
        line: 5
      },
      "5": {
        loc: {
          start: {
            line: 5,
            column: 18
          },
          end: {
            line: 5,
            column: 84
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 5,
            column: 34
          },
          end: {
            line: 5,
            column: 47
          }
        }, {
          start: {
            line: 5,
            column: 50
          },
          end: {
            line: 5,
            column: 84
          }
        }],
        line: 5
      },
      "6": {
        loc: {
          start: {
            line: 5,
            column: 50
          },
          end: {
            line: 5,
            column: 84
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 5,
            column: 50
          },
          end: {
            line: 5,
            column: 63
          }
        }, {
          start: {
            line: 5,
            column: 67
          },
          end: {
            line: 5,
            column: 84
          }
        }],
        line: 5
      },
      "7": {
        loc: {
          start: {
            line: 10,
            column: 4
          },
          end: {
            line: 10,
            column: 33
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 10,
            column: 4
          },
          end: {
            line: 10,
            column: 33
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 10
      },
      "8": {
        loc: {
          start: {
            line: 13,
            column: 25
          },
          end: {
            line: 17,
            column: 2
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 13,
            column: 26
          },
          end: {
            line: 13,
            column: 30
          }
        }, {
          start: {
            line: 13,
            column: 34
          },
          end: {
            line: 13,
            column: 57
          }
        }, {
          start: {
            line: 13,
            column: 63
          },
          end: {
            line: 17,
            column: 1
          }
        }],
        line: 13
      },
      "9": {
        loc: {
          start: {
            line: 13,
            column: 63
          },
          end: {
            line: 17,
            column: 1
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 13,
            column: 80
          },
          end: {
            line: 15,
            column: 1
          }
        }, {
          start: {
            line: 15,
            column: 5
          },
          end: {
            line: 17,
            column: 1
          }
        }],
        line: 13
      },
      "10": {
        loc: {
          start: {
            line: 18,
            column: 19
          },
          end: {
            line: 24,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 18,
            column: 20
          },
          end: {
            line: 18,
            column: 24
          }
        }, {
          start: {
            line: 18,
            column: 28
          },
          end: {
            line: 18,
            column: 45
          }
        }, {
          start: {
            line: 18,
            column: 50
          },
          end: {
            line: 24,
            column: 1
          }
        }],
        line: 18
      },
      "11": {
        loc: {
          start: {
            line: 19,
            column: 4
          },
          end: {
            line: 19,
            column: 42
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 19,
            column: 4
          },
          end: {
            line: 19,
            column: 42
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 19
      },
      "12": {
        loc: {
          start: {
            line: 19,
            column: 8
          },
          end: {
            line: 19,
            column: 29
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 19,
            column: 8
          },
          end: {
            line: 19,
            column: 11
          }
        }, {
          start: {
            line: 19,
            column: 15
          },
          end: {
            line: 19,
            column: 29
          }
        }],
        line: 19
      },
      "13": {
        loc: {
          start: {
            line: 21,
            column: 4
          },
          end: {
            line: 21,
            column: 141
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 21,
            column: 4
          },
          end: {
            line: 21,
            column: 141
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 21
      },
      "14": {
        loc: {
          start: {
            line: 21,
            column: 40
          },
          end: {
            line: 21,
            column: 141
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 21,
            column: 40
          },
          end: {
            line: 21,
            column: 141
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 21
      },
      "15": {
        loc: {
          start: {
            line: 21,
            column: 44
          },
          end: {
            line: 21,
            column: 107
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 21,
            column: 44
          },
          end: {
            line: 21,
            column: 59
          }
        }, {
          start: {
            line: 21,
            column: 63
          },
          end: {
            line: 21,
            column: 107
          }
        }],
        line: 21
      },
      "16": {
        loc: {
          start: {
            line: 25,
            column: 16
          },
          end: {
            line: 33,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 25,
            column: 17
          },
          end: {
            line: 25,
            column: 21
          }
        }, {
          start: {
            line: 25,
            column: 25
          },
          end: {
            line: 25,
            column: 39
          }
        }, {
          start: {
            line: 25,
            column: 44
          },
          end: {
            line: 33,
            column: 1
          }
        }],
        line: 25
      },
      "17": {
        loc: {
          start: {
            line: 26,
            column: 35
          },
          end: {
            line: 26,
            column: 109
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 26,
            column: 56
          },
          end: {
            line: 26,
            column: 61
          }
        }, {
          start: {
            line: 26,
            column: 64
          },
          end: {
            line: 26,
            column: 109
          }
        }],
        line: 26
      },
      "18": {
        loc: {
          start: {
            line: 27,
            column: 16
          },
          end: {
            line: 27,
            column: 34
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 27,
            column: 16
          },
          end: {
            line: 27,
            column: 17
          }
        }, {
          start: {
            line: 27,
            column: 22
          },
          end: {
            line: 27,
            column: 33
          }
        }],
        line: 27
      },
      "19": {
        loc: {
          start: {
            line: 30,
            column: 32
          },
          end: {
            line: 30,
            column: 115
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 30,
            column: 46
          },
          end: {
            line: 30,
            column: 67
          }
        }, {
          start: {
            line: 30,
            column: 70
          },
          end: {
            line: 30,
            column: 115
          }
        }],
        line: 30
      },
      "20": {
        loc: {
          start: {
            line: 31,
            column: 51
          },
          end: {
            line: 31,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 31,
            column: 51
          },
          end: {
            line: 31,
            column: 61
          }
        }, {
          start: {
            line: 31,
            column: 65
          },
          end: {
            line: 31,
            column: 67
          }
        }],
        line: 31
      },
      "21": {
        loc: {
          start: {
            line: 34,
            column: 22
          },
          end: {
            line: 36,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 34,
            column: 23
          },
          end: {
            line: 34,
            column: 27
          }
        }, {
          start: {
            line: 34,
            column: 31
          },
          end: {
            line: 34,
            column: 51
          }
        }, {
          start: {
            line: 34,
            column: 56
          },
          end: {
            line: 36,
            column: 1
          }
        }],
        line: 34
      },
      "22": {
        loc: {
          start: {
            line: 35,
            column: 11
          },
          end: {
            line: 35,
            column: 61
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 35,
            column: 37
          },
          end: {
            line: 35,
            column: 40
          }
        }, {
          start: {
            line: 35,
            column: 43
          },
          end: {
            line: 35,
            column: 61
          }
        }],
        line: 35
      },
      "23": {
        loc: {
          start: {
            line: 35,
            column: 12
          },
          end: {
            line: 35,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 35,
            column: 12
          },
          end: {
            line: 35,
            column: 15
          }
        }, {
          start: {
            line: 35,
            column: 19
          },
          end: {
            line: 35,
            column: 33
          }
        }],
        line: 35
      },
      "24": {
        loc: {
          start: {
            line: 53,
            column: 8
          },
          end: {
            line: 57,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 53,
            column: 8
          },
          end: {
            line: 57,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 53
      },
      "25": {
        loc: {
          start: {
            line: 53,
            column: 14
          },
          end: {
            line: 53,
            column: 77
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 53,
            column: 49
          },
          end: {
            line: 53,
            column: 55
          }
        }, {
          start: {
            line: 53,
            column: 58
          },
          end: {
            line: 53,
            column: 77
          }
        }],
        line: 53
      },
      "26": {
        loc: {
          start: {
            line: 53,
            column: 14
          },
          end: {
            line: 53,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 53,
            column: 14
          },
          end: {
            line: 53,
            column: 27
          }
        }, {
          start: {
            line: 53,
            column: 31
          },
          end: {
            line: 53,
            column: 46
          }
        }],
        line: 53
      },
      "27": {
        loc: {
          start: {
            line: 75,
            column: 8
          },
          end: {
            line: 79,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 75,
            column: 8
          },
          end: {
            line: 79,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 75
      },
      "28": {
        loc: {
          start: {
            line: 75,
            column: 14
          },
          end: {
            line: 75,
            column: 77
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 75,
            column: 49
          },
          end: {
            line: 75,
            column: 55
          }
        }, {
          start: {
            line: 75,
            column: 58
          },
          end: {
            line: 75,
            column: 77
          }
        }],
        line: 75
      },
      "29": {
        loc: {
          start: {
            line: 75,
            column: 14
          },
          end: {
            line: 75,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 75,
            column: 14
          },
          end: {
            line: 75,
            column: 27
          }
        }, {
          start: {
            line: 75,
            column: 31
          },
          end: {
            line: 75,
            column: 46
          }
        }],
        line: 75
      },
      "30": {
        loc: {
          start: {
            line: 84,
            column: 8
          },
          end: {
            line: 88,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 84,
            column: 8
          },
          end: {
            line: 88,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 84
      },
      "31": {
        loc: {
          start: {
            line: 84,
            column: 12
          },
          end: {
            line: 84,
            column: 63
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 84,
            column: 12
          },
          end: {
            line: 84,
            column: 34
          }
        }, {
          start: {
            line: 84,
            column: 38
          },
          end: {
            line: 84,
            column: 63
          }
        }],
        line: 84
      },
      "32": {
        loc: {
          start: {
            line: 102,
            column: 8
          },
          end: {
            line: 106,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 102,
            column: 8
          },
          end: {
            line: 106,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 102
      },
      "33": {
        loc: {
          start: {
            line: 102,
            column: 14
          },
          end: {
            line: 102,
            column: 77
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 102,
            column: 49
          },
          end: {
            line: 102,
            column: 55
          }
        }, {
          start: {
            line: 102,
            column: 58
          },
          end: {
            line: 102,
            column: 77
          }
        }],
        line: 102
      },
      "34": {
        loc: {
          start: {
            line: 102,
            column: 14
          },
          end: {
            line: 102,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 102,
            column: 14
          },
          end: {
            line: 102,
            column: 27
          }
        }, {
          start: {
            line: 102,
            column: 31
          },
          end: {
            line: 102,
            column: 46
          }
        }],
        line: 102
      },
      "35": {
        loc: {
          start: {
            line: 109,
            column: 8
          },
          end: {
            line: 120,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 110,
            column: 12
          },
          end: {
            line: 114,
            column: 22
          }
        }, {
          start: {
            line: 115,
            column: 12
          },
          end: {
            line: 117,
            column: 22
          }
        }, {
          start: {
            line: 118,
            column: 12
          },
          end: {
            line: 119,
            column: 76
          }
        }],
        line: 109
      },
      "36": {
        loc: {
          start: {
            line: 111,
            column: 25
          },
          end: {
            line: 113,
            column: 102
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 112,
            column: 22
          },
          end: {
            line: 112,
            column: 104
          }
        }, {
          start: {
            line: 113,
            column: 22
          },
          end: {
            line: 113,
            column: 102
          }
        }],
        line: 111
      },
      "37": {
        loc: {
          start: {
            line: 127,
            column: 8
          },
          end: {
            line: 131,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 127,
            column: 8
          },
          end: {
            line: 131,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 127
      },
      "38": {
        loc: {
          start: {
            line: 127,
            column: 12
          },
          end: {
            line: 127,
            column: 63
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 127,
            column: 12
          },
          end: {
            line: 127,
            column: 34
          }
        }, {
          start: {
            line: 127,
            column: 38
          },
          end: {
            line: 127,
            column: 63
          }
        }],
        line: 127
      },
      "39": {
        loc: {
          start: {
            line: 143,
            column: 8
          },
          end: {
            line: 147,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 143,
            column: 8
          },
          end: {
            line: 147,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 143
      },
      "40": {
        loc: {
          start: {
            line: 143,
            column: 14
          },
          end: {
            line: 143,
            column: 77
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 143,
            column: 49
          },
          end: {
            line: 143,
            column: 55
          }
        }, {
          start: {
            line: 143,
            column: 58
          },
          end: {
            line: 143,
            column: 77
          }
        }],
        line: 143
      },
      "41": {
        loc: {
          start: {
            line: 143,
            column: 14
          },
          end: {
            line: 143,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 143,
            column: 14
          },
          end: {
            line: 143,
            column: 27
          }
        }, {
          start: {
            line: 143,
            column: 31
          },
          end: {
            line: 143,
            column: 46
          }
        }],
        line: 143
      },
      "42": {
        loc: {
          start: {
            line: 148,
            column: 92
          },
          end: {
            line: 148,
            column: 123
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 148,
            column: 92
          },
          end: {
            line: 148,
            column: 117
          }
        }, {
          start: {
            line: 148,
            column: 121
          },
          end: {
            line: 148,
            column: 123
          }
        }],
        line: 148
      },
      "43": {
        loc: {
          start: {
            line: 158,
            column: 82
          },
          end: {
            line: 158,
            column: 114
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 158,
            column: 82
          },
          end: {
            line: 158,
            column: 107
          }
        }, {
          start: {
            line: 158,
            column: 111
          },
          end: {
            line: 158,
            column: 114
          }
        }],
        line: 158
      },
      "44": {
        loc: {
          start: {
            line: 170,
            column: 8
          },
          end: {
            line: 179,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 171,
            column: 12
          },
          end: {
            line: 173,
            column: 22
          }
        }, {
          start: {
            line: 174,
            column: 12
          },
          end: {
            line: 176,
            column: 22
          }
        }, {
          start: {
            line: 177,
            column: 12
          },
          end: {
            line: 178,
            column: 76
          }
        }],
        line: 170
      },
      "45": {
        loc: {
          start: {
            line: 172,
            column: 73
          },
          end: {
            line: 172,
            column: 92
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 172,
            column: 73
          },
          end: {
            line: 172,
            column: 86
          }
        }, {
          start: {
            line: 172,
            column: 90
          },
          end: {
            line: 172,
            column: 92
          }
        }],
        line: 172
      },
      "46": {
        loc: {
          start: {
            line: 175,
            column: 72
          },
          end: {
            line: 175,
            column: 90
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 175,
            column: 72
          },
          end: {
            line: 175,
            column: 85
          }
        }, {
          start: {
            line: 175,
            column: 89
          },
          end: {
            line: 175,
            column: 90
          }
        }],
        line: 175
      },
      "47": {
        loc: {
          start: {
            line: 186,
            column: 8
          },
          end: {
            line: 190,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 186,
            column: 8
          },
          end: {
            line: 190,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 186
      },
      "48": {
        loc: {
          start: {
            line: 186,
            column: 12
          },
          end: {
            line: 186,
            column: 63
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 186,
            column: 12
          },
          end: {
            line: 186,
            column: 34
          }
        }, {
          start: {
            line: 186,
            column: 38
          },
          end: {
            line: 186,
            column: 63
          }
        }],
        line: 186
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0, 0],
      "9": [0, 0],
      "10": [0, 0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0, 0],
      "45": [0, 0],
      "46": [0, 0],
      "47": [0, 0],
      "48": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/yusukeyoshioka/projects/youtube/ai-chat/ai-chat-api/src/routes/dataRetention.ts",
      mappings: "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",
      names: [],
      sources: ["/Users/yusukeyoshioka/projects/youtube/ai-chat/ai-chat-api/src/routes/dataRetention.ts"],
      sourcesContent: ["import express from 'express';\nimport { authMiddleware } from '../middleware/auth';\nimport { adminMiddleware } from '../middleware/admin';\nimport * as dataRetentionService from '../services/dataRetentionService';\nimport { prisma } from '../lib/prisma';\nimport {\n  dataRetentionPolicySchema,\n  dataRetentionCleanupSchema,\n  globalCleanupSchema,\n} from '../schemas/dataRetentionSchema';\n\nconst router = express.Router();\n\n// Get retention policy\nrouter.get('/policy', authMiddleware, async (req, res) => {\n  try {\n    // Get user's organization\n    const user = await prisma.user.findUnique({\n      where: { id: req.user!.id },\n      select: { organizationId: true },\n    });\n\n    if (!user?.organizationId) {\n      return res\n        .status(403)\n        .json({ error: 'User does not belong to an organization' });\n    }\n\n    const policy = await dataRetentionService.getOrganizationRetentionPolicy(\n      user.organizationId\n    );\n    res.json(policy);\n  } catch (error) {\n    res.status(500).json({ error: 'Failed to fetch retention policy' });\n  }\n});\n\n// Update retention policy\nrouter.put('/policy', authMiddleware, adminMiddleware, async (req, res) => {\n  try {\n    // Validate request body\n    const validatedData = dataRetentionPolicySchema.parse(req.body);\n\n    // Get user's organization\n    const user = await prisma.user.findUnique({\n      where: { id: req.user!.id },\n      select: { organizationId: true },\n    });\n\n    if (!user?.organizationId) {\n      return res\n        .status(403)\n        .json({ error: 'User does not belong to an organization' });\n    }\n\n    const policy = await dataRetentionService.updateRetentionPolicy(\n      user.organizationId,\n      validatedData\n    );\n    res.json(policy);\n  } catch (error) {\n    if (error instanceof Error && error.name === 'ZodError') {\n      return res\n        .status(400)\n        .json({ error: 'Invalid request data', details: error });\n    }\n    res.status(500).json({ error: 'Failed to update retention policy' });\n  }\n});\n\n// Manual cleanup trigger\nrouter.post('/cleanup', authMiddleware, adminMiddleware, async (req, res) => {\n  try {\n    // Validate request body\n    const { dataType } = dataRetentionCleanupSchema.parse(req.body);\n\n    // Get user's organization\n    const user = await prisma.user.findUnique({\n      where: { id: req.user!.id },\n      select: { organizationId: true },\n    });\n\n    if (!user?.organizationId) {\n      return res\n        .status(403)\n        .json({ error: 'User does not belong to an organization' });\n    }\n\n    const policy = await dataRetentionService.getOrganizationRetentionPolicy(\n      user.organizationId\n    );\n\n    let result;\n    switch (dataType) {\n      case 'chat_logs':\n        result = policy.anonymizeData\n          ? await dataRetentionService.anonymizeChatLogs(\n              user.organizationId,\n              policy.chatLogs\n            )\n          : await dataRetentionService.cleanupChatLogs(\n              user.organizationId,\n              policy.chatLogs\n            );\n        break;\n      case 'webhook_logs':\n        result = await dataRetentionService.cleanupWebhookLogs(\n          user.organizationId,\n          policy.webhookLogs\n        );\n        break;\n      default:\n        return res.status(400).json({ error: 'Invalid data type' });\n    }\n\n    res.json({\n      message: 'Cleanup completed',\n      itemsProcessed: result,\n    });\n  } catch (error) {\n    if (error instanceof Error && error.name === 'ZodError') {\n      return res\n        .status(400)\n        .json({ error: 'Invalid request data', details: error });\n    }\n    res.status(500).json({ error: 'Cleanup failed' });\n  }\n});\n\n// Get job history\nrouter.get('/jobs', authMiddleware, async (req, res) => {\n  try {\n    // Get user's organization\n    const user = await prisma.user.findUnique({\n      where: { id: req.user!.id },\n      select: { organizationId: true },\n    });\n\n    if (!user?.organizationId) {\n      return res\n        .status(403)\n        .json({ error: 'User does not belong to an organization' });\n    }\n\n    const jobs = await dataRetentionService.getRetentionJobHistory(\n      user.organizationId,\n      parseInt(req.query.limit as string) || 50\n    );\n    res.json(jobs);\n  } catch (error) {\n    res.status(500).json({ error: 'Failed to fetch job history' });\n  }\n});\n\n// Admin-only global operations\nrouter.get('/jobs/all', authMiddleware, adminMiddleware, async (req, res) => {\n  try {\n    const jobs = await dataRetentionService.getRetentionJobHistory(\n      undefined,\n      parseInt(req.query.limit as string) || 100\n    );\n    res.json(jobs);\n  } catch (error) {\n    res.status(500).json({ error: 'Failed to fetch global job history' });\n  }\n});\n\nrouter.post(\n  '/cleanup/global',\n  authMiddleware,\n  adminMiddleware,\n  async (req, res) => {\n    try {\n      // Validate request body\n      const { dataType, retentionDays } = globalCleanupSchema.parse(req.body);\n\n      let result;\n      switch (dataType) {\n        case 'system_metrics':\n          result = await dataRetentionService.cleanupSystemMetrics(\n            retentionDays || 90\n          );\n          break;\n        case 'health_checks':\n          result = await dataRetentionService.cleanupHealthChecks(\n            retentionDays || 7\n          );\n          break;\n        default:\n          return res.status(400).json({ error: 'Invalid data type' });\n      }\n\n      res.json({\n        message: 'Global cleanup completed',\n        itemsProcessed: result,\n      });\n    } catch (error) {\n      if (error instanceof Error && error.name === 'ZodError') {\n        return res\n          .status(400)\n          .json({ error: 'Invalid request data', details: error });\n      }\n      res.status(500).json({ error: 'Global cleanup failed' });\n    }\n  }\n);\n\nexport default router;\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "46b16aef8f0356d152d1a1a0f93e4ccdb90d2f7e"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1hajev5r1o = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1hajev5r1o();
var __createBinding =
/* istanbul ignore next */
(cov_1hajev5r1o().s[0]++,
/* istanbul ignore next */
(cov_1hajev5r1o().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_1hajev5r1o().b[0][1]++, this.__createBinding) ||
/* istanbul ignore next */
(cov_1hajev5r1o().b[0][2]++, Object.create ?
/* istanbul ignore next */
(cov_1hajev5r1o().b[1][0]++, function (o, m, k, k2) {
  /* istanbul ignore next */
  cov_1hajev5r1o().f[0]++;
  cov_1hajev5r1o().s[1]++;
  if (k2 === undefined) {
    /* istanbul ignore next */
    cov_1hajev5r1o().b[2][0]++;
    cov_1hajev5r1o().s[2]++;
    k2 = k;
  } else
  /* istanbul ignore next */
  {
    cov_1hajev5r1o().b[2][1]++;
  }
  var desc =
  /* istanbul ignore next */
  (cov_1hajev5r1o().s[3]++, Object.getOwnPropertyDescriptor(m, k));
  /* istanbul ignore next */
  cov_1hajev5r1o().s[4]++;
  if (
  /* istanbul ignore next */
  (cov_1hajev5r1o().b[4][0]++, !desc) ||
  /* istanbul ignore next */
  (cov_1hajev5r1o().b[4][1]++, "get" in desc ?
  /* istanbul ignore next */
  (cov_1hajev5r1o().b[5][0]++, !m.__esModule) :
  /* istanbul ignore next */
  (cov_1hajev5r1o().b[5][1]++,
  /* istanbul ignore next */
  (cov_1hajev5r1o().b[6][0]++, desc.writable) ||
  /* istanbul ignore next */
  (cov_1hajev5r1o().b[6][1]++, desc.configurable)))) {
    /* istanbul ignore next */
    cov_1hajev5r1o().b[3][0]++;
    cov_1hajev5r1o().s[5]++;
    desc = {
      enumerable: true,
      get: function () {
        /* istanbul ignore next */
        cov_1hajev5r1o().f[1]++;
        cov_1hajev5r1o().s[6]++;
        return m[k];
      }
    };
  } else
  /* istanbul ignore next */
  {
    cov_1hajev5r1o().b[3][1]++;
  }
  cov_1hajev5r1o().s[7]++;
  Object.defineProperty(o, k2, desc);
}) :
/* istanbul ignore next */
(cov_1hajev5r1o().b[1][1]++, function (o, m, k, k2) {
  /* istanbul ignore next */
  cov_1hajev5r1o().f[2]++;
  cov_1hajev5r1o().s[8]++;
  if (k2 === undefined) {
    /* istanbul ignore next */
    cov_1hajev5r1o().b[7][0]++;
    cov_1hajev5r1o().s[9]++;
    k2 = k;
  } else
  /* istanbul ignore next */
  {
    cov_1hajev5r1o().b[7][1]++;
  }
  cov_1hajev5r1o().s[10]++;
  o[k2] = m[k];
})));
var __setModuleDefault =
/* istanbul ignore next */
(cov_1hajev5r1o().s[11]++,
/* istanbul ignore next */
(cov_1hajev5r1o().b[8][0]++, this) &&
/* istanbul ignore next */
(cov_1hajev5r1o().b[8][1]++, this.__setModuleDefault) ||
/* istanbul ignore next */
(cov_1hajev5r1o().b[8][2]++, Object.create ?
/* istanbul ignore next */
(cov_1hajev5r1o().b[9][0]++, function (o, v) {
  /* istanbul ignore next */
  cov_1hajev5r1o().f[3]++;
  cov_1hajev5r1o().s[12]++;
  Object.defineProperty(o, "default", {
    enumerable: true,
    value: v
  });
}) :
/* istanbul ignore next */
(cov_1hajev5r1o().b[9][1]++, function (o, v) {
  /* istanbul ignore next */
  cov_1hajev5r1o().f[4]++;
  cov_1hajev5r1o().s[13]++;
  o["default"] = v;
})));
var __importStar =
/* istanbul ignore next */
(cov_1hajev5r1o().s[14]++,
/* istanbul ignore next */
(cov_1hajev5r1o().b[10][0]++, this) &&
/* istanbul ignore next */
(cov_1hajev5r1o().b[10][1]++, this.__importStar) ||
/* istanbul ignore next */
(cov_1hajev5r1o().b[10][2]++, function (mod) {
  /* istanbul ignore next */
  cov_1hajev5r1o().f[5]++;
  cov_1hajev5r1o().s[15]++;
  if (
  /* istanbul ignore next */
  (cov_1hajev5r1o().b[12][0]++, mod) &&
  /* istanbul ignore next */
  (cov_1hajev5r1o().b[12][1]++, mod.__esModule)) {
    /* istanbul ignore next */
    cov_1hajev5r1o().b[11][0]++;
    cov_1hajev5r1o().s[16]++;
    return mod;
  } else
  /* istanbul ignore next */
  {
    cov_1hajev5r1o().b[11][1]++;
  }
  var result =
  /* istanbul ignore next */
  (cov_1hajev5r1o().s[17]++, {});
  /* istanbul ignore next */
  cov_1hajev5r1o().s[18]++;
  if (mod != null) {
    /* istanbul ignore next */
    cov_1hajev5r1o().b[13][0]++;
    cov_1hajev5r1o().s[19]++;
    for (var k in mod) {
      /* istanbul ignore next */
      cov_1hajev5r1o().s[20]++;
      if (
      /* istanbul ignore next */
      (cov_1hajev5r1o().b[15][0]++, k !== "default") &&
      /* istanbul ignore next */
      (cov_1hajev5r1o().b[15][1]++, Object.prototype.hasOwnProperty.call(mod, k))) {
        /* istanbul ignore next */
        cov_1hajev5r1o().b[14][0]++;
        cov_1hajev5r1o().s[21]++;
        __createBinding(result, mod, k);
      } else
      /* istanbul ignore next */
      {
        cov_1hajev5r1o().b[14][1]++;
      }
    }
  } else
  /* istanbul ignore next */
  {
    cov_1hajev5r1o().b[13][1]++;
  }
  cov_1hajev5r1o().s[22]++;
  __setModuleDefault(result, mod);
  /* istanbul ignore next */
  cov_1hajev5r1o().s[23]++;
  return result;
}));
var __awaiter =
/* istanbul ignore next */
(cov_1hajev5r1o().s[24]++,
/* istanbul ignore next */
(cov_1hajev5r1o().b[16][0]++, this) &&
/* istanbul ignore next */
(cov_1hajev5r1o().b[16][1]++, this.__awaiter) ||
/* istanbul ignore next */
(cov_1hajev5r1o().b[16][2]++, function (thisArg, _arguments, P, generator) {
  /* istanbul ignore next */
  cov_1hajev5r1o().f[6]++;
  function adopt(value) {
    /* istanbul ignore next */
    cov_1hajev5r1o().f[7]++;
    cov_1hajev5r1o().s[25]++;
    return value instanceof P ?
    /* istanbul ignore next */
    (cov_1hajev5r1o().b[17][0]++, value) :
    /* istanbul ignore next */
    (cov_1hajev5r1o().b[17][1]++, new P(function (resolve) {
      /* istanbul ignore next */
      cov_1hajev5r1o().f[8]++;
      cov_1hajev5r1o().s[26]++;
      resolve(value);
    }));
  }
  /* istanbul ignore next */
  cov_1hajev5r1o().s[27]++;
  return new (
  /* istanbul ignore next */
  (cov_1hajev5r1o().b[18][0]++, P) ||
  /* istanbul ignore next */
  (cov_1hajev5r1o().b[18][1]++, P = Promise))(function (resolve, reject) {
    /* istanbul ignore next */
    cov_1hajev5r1o().f[9]++;
    function fulfilled(value) {
      /* istanbul ignore next */
      cov_1hajev5r1o().f[10]++;
      cov_1hajev5r1o().s[28]++;
      try {
        /* istanbul ignore next */
        cov_1hajev5r1o().s[29]++;
        step(generator.next(value));
      } catch (e) {
        /* istanbul ignore next */
        cov_1hajev5r1o().s[30]++;
        reject(e);
      }
    }
    function rejected(value) {
      /* istanbul ignore next */
      cov_1hajev5r1o().f[11]++;
      cov_1hajev5r1o().s[31]++;
      try {
        /* istanbul ignore next */
        cov_1hajev5r1o().s[32]++;
        step(generator["throw"](value));
      } catch (e) {
        /* istanbul ignore next */
        cov_1hajev5r1o().s[33]++;
        reject(e);
      }
    }
    function step(result) {
      /* istanbul ignore next */
      cov_1hajev5r1o().f[12]++;
      cov_1hajev5r1o().s[34]++;
      result.done ?
      /* istanbul ignore next */
      (cov_1hajev5r1o().b[19][0]++, resolve(result.value)) :
      /* istanbul ignore next */
      (cov_1hajev5r1o().b[19][1]++, adopt(result.value).then(fulfilled, rejected));
    }
    /* istanbul ignore next */
    cov_1hajev5r1o().s[35]++;
    step((generator = generator.apply(thisArg,
    /* istanbul ignore next */
    (cov_1hajev5r1o().b[20][0]++, _arguments) ||
    /* istanbul ignore next */
    (cov_1hajev5r1o().b[20][1]++, []))).next());
  });
}));
var __importDefault =
/* istanbul ignore next */
(cov_1hajev5r1o().s[36]++,
/* istanbul ignore next */
(cov_1hajev5r1o().b[21][0]++, this) &&
/* istanbul ignore next */
(cov_1hajev5r1o().b[21][1]++, this.__importDefault) ||
/* istanbul ignore next */
(cov_1hajev5r1o().b[21][2]++, function (mod) {
  /* istanbul ignore next */
  cov_1hajev5r1o().f[13]++;
  cov_1hajev5r1o().s[37]++;
  return /* istanbul ignore next */(cov_1hajev5r1o().b[23][0]++, mod) &&
  /* istanbul ignore next */
  (cov_1hajev5r1o().b[23][1]++, mod.__esModule) ?
  /* istanbul ignore next */
  (cov_1hajev5r1o().b[22][0]++, mod) :
  /* istanbul ignore next */
  (cov_1hajev5r1o().b[22][1]++, {
    "default": mod
  });
}));
/* istanbul ignore next */
cov_1hajev5r1o().s[38]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
const express_1 =
/* istanbul ignore next */
(cov_1hajev5r1o().s[39]++, __importDefault(require("express")));
const auth_1 =
/* istanbul ignore next */
(cov_1hajev5r1o().s[40]++, require("../middleware/auth"));
const admin_1 =
/* istanbul ignore next */
(cov_1hajev5r1o().s[41]++, require("../middleware/admin"));
const dataRetentionService =
/* istanbul ignore next */
(cov_1hajev5r1o().s[42]++, __importStar(require("../services/dataRetentionService")));
const prisma_1 =
/* istanbul ignore next */
(cov_1hajev5r1o().s[43]++, require("../lib/prisma"));
const dataRetentionSchema_1 =
/* istanbul ignore next */
(cov_1hajev5r1o().s[44]++, require("../schemas/dataRetentionSchema"));
const router =
/* istanbul ignore next */
(cov_1hajev5r1o().s[45]++, express_1.default.Router());
// Get retention policy
/* istanbul ignore next */
cov_1hajev5r1o().s[46]++;
router.get('/policy', auth_1.authMiddleware, (req, res) => {
  /* istanbul ignore next */
  cov_1hajev5r1o().f[14]++;
  cov_1hajev5r1o().s[47]++;
  return __awaiter(void 0, void 0, void 0, function* () {
    /* istanbul ignore next */
    cov_1hajev5r1o().f[15]++;
    cov_1hajev5r1o().s[48]++;
    try {
      // Get user's organization
      const user =
      /* istanbul ignore next */
      (cov_1hajev5r1o().s[49]++, yield prisma_1.prisma.user.findUnique({
        where: {
          id: req.user.id
        },
        select: {
          organizationId: true
        }
      }));
      /* istanbul ignore next */
      cov_1hajev5r1o().s[50]++;
      if (!(
      /* istanbul ignore next */
      (cov_1hajev5r1o().b[26][0]++, user === null) ||
      /* istanbul ignore next */
      (cov_1hajev5r1o().b[26][1]++, user === void 0) ?
      /* istanbul ignore next */
      (cov_1hajev5r1o().b[25][0]++, void 0) :
      /* istanbul ignore next */
      (cov_1hajev5r1o().b[25][1]++, user.organizationId))) {
        /* istanbul ignore next */
        cov_1hajev5r1o().b[24][0]++;
        cov_1hajev5r1o().s[51]++;
        return res.status(403).json({
          error: 'User does not belong to an organization'
        });
      } else
      /* istanbul ignore next */
      {
        cov_1hajev5r1o().b[24][1]++;
      }
      const policy =
      /* istanbul ignore next */
      (cov_1hajev5r1o().s[52]++, yield dataRetentionService.getOrganizationRetentionPolicy(user.organizationId));
      /* istanbul ignore next */
      cov_1hajev5r1o().s[53]++;
      res.json(policy);
    } catch (error) {
      /* istanbul ignore next */
      cov_1hajev5r1o().s[54]++;
      res.status(500).json({
        error: 'Failed to fetch retention policy'
      });
    }
  });
});
// Update retention policy
/* istanbul ignore next */
cov_1hajev5r1o().s[55]++;
router.put('/policy', auth_1.authMiddleware, admin_1.adminMiddleware, (req, res) => {
  /* istanbul ignore next */
  cov_1hajev5r1o().f[16]++;
  cov_1hajev5r1o().s[56]++;
  return __awaiter(void 0, void 0, void 0, function* () {
    /* istanbul ignore next */
    cov_1hajev5r1o().f[17]++;
    cov_1hajev5r1o().s[57]++;
    try {
      // Validate request body
      const validatedData =
      /* istanbul ignore next */
      (cov_1hajev5r1o().s[58]++, dataRetentionSchema_1.dataRetentionPolicySchema.parse(req.body));
      // Get user's organization
      const user =
      /* istanbul ignore next */
      (cov_1hajev5r1o().s[59]++, yield prisma_1.prisma.user.findUnique({
        where: {
          id: req.user.id
        },
        select: {
          organizationId: true
        }
      }));
      /* istanbul ignore next */
      cov_1hajev5r1o().s[60]++;
      if (!(
      /* istanbul ignore next */
      (cov_1hajev5r1o().b[29][0]++, user === null) ||
      /* istanbul ignore next */
      (cov_1hajev5r1o().b[29][1]++, user === void 0) ?
      /* istanbul ignore next */
      (cov_1hajev5r1o().b[28][0]++, void 0) :
      /* istanbul ignore next */
      (cov_1hajev5r1o().b[28][1]++, user.organizationId))) {
        /* istanbul ignore next */
        cov_1hajev5r1o().b[27][0]++;
        cov_1hajev5r1o().s[61]++;
        return res.status(403).json({
          error: 'User does not belong to an organization'
        });
      } else
      /* istanbul ignore next */
      {
        cov_1hajev5r1o().b[27][1]++;
      }
      const policy =
      /* istanbul ignore next */
      (cov_1hajev5r1o().s[62]++, yield dataRetentionService.updateRetentionPolicy(user.organizationId, validatedData));
      /* istanbul ignore next */
      cov_1hajev5r1o().s[63]++;
      res.json(policy);
    } catch (error) {
      /* istanbul ignore next */
      cov_1hajev5r1o().s[64]++;
      if (
      /* istanbul ignore next */
      (cov_1hajev5r1o().b[31][0]++, error instanceof Error) &&
      /* istanbul ignore next */
      (cov_1hajev5r1o().b[31][1]++, error.name === 'ZodError')) {
        /* istanbul ignore next */
        cov_1hajev5r1o().b[30][0]++;
        cov_1hajev5r1o().s[65]++;
        return res.status(400).json({
          error: 'Invalid request data',
          details: error
        });
      } else
      /* istanbul ignore next */
      {
        cov_1hajev5r1o().b[30][1]++;
      }
      cov_1hajev5r1o().s[66]++;
      res.status(500).json({
        error: 'Failed to update retention policy'
      });
    }
  });
});
// Manual cleanup trigger
/* istanbul ignore next */
cov_1hajev5r1o().s[67]++;
router.post('/cleanup', auth_1.authMiddleware, admin_1.adminMiddleware, (req, res) => {
  /* istanbul ignore next */
  cov_1hajev5r1o().f[18]++;
  cov_1hajev5r1o().s[68]++;
  return __awaiter(void 0, void 0, void 0, function* () {
    /* istanbul ignore next */
    cov_1hajev5r1o().f[19]++;
    cov_1hajev5r1o().s[69]++;
    try {
      // Validate request body
      const {
        dataType
      } =
      /* istanbul ignore next */
      (cov_1hajev5r1o().s[70]++, dataRetentionSchema_1.dataRetentionCleanupSchema.parse(req.body));
      // Get user's organization
      const user =
      /* istanbul ignore next */
      (cov_1hajev5r1o().s[71]++, yield prisma_1.prisma.user.findUnique({
        where: {
          id: req.user.id
        },
        select: {
          organizationId: true
        }
      }));
      /* istanbul ignore next */
      cov_1hajev5r1o().s[72]++;
      if (!(
      /* istanbul ignore next */
      (cov_1hajev5r1o().b[34][0]++, user === null) ||
      /* istanbul ignore next */
      (cov_1hajev5r1o().b[34][1]++, user === void 0) ?
      /* istanbul ignore next */
      (cov_1hajev5r1o().b[33][0]++, void 0) :
      /* istanbul ignore next */
      (cov_1hajev5r1o().b[33][1]++, user.organizationId))) {
        /* istanbul ignore next */
        cov_1hajev5r1o().b[32][0]++;
        cov_1hajev5r1o().s[73]++;
        return res.status(403).json({
          error: 'User does not belong to an organization'
        });
      } else
      /* istanbul ignore next */
      {
        cov_1hajev5r1o().b[32][1]++;
      }
      const policy =
      /* istanbul ignore next */
      (cov_1hajev5r1o().s[74]++, yield dataRetentionService.getOrganizationRetentionPolicy(user.organizationId));
      let result;
      /* istanbul ignore next */
      cov_1hajev5r1o().s[75]++;
      switch (dataType) {
        case 'chat_logs':
          /* istanbul ignore next */
          cov_1hajev5r1o().b[35][0]++;
          cov_1hajev5r1o().s[76]++;
          result = policy.anonymizeData ?
          /* istanbul ignore next */
          (cov_1hajev5r1o().b[36][0]++, yield dataRetentionService.anonymizeChatLogs(user.organizationId, policy.chatLogs)) :
          /* istanbul ignore next */
          (cov_1hajev5r1o().b[36][1]++, yield dataRetentionService.cleanupChatLogs(user.organizationId, policy.chatLogs));
          /* istanbul ignore next */
          cov_1hajev5r1o().s[77]++;
          break;
        case 'webhook_logs':
          /* istanbul ignore next */
          cov_1hajev5r1o().b[35][1]++;
          cov_1hajev5r1o().s[78]++;
          result = yield dataRetentionService.cleanupWebhookLogs(user.organizationId, policy.webhookLogs);
          /* istanbul ignore next */
          cov_1hajev5r1o().s[79]++;
          break;
        default:
          /* istanbul ignore next */
          cov_1hajev5r1o().b[35][2]++;
          cov_1hajev5r1o().s[80]++;
          return res.status(400).json({
            error: 'Invalid data type'
          });
      }
      /* istanbul ignore next */
      cov_1hajev5r1o().s[81]++;
      res.json({
        message: 'Cleanup completed',
        itemsProcessed: result
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_1hajev5r1o().s[82]++;
      if (
      /* istanbul ignore next */
      (cov_1hajev5r1o().b[38][0]++, error instanceof Error) &&
      /* istanbul ignore next */
      (cov_1hajev5r1o().b[38][1]++, error.name === 'ZodError')) {
        /* istanbul ignore next */
        cov_1hajev5r1o().b[37][0]++;
        cov_1hajev5r1o().s[83]++;
        return res.status(400).json({
          error: 'Invalid request data',
          details: error
        });
      } else
      /* istanbul ignore next */
      {
        cov_1hajev5r1o().b[37][1]++;
      }
      cov_1hajev5r1o().s[84]++;
      res.status(500).json({
        error: 'Cleanup failed'
      });
    }
  });
});
// Get job history
/* istanbul ignore next */
cov_1hajev5r1o().s[85]++;
router.get('/jobs', auth_1.authMiddleware, (req, res) => {
  /* istanbul ignore next */
  cov_1hajev5r1o().f[20]++;
  cov_1hajev5r1o().s[86]++;
  return __awaiter(void 0, void 0, void 0, function* () {
    /* istanbul ignore next */
    cov_1hajev5r1o().f[21]++;
    cov_1hajev5r1o().s[87]++;
    try {
      // Get user's organization
      const user =
      /* istanbul ignore next */
      (cov_1hajev5r1o().s[88]++, yield prisma_1.prisma.user.findUnique({
        where: {
          id: req.user.id
        },
        select: {
          organizationId: true
        }
      }));
      /* istanbul ignore next */
      cov_1hajev5r1o().s[89]++;
      if (!(
      /* istanbul ignore next */
      (cov_1hajev5r1o().b[41][0]++, user === null) ||
      /* istanbul ignore next */
      (cov_1hajev5r1o().b[41][1]++, user === void 0) ?
      /* istanbul ignore next */
      (cov_1hajev5r1o().b[40][0]++, void 0) :
      /* istanbul ignore next */
      (cov_1hajev5r1o().b[40][1]++, user.organizationId))) {
        /* istanbul ignore next */
        cov_1hajev5r1o().b[39][0]++;
        cov_1hajev5r1o().s[90]++;
        return res.status(403).json({
          error: 'User does not belong to an organization'
        });
      } else
      /* istanbul ignore next */
      {
        cov_1hajev5r1o().b[39][1]++;
      }
      const jobs =
      /* istanbul ignore next */
      (cov_1hajev5r1o().s[91]++, yield dataRetentionService.getRetentionJobHistory(user.organizationId,
      /* istanbul ignore next */
      (cov_1hajev5r1o().b[42][0]++, parseInt(req.query.limit)) ||
      /* istanbul ignore next */
      (cov_1hajev5r1o().b[42][1]++, 50)));
      /* istanbul ignore next */
      cov_1hajev5r1o().s[92]++;
      res.json(jobs);
    } catch (error) {
      /* istanbul ignore next */
      cov_1hajev5r1o().s[93]++;
      res.status(500).json({
        error: 'Failed to fetch job history'
      });
    }
  });
});
// Admin-only global operations
/* istanbul ignore next */
cov_1hajev5r1o().s[94]++;
router.get('/jobs/all', auth_1.authMiddleware, admin_1.adminMiddleware, (req, res) => {
  /* istanbul ignore next */
  cov_1hajev5r1o().f[22]++;
  cov_1hajev5r1o().s[95]++;
  return __awaiter(void 0, void 0, void 0, function* () {
    /* istanbul ignore next */
    cov_1hajev5r1o().f[23]++;
    cov_1hajev5r1o().s[96]++;
    try {
      const jobs =
      /* istanbul ignore next */
      (cov_1hajev5r1o().s[97]++, yield dataRetentionService.getRetentionJobHistory(undefined,
      /* istanbul ignore next */
      (cov_1hajev5r1o().b[43][0]++, parseInt(req.query.limit)) ||
      /* istanbul ignore next */
      (cov_1hajev5r1o().b[43][1]++, 100)));
      /* istanbul ignore next */
      cov_1hajev5r1o().s[98]++;
      res.json(jobs);
    } catch (error) {
      /* istanbul ignore next */
      cov_1hajev5r1o().s[99]++;
      res.status(500).json({
        error: 'Failed to fetch global job history'
      });
    }
  });
});
/* istanbul ignore next */
cov_1hajev5r1o().s[100]++;
router.post('/cleanup/global', auth_1.authMiddleware, admin_1.adminMiddleware, (req, res) => {
  /* istanbul ignore next */
  cov_1hajev5r1o().f[24]++;
  cov_1hajev5r1o().s[101]++;
  return __awaiter(void 0, void 0, void 0, function* () {
    /* istanbul ignore next */
    cov_1hajev5r1o().f[25]++;
    cov_1hajev5r1o().s[102]++;
    try {
      // Validate request body
      const {
        dataType,
        retentionDays
      } =
      /* istanbul ignore next */
      (cov_1hajev5r1o().s[103]++, dataRetentionSchema_1.globalCleanupSchema.parse(req.body));
      let result;
      /* istanbul ignore next */
      cov_1hajev5r1o().s[104]++;
      switch (dataType) {
        case 'system_metrics':
          /* istanbul ignore next */
          cov_1hajev5r1o().b[44][0]++;
          cov_1hajev5r1o().s[105]++;
          result = yield dataRetentionService.cleanupSystemMetrics(
          /* istanbul ignore next */
          (cov_1hajev5r1o().b[45][0]++, retentionDays) ||
          /* istanbul ignore next */
          (cov_1hajev5r1o().b[45][1]++, 90));
          /* istanbul ignore next */
          cov_1hajev5r1o().s[106]++;
          break;
        case 'health_checks':
          /* istanbul ignore next */
          cov_1hajev5r1o().b[44][1]++;
          cov_1hajev5r1o().s[107]++;
          result = yield dataRetentionService.cleanupHealthChecks(
          /* istanbul ignore next */
          (cov_1hajev5r1o().b[46][0]++, retentionDays) ||
          /* istanbul ignore next */
          (cov_1hajev5r1o().b[46][1]++, 7));
          /* istanbul ignore next */
          cov_1hajev5r1o().s[108]++;
          break;
        default:
          /* istanbul ignore next */
          cov_1hajev5r1o().b[44][2]++;
          cov_1hajev5r1o().s[109]++;
          return res.status(400).json({
            error: 'Invalid data type'
          });
      }
      /* istanbul ignore next */
      cov_1hajev5r1o().s[110]++;
      res.json({
        message: 'Global cleanup completed',
        itemsProcessed: result
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_1hajev5r1o().s[111]++;
      if (
      /* istanbul ignore next */
      (cov_1hajev5r1o().b[48][0]++, error instanceof Error) &&
      /* istanbul ignore next */
      (cov_1hajev5r1o().b[48][1]++, error.name === 'ZodError')) {
        /* istanbul ignore next */
        cov_1hajev5r1o().b[47][0]++;
        cov_1hajev5r1o().s[112]++;
        return res.status(400).json({
          error: 'Invalid request data',
          details: error
        });
      } else
      /* istanbul ignore next */
      {
        cov_1hajev5r1o().b[47][1]++;
      }
      cov_1hajev5r1o().s[113]++;
      res.status(500).json({
        error: 'Global cleanup failed'
      });
    }
  });
});
/* istanbul ignore next */
cov_1hajev5r1o().s[114]++;
exports.default = router;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,