{"version":3,"names":["cov_1r3ktp5pq1","actualCoverage","express_1","s","require","auth_1","prisma_1","router","Router","exports","companyRoutes","get","authMiddleware","req","res","f","__awaiter","userId","b","_a","user","id","status","json","error","prisma","findUnique","where","include","company","select","name","email","plan","companies","console"],"sources":["/Users/yusukeyoshioka/projects/youtube/ai-chat/ai-chat-api/src/routes/companies.ts"],"sourcesContent":["import { Router, Request, Response } from 'express';\nimport { authMiddleware } from '../middleware/auth';\nimport { prisma } from '../lib/prisma';\n\nconst router = Router();\n\n// Get companies for authenticated user\nrouter.get('/', authMiddleware, async (req: Request, res: Response) => {\n  try {\n    const userId = req.user?.id;\n\n    if (!userId) {\n      return res.status(401).json({ error: 'Authentication required' });\n    }\n\n    // Get user's company\n    const user = await prisma.user.findUnique({\n      where: { id: userId },\n      include: {\n        company: {\n          select: {\n            id: true,\n            name: true,\n            email: true,\n            plan: true,\n          },\n        },\n      },\n    });\n\n    if (!user || !user.company) {\n      return res.status(404).json({ error: 'No company association found' });\n    }\n\n    // For now, return the user's company as an array\n    // In the future, this could support multiple companies per user\n    const companies = [user.company];\n\n    res.json(companies);\n  } catch (error) {\n    console.error('Get companies error:', error);\n    res.status(500).json({ error: 'Internal server error' });\n  }\n});\n\nexport { router as companyRoutes };\n"],"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","ignoreList":[]}