{"file":"/Users/yusukeyoshioka/projects/youtube/ai-chat/ai-chat-api/src/lib/sentry.ts","mappings":"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","names":[],"sources":["/Users/yusukeyoshioka/projects/youtube/ai-chat/ai-chat-api/src/lib/sentry.ts"],"sourcesContent":["import * as Sentry from '@sentry/node';\nimport { nodeProfilingIntegration } from '@sentry/profiling-node';\n\nexport interface AlertMetrics {\n  responseTime: number;\n  errorRate: number;\n  timestamp: Date;\n}\n\nclass MetricsCollector {\n  private static instance: MetricsCollector;\n  private responseTimeBuffer: number[] = [];\n  private errorCount = 0;\n  private requestCount = 0;\n  private windowStartTime = Date.now();\n  private readonly WINDOW_SIZE_MS = 60000; // 1 minute\n  private readonly BUFFER_SIZE = 100;\n\n  static getInstance(): MetricsCollector {\n    if (!MetricsCollector.instance) {\n      MetricsCollector.instance = new MetricsCollector();\n    }\n    return MetricsCollector.instance;\n  }\n\n  recordResponseTime(responseTime: number) {\n    this.responseTimeBuffer.push(responseTime);\n    if (this.responseTimeBuffer.length > this.BUFFER_SIZE) {\n      this.responseTimeBuffer.shift();\n    }\n    this.requestCount++;\n    this.checkWindowReset();\n  }\n\n  recordError() {\n    this.errorCount++;\n    this.checkWindowReset();\n  }\n\n  private checkWindowReset() {\n    const now = Date.now();\n    if (now - this.windowStartTime >= this.WINDOW_SIZE_MS) {\n      this.checkAlertConditions();\n      this.resetWindow();\n    }\n  }\n\n  private resetWindow() {\n    this.errorCount = 0;\n    this.requestCount = 0;\n    this.windowStartTime = Date.now();\n  }\n\n  private checkAlertConditions() {\n    const p95ResponseTime = this.calculateP95();\n    const errorRate =\n      this.requestCount > 0 ? (this.errorCount / this.requestCount) * 100 : 0;\n\n    if (p95ResponseTime > 1000 || errorRate > 1) {\n      this.sendSlackAlert({\n        responseTime: p95ResponseTime,\n        errorRate,\n        timestamp: new Date(),\n      });\n    }\n  }\n\n  private calculateP95(): number {\n    if (this.responseTimeBuffer.length === 0) return 0;\n\n    const sorted = [...this.responseTimeBuffer].sort((a, b) => a - b);\n    const index = Math.ceil(sorted.length * 0.95) - 1;\n    return sorted[index] || 0;\n  }\n\n  private async sendSlackAlert(metrics: AlertMetrics) {\n    const webhookUrl = process.env.SLACK_WEBHOOK_URL;\n    if (!webhookUrl) {\n      console.warn('SLACK_WEBHOOK_URL not configured');\n      return;\n    }\n\n    const message = {\n      text: '🚨 Performance Alert',\n      blocks: [\n        {\n          type: 'section',\n          text: {\n            type: 'mrkdwn',\n            text: '*🚨 AI Chat Performance Alert*',\n          },\n        },\n        {\n          type: 'section',\n          fields: [\n            {\n              type: 'mrkdwn',\n              text: `*P95 Response Time:*\\n${metrics.responseTime.toFixed(2)}ms`,\n            },\n            {\n              type: 'mrkdwn',\n              text: `*Error Rate:*\\n${metrics.errorRate.toFixed(2)}%`,\n            },\n            {\n              type: 'mrkdwn',\n              text: `*Timestamp:*\\n${metrics.timestamp.toISOString()}`,\n            },\n            {\n              type: 'mrkdwn',\n              text: `*Environment:*\\n${process.env.NODE_ENV || 'unknown'}`,\n            },\n          ],\n        },\n        {\n          type: 'section',\n          text: {\n            type: 'mrkdwn',\n            text:\n              metrics.responseTime > 1000\n                ? '⚠️ P95 response time exceeded 1 second threshold'\n                : '⚠️ Error rate exceeded 1% threshold',\n          },\n        },\n        {\n          type: 'actions',\n          elements: [\n            {\n              type: 'button',\n              text: {\n                type: 'plain_text',\n                text: 'View Sentry Dashboard',\n              },\n              url: `https://sentry.io/organizations/${process.env.SENTRY_ORG}/projects/${process.env.SENTRY_PROJECT}/`,\n              action_id: 'view_sentry',\n            },\n          ],\n        },\n      ],\n    };\n\n    try {\n      const response = await fetch(webhookUrl, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(message),\n      });\n\n      if (!response.ok) {\n        throw new Error(`Slack API error: ${response.status}`);\n      }\n\n      console.log('Slack alert sent successfully');\n    } catch (error) {\n      console.error('Failed to send Slack alert:', error);\n      Sentry.captureException(error);\n    }\n  }\n\n  getMetrics(): AlertMetrics {\n    return {\n      responseTime: this.calculateP95(),\n      errorRate:\n        this.requestCount > 0 ? (this.errorCount / this.requestCount) * 100 : 0,\n      timestamp: new Date(),\n    };\n  }\n}\n\nexport function initSentry() {\n  if (!process.env.SENTRY_DSN) {\n    console.warn('SENTRY_DSN not configured, skipping Sentry initialization');\n    return;\n  }\n\n  Sentry.init({\n    dsn: process.env.SENTRY_DSN,\n    environment: process.env.NODE_ENV || 'development',\n    integrations: [\n      nodeProfilingIntegration(),\n      Sentry.httpIntegration({ breadcrumbs: true }),\n      Sentry.expressIntegration(),\n      Sentry.mongooseIntegration(),\n      Sentry.prismaIntegration(),\n    ],\n    tracesSampleRate: process.env.NODE_ENV === 'production' ? 0.1 : 1.0,\n    profilesSampleRate: process.env.NODE_ENV === 'production' ? 0.1 : 1.0,\n    beforeSend(event) {\n      // Don't send events for handled errors in development\n      if (process.env.NODE_ENV === 'development' && event.level === 'error') {\n        console.error('Sentry event (dev):', event);\n        return null;\n      }\n      return event;\n    },\n  });\n\n  console.log('Sentry initialized');\n}\n\nexport const metricsCollector = MetricsCollector.getInstance();\n"],"version":3}