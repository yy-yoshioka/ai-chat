9b465d8a204558b405e687d00b717ce5
"use strict";

/* istanbul ignore next */
function cov_1rpiiwdka4() {
  var path = "/Users/yusukeyoshioka/projects/youtube/ai-chat/ai-chat-api/src/services/organizationService.ts";
  var hash = "0ff83fa5232c8b43d02f53ab2e56ada45a9089ca";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/yusukeyoshioka/projects/youtube/ai-chat/ai-chat-api/src/services/organizationService.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 16
        },
        end: {
          line: 10,
          column: 1
        }
      },
      "1": {
        start: {
          line: 3,
          column: 28
        },
        end: {
          line: 3,
          column: 110
        }
      },
      "2": {
        start: {
          line: 3,
          column: 91
        },
        end: {
          line: 3,
          column: 106
        }
      },
      "3": {
        start: {
          line: 4,
          column: 4
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "4": {
        start: {
          line: 5,
          column: 36
        },
        end: {
          line: 5,
          column: 97
        }
      },
      "5": {
        start: {
          line: 5,
          column: 42
        },
        end: {
          line: 5,
          column: 70
        }
      },
      "6": {
        start: {
          line: 5,
          column: 85
        },
        end: {
          line: 5,
          column: 95
        }
      },
      "7": {
        start: {
          line: 6,
          column: 35
        },
        end: {
          line: 6,
          column: 100
        }
      },
      "8": {
        start: {
          line: 6,
          column: 41
        },
        end: {
          line: 6,
          column: 73
        }
      },
      "9": {
        start: {
          line: 6,
          column: 88
        },
        end: {
          line: 6,
          column: 98
        }
      },
      "10": {
        start: {
          line: 7,
          column: 32
        },
        end: {
          line: 7,
          column: 116
        }
      },
      "11": {
        start: {
          line: 8,
          column: 8
        },
        end: {
          line: 8,
          column: 78
        }
      },
      "12": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 11,
          column: 62
        }
      },
      "13": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 12,
          column: 128
        }
      },
      "14": {
        start: {
          line: 13,
          column: 17
        },
        end: {
          line: 13,
          column: 41
        }
      },
      "15": {
        start: {
          line: 14,
          column: 29
        },
        end: {
          line: 48,
          column: 2
        }
      },
      "16": {
        start: {
          line: 14,
          column: 41
        },
        end: {
          line: 48,
          column: 2
        }
      },
      "17": {
        start: {
          line: 15,
          column: 4
        },
        end: {
          line: 47,
          column: 7
        }
      },
      "18": {
        start: {
          line: 49,
          column: 0
        },
        end: {
          line: 49,
          column: 52
        }
      },
      "19": {
        start: {
          line: 50,
          column: 28
        },
        end: {
          line: 98,
          column: 2
        }
      },
      "20": {
        start: {
          line: 50,
          column: 44
        },
        end: {
          line: 98,
          column: 2
        }
      },
      "21": {
        start: {
          line: 51,
          column: 25
        },
        end: {
          line: 93,
          column: 6
        }
      },
      "22": {
        start: {
          line: 94,
          column: 4
        },
        end: {
          line: 96,
          column: 5
        }
      },
      "23": {
        start: {
          line: 95,
          column: 8
        },
        end: {
          line: 95,
          column: 67
        }
      },
      "24": {
        start: {
          line: 97,
          column: 4
        },
        end: {
          line: 97,
          column: 24
        }
      },
      "25": {
        start: {
          line: 99,
          column: 0
        },
        end: {
          line: 99,
          column: 50
        }
      },
      "26": {
        start: {
          line: 100,
          column: 27
        },
        end: {
          line: 126,
          column: 2
        }
      },
      "27": {
        start: {
          line: 100,
          column: 49
        },
        end: {
          line: 126,
          column: 2
        }
      },
      "28": {
        start: {
          line: 102,
          column: 25
        },
        end: {
          line: 114,
          column: 6
        }
      },
      "29": {
        start: {
          line: 115,
          column: 4
        },
        end: {
          line: 117,
          column: 5
        }
      },
      "30": {
        start: {
          line: 116,
          column: 8
        },
        end: {
          line: 116,
          column: 78
        }
      },
      "31": {
        start: {
          line: 118,
          column: 4
        },
        end: {
          line: 125,
          column: 7
        }
      },
      "32": {
        start: {
          line: 127,
          column: 0
        },
        end: {
          line: 127,
          column: 48
        }
      },
      "33": {
        start: {
          line: 128,
          column: 29
        },
        end: {
          line: 177,
          column: 2
        }
      },
      "34": {
        start: {
          line: 128,
          column: 49
        },
        end: {
          line: 177,
          column: 2
        }
      },
      "35": {
        start: {
          line: 129,
          column: 82
        },
        end: {
          line: 169,
          column: 6
        }
      },
      "36": {
        start: {
          line: 170,
          column: 4
        },
        end: {
          line: 176,
          column: 6
        }
      },
      "37": {
        start: {
          line: 178,
          column: 0
        },
        end: {
          line: 178,
          column: 52
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 44
          },
          end: {
            line: 2,
            column: 45
          }
        },
        loc: {
          start: {
            line: 2,
            column: 89
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "adopt",
        decl: {
          start: {
            line: 3,
            column: 13
          },
          end: {
            line: 3,
            column: 18
          }
        },
        loc: {
          start: {
            line: 3,
            column: 26
          },
          end: {
            line: 3,
            column: 112
          }
        },
        line: 3
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 3,
            column: 70
          },
          end: {
            line: 3,
            column: 71
          }
        },
        loc: {
          start: {
            line: 3,
            column: 89
          },
          end: {
            line: 3,
            column: 108
          }
        },
        line: 3
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 4,
            column: 36
          },
          end: {
            line: 4,
            column: 37
          }
        },
        loc: {
          start: {
            line: 4,
            column: 63
          },
          end: {
            line: 9,
            column: 5
          }
        },
        line: 4
      },
      "4": {
        name: "fulfilled",
        decl: {
          start: {
            line: 5,
            column: 17
          },
          end: {
            line: 5,
            column: 26
          }
        },
        loc: {
          start: {
            line: 5,
            column: 34
          },
          end: {
            line: 5,
            column: 99
          }
        },
        line: 5
      },
      "5": {
        name: "rejected",
        decl: {
          start: {
            line: 6,
            column: 17
          },
          end: {
            line: 6,
            column: 25
          }
        },
        loc: {
          start: {
            line: 6,
            column: 33
          },
          end: {
            line: 6,
            column: 102
          }
        },
        line: 6
      },
      "6": {
        name: "step",
        decl: {
          start: {
            line: 7,
            column: 17
          },
          end: {
            line: 7,
            column: 21
          }
        },
        loc: {
          start: {
            line: 7,
            column: 30
          },
          end: {
            line: 7,
            column: 118
          }
        },
        line: 7
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 14,
            column: 29
          },
          end: {
            line: 14,
            column: 30
          }
        },
        loc: {
          start: {
            line: 14,
            column: 41
          },
          end: {
            line: 48,
            column: 2
          }
        },
        line: 14
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 14,
            column: 75
          },
          end: {
            line: 14,
            column: 76
          }
        },
        loc: {
          start: {
            line: 14,
            column: 88
          },
          end: {
            line: 48,
            column: 1
          }
        },
        line: 14
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 50,
            column: 28
          },
          end: {
            line: 50,
            column: 29
          }
        },
        loc: {
          start: {
            line: 50,
            column: 44
          },
          end: {
            line: 98,
            column: 2
          }
        },
        line: 50
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 50,
            column: 78
          },
          end: {
            line: 50,
            column: 79
          }
        },
        loc: {
          start: {
            line: 50,
            column: 91
          },
          end: {
            line: 98,
            column: 1
          }
        },
        line: 50
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 100,
            column: 27
          },
          end: {
            line: 100,
            column: 28
          }
        },
        loc: {
          start: {
            line: 100,
            column: 49
          },
          end: {
            line: 126,
            column: 2
          }
        },
        line: 100
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 100,
            column: 83
          },
          end: {
            line: 100,
            column: 84
          }
        },
        loc: {
          start: {
            line: 100,
            column: 96
          },
          end: {
            line: 126,
            column: 1
          }
        },
        line: 100
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 128,
            column: 29
          },
          end: {
            line: 128,
            column: 30
          }
        },
        loc: {
          start: {
            line: 128,
            column: 49
          },
          end: {
            line: 177,
            column: 2
          }
        },
        line: 128
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 128,
            column: 83
          },
          end: {
            line: 128,
            column: 84
          }
        },
        loc: {
          start: {
            line: 128,
            column: 96
          },
          end: {
            line: 177,
            column: 1
          }
        },
        line: 128
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 16
          },
          end: {
            line: 10,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 17
          },
          end: {
            line: 2,
            column: 21
          }
        }, {
          start: {
            line: 2,
            column: 25
          },
          end: {
            line: 2,
            column: 39
          }
        }, {
          start: {
            line: 2,
            column: 44
          },
          end: {
            line: 10,
            column: 1
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 3,
            column: 35
          },
          end: {
            line: 3,
            column: 109
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 3,
            column: 56
          },
          end: {
            line: 3,
            column: 61
          }
        }, {
          start: {
            line: 3,
            column: 64
          },
          end: {
            line: 3,
            column: 109
          }
        }],
        line: 3
      },
      "2": {
        loc: {
          start: {
            line: 4,
            column: 16
          },
          end: {
            line: 4,
            column: 34
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 4,
            column: 16
          },
          end: {
            line: 4,
            column: 17
          }
        }, {
          start: {
            line: 4,
            column: 22
          },
          end: {
            line: 4,
            column: 33
          }
        }],
        line: 4
      },
      "3": {
        loc: {
          start: {
            line: 7,
            column: 32
          },
          end: {
            line: 7,
            column: 115
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 7,
            column: 46
          },
          end: {
            line: 7,
            column: 67
          }
        }, {
          start: {
            line: 7,
            column: 70
          },
          end: {
            line: 7,
            column: 115
          }
        }],
        line: 7
      },
      "4": {
        loc: {
          start: {
            line: 8,
            column: 51
          },
          end: {
            line: 8,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 8,
            column: 51
          },
          end: {
            line: 8,
            column: 61
          }
        }, {
          start: {
            line: 8,
            column: 65
          },
          end: {
            line: 8,
            column: 67
          }
        }],
        line: 8
      },
      "5": {
        loc: {
          start: {
            line: 94,
            column: 4
          },
          end: {
            line: 96,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 94,
            column: 4
          },
          end: {
            line: 96,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 94
      },
      "6": {
        loc: {
          start: {
            line: 115,
            column: 4
          },
          end: {
            line: 117,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 115,
            column: 4
          },
          end: {
            line: 117,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 115
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/yusukeyoshioka/projects/youtube/ai-chat/ai-chat-api/src/services/organizationService.ts",
      mappings: "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",
      names: [],
      sources: ["/Users/yusukeyoshioka/projects/youtube/ai-chat/ai-chat-api/src/services/organizationService.ts"],
      sourcesContent: ["import { prisma } from '../lib/prisma';\n\nexport const getUserOrganizations = async (userId: string) => {\n  return prisma.organization.findMany({\n    where: {\n      users: {\n        some: {\n          id: userId,\n        },\n      },\n    },\n    include: {\n      _count: {\n        select: {\n          users: true,\n          companies: {\n            where: {\n              widgets: {\n                some: {},\n              },\n            },\n          },\n        },\n      },\n      companies: {\n        include: {\n          _count: {\n            select: {\n              widgets: true,\n            },\n          },\n        },\n      },\n    },\n    orderBy: { createdAt: 'desc' },\n  });\n};\n\nexport const getOrganizationById = async (id: string, userId: string) => {\n  const organization = await prisma.organization.findFirst({\n    where: {\n      id,\n      users: {\n        some: {\n          id: userId,\n        },\n      },\n    },\n    include: {\n      users: {\n        select: {\n          id: true,\n          email: true,\n          name: true,\n          roles: true,\n        },\n      },\n      companies: {\n        include: {\n          widgets: {\n            select: {\n              id: true,\n              name: true,\n              isActive: true,\n              createdAt: true,\n            },\n          },\n          _count: {\n            select: {\n              widgets: true,\n              users: true,\n            },\n          },\n        },\n      },\n      _count: {\n        select: {\n          users: true,\n        },\n      },\n    },\n  });\n\n  if (!organization) {\n    throw new Error('Organization not found or access denied');\n  }\n\n  return organization;\n};\n\nexport const updateOrganization = async (\n  id: string,\n  userId: string,\n  data: {\n    name?: string;\n    settings?: Record<string, unknown>;\n  }\n) => {\n  // Check if user has permission to update\n  const organization = await prisma.organization.findFirst({\n    where: {\n      id,\n      users: {\n        some: {\n          id: userId,\n          roles: {\n            hasSome: ['owner', 'org_admin'],\n          },\n        },\n      },\n    },\n  });\n\n  if (!organization) {\n    throw new Error('Organization not found or insufficient permissions');\n  }\n\n  return prisma.organization.update({\n    where: { id },\n    data: {\n      name: data.name,\n      settings: data.settings as any,\n      updatedAt: new Date(),\n    },\n  });\n};\n\nexport const getOrganizationStats = async (organizationId: string) => {\n  const [userCount, widgetCount, activeWidgetCount, totalChats, monthlyChats] =\n    await Promise.all([\n      prisma.user.count({\n        where: { organizationId },\n      }),\n      prisma.widget.count({\n        where: {\n          company: {\n            organizationId,\n          },\n        },\n      }),\n      prisma.widget.count({\n        where: {\n          company: {\n            organizationId,\n          },\n          isActive: true,\n        },\n      }),\n      prisma.chatLog.count({\n        where: {\n          widget: {\n            company: {\n              organizationId,\n            },\n          },\n        },\n      }),\n      prisma.chatLog.count({\n        where: {\n          widget: {\n            company: {\n              organizationId,\n            },\n          },\n          createdAt: {\n            gte: new Date(Date.now() - 30 * 24 * 60 * 60 * 1000), // Last 30 days\n          },\n        },\n      }),\n    ]);\n\n  return {\n    userCount,\n    widgetCount,\n    activeWidgetCount,\n    totalChats,\n    monthlyChats,\n  };\n};\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "0ff83fa5232c8b43d02f53ab2e56ada45a9089ca"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1rpiiwdka4 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1rpiiwdka4();
var __awaiter =
/* istanbul ignore next */
(cov_1rpiiwdka4().s[0]++,
/* istanbul ignore next */
(cov_1rpiiwdka4().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_1rpiiwdka4().b[0][1]++, this.__awaiter) ||
/* istanbul ignore next */
(cov_1rpiiwdka4().b[0][2]++, function (thisArg, _arguments, P, generator) {
  /* istanbul ignore next */
  cov_1rpiiwdka4().f[0]++;
  function adopt(value) {
    /* istanbul ignore next */
    cov_1rpiiwdka4().f[1]++;
    cov_1rpiiwdka4().s[1]++;
    return value instanceof P ?
    /* istanbul ignore next */
    (cov_1rpiiwdka4().b[1][0]++, value) :
    /* istanbul ignore next */
    (cov_1rpiiwdka4().b[1][1]++, new P(function (resolve) {
      /* istanbul ignore next */
      cov_1rpiiwdka4().f[2]++;
      cov_1rpiiwdka4().s[2]++;
      resolve(value);
    }));
  }
  /* istanbul ignore next */
  cov_1rpiiwdka4().s[3]++;
  return new (
  /* istanbul ignore next */
  (cov_1rpiiwdka4().b[2][0]++, P) ||
  /* istanbul ignore next */
  (cov_1rpiiwdka4().b[2][1]++, P = Promise))(function (resolve, reject) {
    /* istanbul ignore next */
    cov_1rpiiwdka4().f[3]++;
    function fulfilled(value) {
      /* istanbul ignore next */
      cov_1rpiiwdka4().f[4]++;
      cov_1rpiiwdka4().s[4]++;
      try {
        /* istanbul ignore next */
        cov_1rpiiwdka4().s[5]++;
        step(generator.next(value));
      } catch (e) {
        /* istanbul ignore next */
        cov_1rpiiwdka4().s[6]++;
        reject(e);
      }
    }
    function rejected(value) {
      /* istanbul ignore next */
      cov_1rpiiwdka4().f[5]++;
      cov_1rpiiwdka4().s[7]++;
      try {
        /* istanbul ignore next */
        cov_1rpiiwdka4().s[8]++;
        step(generator["throw"](value));
      } catch (e) {
        /* istanbul ignore next */
        cov_1rpiiwdka4().s[9]++;
        reject(e);
      }
    }
    function step(result) {
      /* istanbul ignore next */
      cov_1rpiiwdka4().f[6]++;
      cov_1rpiiwdka4().s[10]++;
      result.done ?
      /* istanbul ignore next */
      (cov_1rpiiwdka4().b[3][0]++, resolve(result.value)) :
      /* istanbul ignore next */
      (cov_1rpiiwdka4().b[3][1]++, adopt(result.value).then(fulfilled, rejected));
    }
    /* istanbul ignore next */
    cov_1rpiiwdka4().s[11]++;
    step((generator = generator.apply(thisArg,
    /* istanbul ignore next */
    (cov_1rpiiwdka4().b[4][0]++, _arguments) ||
    /* istanbul ignore next */
    (cov_1rpiiwdka4().b[4][1]++, []))).next());
  });
}));
/* istanbul ignore next */
cov_1rpiiwdka4().s[12]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1rpiiwdka4().s[13]++;
exports.getOrganizationStats = exports.updateOrganization = exports.getOrganizationById = exports.getUserOrganizations = void 0;
const prisma_1 =
/* istanbul ignore next */
(cov_1rpiiwdka4().s[14]++, require("../lib/prisma"));
/* istanbul ignore next */
cov_1rpiiwdka4().s[15]++;
const getUserOrganizations = userId => {
  /* istanbul ignore next */
  cov_1rpiiwdka4().f[7]++;
  cov_1rpiiwdka4().s[16]++;
  return __awaiter(void 0, void 0, void 0, function* () {
    /* istanbul ignore next */
    cov_1rpiiwdka4().f[8]++;
    cov_1rpiiwdka4().s[17]++;
    return prisma_1.prisma.organization.findMany({
      where: {
        users: {
          some: {
            id: userId
          }
        }
      },
      include: {
        _count: {
          select: {
            users: true,
            companies: {
              where: {
                widgets: {
                  some: {}
                }
              }
            }
          }
        },
        companies: {
          include: {
            _count: {
              select: {
                widgets: true
              }
            }
          }
        }
      },
      orderBy: {
        createdAt: 'desc'
      }
    });
  });
};
/* istanbul ignore next */
cov_1rpiiwdka4().s[18]++;
exports.getUserOrganizations = getUserOrganizations;
/* istanbul ignore next */
cov_1rpiiwdka4().s[19]++;
const getOrganizationById = (id, userId) => {
  /* istanbul ignore next */
  cov_1rpiiwdka4().f[9]++;
  cov_1rpiiwdka4().s[20]++;
  return __awaiter(void 0, void 0, void 0, function* () {
    /* istanbul ignore next */
    cov_1rpiiwdka4().f[10]++;
    const organization =
    /* istanbul ignore next */
    (cov_1rpiiwdka4().s[21]++, yield prisma_1.prisma.organization.findFirst({
      where: {
        id,
        users: {
          some: {
            id: userId
          }
        }
      },
      include: {
        users: {
          select: {
            id: true,
            email: true,
            name: true,
            roles: true
          }
        },
        companies: {
          include: {
            widgets: {
              select: {
                id: true,
                name: true,
                isActive: true,
                createdAt: true
              }
            },
            _count: {
              select: {
                widgets: true,
                users: true
              }
            }
          }
        },
        _count: {
          select: {
            users: true
          }
        }
      }
    }));
    /* istanbul ignore next */
    cov_1rpiiwdka4().s[22]++;
    if (!organization) {
      /* istanbul ignore next */
      cov_1rpiiwdka4().b[5][0]++;
      cov_1rpiiwdka4().s[23]++;
      throw new Error('Organization not found or access denied');
    } else
    /* istanbul ignore next */
    {
      cov_1rpiiwdka4().b[5][1]++;
    }
    cov_1rpiiwdka4().s[24]++;
    return organization;
  });
};
/* istanbul ignore next */
cov_1rpiiwdka4().s[25]++;
exports.getOrganizationById = getOrganizationById;
/* istanbul ignore next */
cov_1rpiiwdka4().s[26]++;
const updateOrganization = (id, userId, data) => {
  /* istanbul ignore next */
  cov_1rpiiwdka4().f[11]++;
  cov_1rpiiwdka4().s[27]++;
  return __awaiter(void 0, void 0, void 0, function* () {
    /* istanbul ignore next */
    cov_1rpiiwdka4().f[12]++;
    // Check if user has permission to update
    const organization =
    /* istanbul ignore next */
    (cov_1rpiiwdka4().s[28]++, yield prisma_1.prisma.organization.findFirst({
      where: {
        id,
        users: {
          some: {
            id: userId,
            roles: {
              hasSome: ['owner', 'org_admin']
            }
          }
        }
      }
    }));
    /* istanbul ignore next */
    cov_1rpiiwdka4().s[29]++;
    if (!organization) {
      /* istanbul ignore next */
      cov_1rpiiwdka4().b[6][0]++;
      cov_1rpiiwdka4().s[30]++;
      throw new Error('Organization not found or insufficient permissions');
    } else
    /* istanbul ignore next */
    {
      cov_1rpiiwdka4().b[6][1]++;
    }
    cov_1rpiiwdka4().s[31]++;
    return prisma_1.prisma.organization.update({
      where: {
        id
      },
      data: {
        name: data.name,
        settings: data.settings,
        updatedAt: new Date()
      }
    });
  });
};
/* istanbul ignore next */
cov_1rpiiwdka4().s[32]++;
exports.updateOrganization = updateOrganization;
/* istanbul ignore next */
cov_1rpiiwdka4().s[33]++;
const getOrganizationStats = organizationId => {
  /* istanbul ignore next */
  cov_1rpiiwdka4().f[13]++;
  cov_1rpiiwdka4().s[34]++;
  return __awaiter(void 0, void 0, void 0, function* () {
    /* istanbul ignore next */
    cov_1rpiiwdka4().f[14]++;
    const [userCount, widgetCount, activeWidgetCount, totalChats, monthlyChats] =
    /* istanbul ignore next */
    (cov_1rpiiwdka4().s[35]++, yield Promise.all([prisma_1.prisma.user.count({
      where: {
        organizationId
      }
    }), prisma_1.prisma.widget.count({
      where: {
        company: {
          organizationId
        }
      }
    }), prisma_1.prisma.widget.count({
      where: {
        company: {
          organizationId
        },
        isActive: true
      }
    }), prisma_1.prisma.chatLog.count({
      where: {
        widget: {
          company: {
            organizationId
          }
        }
      }
    }), prisma_1.prisma.chatLog.count({
      where: {
        widget: {
          company: {
            organizationId
          }
        },
        createdAt: {
          gte: new Date(Date.now() - 30 * 24 * 60 * 60 * 1000) // Last 30 days
        }
      }
    })]));
    /* istanbul ignore next */
    cov_1rpiiwdka4().s[36]++;
    return {
      userCount,
      widgetCount,
      activeWidgetCount,
      totalChats,
      monthlyChats
    };
  });
};
/* istanbul ignore next */
cov_1rpiiwdka4().s[37]++;
exports.getOrganizationStats = getOrganizationStats;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMXJwaWl3ZGthNCIsImFjdHVhbENvdmVyYWdlIiwicHJpc21hXzEiLCJzIiwicmVxdWlyZSIsImdldFVzZXJPcmdhbml6YXRpb25zIiwidXNlcklkIiwiZiIsIl9fYXdhaXRlciIsInByaXNtYSIsIm9yZ2FuaXphdGlvbiIsImZpbmRNYW55Iiwid2hlcmUiLCJ1c2VycyIsInNvbWUiLCJpZCIsImluY2x1ZGUiLCJfY291bnQiLCJzZWxlY3QiLCJjb21wYW5pZXMiLCJ3aWRnZXRzIiwib3JkZXJCeSIsImNyZWF0ZWRBdCIsImV4cG9ydHMiLCJnZXRPcmdhbml6YXRpb25CeUlkIiwiZmluZEZpcnN0IiwiZW1haWwiLCJuYW1lIiwicm9sZXMiLCJpc0FjdGl2ZSIsImIiLCJFcnJvciIsInVwZGF0ZU9yZ2FuaXphdGlvbiIsImRhdGEiLCJoYXNTb21lIiwidXBkYXRlIiwic2V0dGluZ3MiLCJ1cGRhdGVkQXQiLCJEYXRlIiwiZ2V0T3JnYW5pemF0aW9uU3RhdHMiLCJvcmdhbml6YXRpb25JZCIsInVzZXJDb3VudCIsIndpZGdldENvdW50IiwiYWN0aXZlV2lkZ2V0Q291bnQiLCJ0b3RhbENoYXRzIiwibW9udGhseUNoYXRzIiwiUHJvbWlzZSIsImFsbCIsInVzZXIiLCJjb3VudCIsIndpZGdldCIsImNvbXBhbnkiLCJjaGF0TG9nIiwiZ3RlIiwibm93Il0sInNvdXJjZXMiOlsiL1VzZXJzL3l1c3VrZXlvc2hpb2thL3Byb2plY3RzL3lvdXR1YmUvYWktY2hhdC9haS1jaGF0LWFwaS9zcmMvc2VydmljZXMvb3JnYW5pemF0aW9uU2VydmljZS50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBwcmlzbWEgfSBmcm9tICcuLi9saWIvcHJpc21hJztcblxuZXhwb3J0IGNvbnN0IGdldFVzZXJPcmdhbml6YXRpb25zID0gYXN5bmMgKHVzZXJJZDogc3RyaW5nKSA9PiB7XG4gIHJldHVybiBwcmlzbWEub3JnYW5pemF0aW9uLmZpbmRNYW55KHtcbiAgICB3aGVyZToge1xuICAgICAgdXNlcnM6IHtcbiAgICAgICAgc29tZToge1xuICAgICAgICAgIGlkOiB1c2VySWQsXG4gICAgICAgIH0sXG4gICAgICB9LFxuICAgIH0sXG4gICAgaW5jbHVkZToge1xuICAgICAgX2NvdW50OiB7XG4gICAgICAgIHNlbGVjdDoge1xuICAgICAgICAgIHVzZXJzOiB0cnVlLFxuICAgICAgICAgIGNvbXBhbmllczoge1xuICAgICAgICAgICAgd2hlcmU6IHtcbiAgICAgICAgICAgICAgd2lkZ2V0czoge1xuICAgICAgICAgICAgICAgIHNvbWU6IHt9LFxuICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICB9LFxuICAgICAgICB9LFxuICAgICAgfSxcbiAgICAgIGNvbXBhbmllczoge1xuICAgICAgICBpbmNsdWRlOiB7XG4gICAgICAgICAgX2NvdW50OiB7XG4gICAgICAgICAgICBzZWxlY3Q6IHtcbiAgICAgICAgICAgICAgd2lkZ2V0czogdHJ1ZSxcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgfSxcbiAgICAgICAgfSxcbiAgICAgIH0sXG4gICAgfSxcbiAgICBvcmRlckJ5OiB7IGNyZWF0ZWRBdDogJ2Rlc2MnIH0sXG4gIH0pO1xufTtcblxuZXhwb3J0IGNvbnN0IGdldE9yZ2FuaXphdGlvbkJ5SWQgPSBhc3luYyAoaWQ6IHN0cmluZywgdXNlcklkOiBzdHJpbmcpID0+IHtcbiAgY29uc3Qgb3JnYW5pemF0aW9uID0gYXdhaXQgcHJpc21hLm9yZ2FuaXphdGlvbi5maW5kRmlyc3Qoe1xuICAgIHdoZXJlOiB7XG4gICAgICBpZCxcbiAgICAgIHVzZXJzOiB7XG4gICAgICAgIHNvbWU6IHtcbiAgICAgICAgICBpZDogdXNlcklkLFxuICAgICAgICB9LFxuICAgICAgfSxcbiAgICB9LFxuICAgIGluY2x1ZGU6IHtcbiAgICAgIHVzZXJzOiB7XG4gICAgICAgIHNlbGVjdDoge1xuICAgICAgICAgIGlkOiB0cnVlLFxuICAgICAgICAgIGVtYWlsOiB0cnVlLFxuICAgICAgICAgIG5hbWU6IHRydWUsXG4gICAgICAgICAgcm9sZXM6IHRydWUsXG4gICAgICAgIH0sXG4gICAgICB9LFxuICAgICAgY29tcGFuaWVzOiB7XG4gICAgICAgIGluY2x1ZGU6IHtcbiAgICAgICAgICB3aWRnZXRzOiB7XG4gICAgICAgICAgICBzZWxlY3Q6IHtcbiAgICAgICAgICAgICAgaWQ6IHRydWUsXG4gICAgICAgICAgICAgIG5hbWU6IHRydWUsXG4gICAgICAgICAgICAgIGlzQWN0aXZlOiB0cnVlLFxuICAgICAgICAgICAgICBjcmVhdGVkQXQ6IHRydWUsXG4gICAgICAgICAgICB9LFxuICAgICAgICAgIH0sXG4gICAgICAgICAgX2NvdW50OiB7XG4gICAgICAgICAgICBzZWxlY3Q6IHtcbiAgICAgICAgICAgICAgd2lkZ2V0czogdHJ1ZSxcbiAgICAgICAgICAgICAgdXNlcnM6IHRydWUsXG4gICAgICAgICAgICB9LFxuICAgICAgICAgIH0sXG4gICAgICAgIH0sXG4gICAgICB9LFxuICAgICAgX2NvdW50OiB7XG4gICAgICAgIHNlbGVjdDoge1xuICAgICAgICAgIHVzZXJzOiB0cnVlLFxuICAgICAgICB9LFxuICAgICAgfSxcbiAgICB9LFxuICB9KTtcblxuICBpZiAoIW9yZ2FuaXphdGlvbikge1xuICAgIHRocm93IG5ldyBFcnJvcignT3JnYW5pemF0aW9uIG5vdCBmb3VuZCBvciBhY2Nlc3MgZGVuaWVkJyk7XG4gIH1cblxuICByZXR1cm4gb3JnYW5pemF0aW9uO1xufTtcblxuZXhwb3J0IGNvbnN0IHVwZGF0ZU9yZ2FuaXphdGlvbiA9IGFzeW5jIChcbiAgaWQ6IHN0cmluZyxcbiAgdXNlcklkOiBzdHJpbmcsXG4gIGRhdGE6IHtcbiAgICBuYW1lPzogc3RyaW5nO1xuICAgIHNldHRpbmdzPzogUmVjb3JkPHN0cmluZywgdW5rbm93bj47XG4gIH1cbikgPT4ge1xuICAvLyBDaGVjayBpZiB1c2VyIGhhcyBwZXJtaXNzaW9uIHRvIHVwZGF0ZVxuICBjb25zdCBvcmdhbml6YXRpb24gPSBhd2FpdCBwcmlzbWEub3JnYW5pemF0aW9uLmZpbmRGaXJzdCh7XG4gICAgd2hlcmU6IHtcbiAgICAgIGlkLFxuICAgICAgdXNlcnM6IHtcbiAgICAgICAgc29tZToge1xuICAgICAgICAgIGlkOiB1c2VySWQsXG4gICAgICAgICAgcm9sZXM6IHtcbiAgICAgICAgICAgIGhhc1NvbWU6IFsnb3duZXInLCAnb3JnX2FkbWluJ10sXG4gICAgICAgICAgfSxcbiAgICAgICAgfSxcbiAgICAgIH0sXG4gICAgfSxcbiAgfSk7XG5cbiAgaWYgKCFvcmdhbml6YXRpb24pIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ09yZ2FuaXphdGlvbiBub3QgZm91bmQgb3IgaW5zdWZmaWNpZW50IHBlcm1pc3Npb25zJyk7XG4gIH1cblxuICByZXR1cm4gcHJpc21hLm9yZ2FuaXphdGlvbi51cGRhdGUoe1xuICAgIHdoZXJlOiB7IGlkIH0sXG4gICAgZGF0YToge1xuICAgICAgbmFtZTogZGF0YS5uYW1lLFxuICAgICAgc2V0dGluZ3M6IGRhdGEuc2V0dGluZ3MgYXMgYW55LFxuICAgICAgdXBkYXRlZEF0OiBuZXcgRGF0ZSgpLFxuICAgIH0sXG4gIH0pO1xufTtcblxuZXhwb3J0IGNvbnN0IGdldE9yZ2FuaXphdGlvblN0YXRzID0gYXN5bmMgKG9yZ2FuaXphdGlvbklkOiBzdHJpbmcpID0+IHtcbiAgY29uc3QgW3VzZXJDb3VudCwgd2lkZ2V0Q291bnQsIGFjdGl2ZVdpZGdldENvdW50LCB0b3RhbENoYXRzLCBtb250aGx5Q2hhdHNdID1cbiAgICBhd2FpdCBQcm9taXNlLmFsbChbXG4gICAgICBwcmlzbWEudXNlci5jb3VudCh7XG4gICAgICAgIHdoZXJlOiB7IG9yZ2FuaXphdGlvbklkIH0sXG4gICAgICB9KSxcbiAgICAgIHByaXNtYS53aWRnZXQuY291bnQoe1xuICAgICAgICB3aGVyZToge1xuICAgICAgICAgIGNvbXBhbnk6IHtcbiAgICAgICAgICAgIG9yZ2FuaXphdGlvbklkLFxuICAgICAgICAgIH0sXG4gICAgICAgIH0sXG4gICAgICB9KSxcbiAgICAgIHByaXNtYS53aWRnZXQuY291bnQoe1xuICAgICAgICB3aGVyZToge1xuICAgICAgICAgIGNvbXBhbnk6IHtcbiAgICAgICAgICAgIG9yZ2FuaXphdGlvbklkLFxuICAgICAgICAgIH0sXG4gICAgICAgICAgaXNBY3RpdmU6IHRydWUsXG4gICAgICAgIH0sXG4gICAgICB9KSxcbiAgICAgIHByaXNtYS5jaGF0TG9nLmNvdW50KHtcbiAgICAgICAgd2hlcmU6IHtcbiAgICAgICAgICB3aWRnZXQ6IHtcbiAgICAgICAgICAgIGNvbXBhbnk6IHtcbiAgICAgICAgICAgICAgb3JnYW5pemF0aW9uSWQsXG4gICAgICAgICAgICB9LFxuICAgICAgICAgIH0sXG4gICAgICAgIH0sXG4gICAgICB9KSxcbiAgICAgIHByaXNtYS5jaGF0TG9nLmNvdW50KHtcbiAgICAgICAgd2hlcmU6IHtcbiAgICAgICAgICB3aWRnZXQ6IHtcbiAgICAgICAgICAgIGNvbXBhbnk6IHtcbiAgICAgICAgICAgICAgb3JnYW5pemF0aW9uSWQsXG4gICAgICAgICAgICB9LFxuICAgICAgICAgIH0sXG4gICAgICAgICAgY3JlYXRlZEF0OiB7XG4gICAgICAgICAgICBndGU6IG5ldyBEYXRlKERhdGUubm93KCkgLSAzMCAqIDI0ICogNjAgKiA2MCAqIDEwMDApLCAvLyBMYXN0IDMwIGRheXNcbiAgICAgICAgICB9LFxuICAgICAgICB9LFxuICAgICAgfSksXG4gICAgXSk7XG5cbiAgcmV0dXJuIHtcbiAgICB1c2VyQ291bnQsXG4gICAgd2lkZ2V0Q291bnQsXG4gICAgYWN0aXZlV2lkZ2V0Q291bnQsXG4gICAgdG90YWxDaGF0cyxcbiAgICBtb250aGx5Q2hhdHMsXG4gIH07XG59O1xuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7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