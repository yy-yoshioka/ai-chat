5ddda6fe66b7aed94541ca7447bb179d
"use strict";

/* istanbul ignore next */
function cov_1qyyxvqdwo() {
  var path = "/Users/yusukeyoshioka/projects/youtube/ai-chat/ai-chat-api/src/routes/dashboard.ts";
  var hash = "06c73d1c778ccf4dc39fd659d548edf7c0db2ef8";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/yusukeyoshioka/projects/youtube/ai-chat/ai-chat-api/src/routes/dashboard.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 16
        },
        end: {
          line: 10,
          column: 1
        }
      },
      "1": {
        start: {
          line: 3,
          column: 28
        },
        end: {
          line: 3,
          column: 110
        }
      },
      "2": {
        start: {
          line: 3,
          column: 91
        },
        end: {
          line: 3,
          column: 106
        }
      },
      "3": {
        start: {
          line: 4,
          column: 4
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "4": {
        start: {
          line: 5,
          column: 36
        },
        end: {
          line: 5,
          column: 97
        }
      },
      "5": {
        start: {
          line: 5,
          column: 42
        },
        end: {
          line: 5,
          column: 70
        }
      },
      "6": {
        start: {
          line: 5,
          column: 85
        },
        end: {
          line: 5,
          column: 95
        }
      },
      "7": {
        start: {
          line: 6,
          column: 35
        },
        end: {
          line: 6,
          column: 100
        }
      },
      "8": {
        start: {
          line: 6,
          column: 41
        },
        end: {
          line: 6,
          column: 73
        }
      },
      "9": {
        start: {
          line: 6,
          column: 88
        },
        end: {
          line: 6,
          column: 98
        }
      },
      "10": {
        start: {
          line: 7,
          column: 32
        },
        end: {
          line: 7,
          column: 116
        }
      },
      "11": {
        start: {
          line: 8,
          column: 8
        },
        end: {
          line: 8,
          column: 78
        }
      },
      "12": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 11,
          column: 62
        }
      },
      "13": {
        start: {
          line: 12,
          column: 18
        },
        end: {
          line: 12,
          column: 36
        }
      },
      "14": {
        start: {
          line: 13,
          column: 15
        },
        end: {
          line: 13,
          column: 44
        }
      },
      "15": {
        start: {
          line: 14,
          column: 18
        },
        end: {
          line: 14,
          column: 50
        }
      },
      "16": {
        start: {
          line: 15,
          column: 17
        },
        end: {
          line: 15,
          column: 41
        }
      },
      "17": {
        start: {
          line: 16,
          column: 15
        },
        end: {
          line: 16,
          column: 38
        }
      },
      "18": {
        start: {
          line: 17,
          column: 0
        },
        end: {
          line: 17,
          column: 34
        }
      },
      "19": {
        start: {
          line: 18,
          column: 0
        },
        end: {
          line: 18,
          column: 40
        }
      },
      "20": {
        start: {
          line: 19,
          column: 0
        },
        end: {
          line: 61,
          column: 4
        }
      },
      "21": {
        start: {
          line: 19,
          column: 30
        },
        end: {
          line: 61,
          column: 2
        }
      },
      "22": {
        start: {
          line: 20,
          column: 4
        },
        end: {
          line: 60,
          column: 5
        }
      },
      "23": {
        start: {
          line: 21,
          column: 35
        },
        end: {
          line: 21,
          column: 77
        }
      },
      "24": {
        start: {
          line: 22,
          column: 55
        },
        end: {
          line: 45,
          column: 10
        }
      },
      "25": {
        start: {
          line: 46,
          column: 32
        },
        end: {
          line: 46,
          column: 35
        }
      },
      "26": {
        start: {
          line: 47,
          column: 31
        },
        end: {
          line: 47,
          column: 49
        }
      },
      "27": {
        start: {
          line: 48,
          column: 26
        },
        end: {
          line: 48,
          column: 30
        }
      },
      "28": {
        start: {
          line: 49,
          column: 8
        },
        end: {
          line: 55,
          column: 11
        }
      },
      "29": {
        start: {
          line: 58,
          column: 8
        },
        end: {
          line: 58,
          column: 49
        }
      },
      "30": {
        start: {
          line: 59,
          column: 8
        },
        end: {
          line: 59,
          column: 74
        }
      },
      "31": {
        start: {
          line: 62,
          column: 0
        },
        end: {
          line: 62,
          column: 25
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 44
          },
          end: {
            line: 2,
            column: 45
          }
        },
        loc: {
          start: {
            line: 2,
            column: 89
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "adopt",
        decl: {
          start: {
            line: 3,
            column: 13
          },
          end: {
            line: 3,
            column: 18
          }
        },
        loc: {
          start: {
            line: 3,
            column: 26
          },
          end: {
            line: 3,
            column: 112
          }
        },
        line: 3
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 3,
            column: 70
          },
          end: {
            line: 3,
            column: 71
          }
        },
        loc: {
          start: {
            line: 3,
            column: 89
          },
          end: {
            line: 3,
            column: 108
          }
        },
        line: 3
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 4,
            column: 36
          },
          end: {
            line: 4,
            column: 37
          }
        },
        loc: {
          start: {
            line: 4,
            column: 63
          },
          end: {
            line: 9,
            column: 5
          }
        },
        line: 4
      },
      "4": {
        name: "fulfilled",
        decl: {
          start: {
            line: 5,
            column: 17
          },
          end: {
            line: 5,
            column: 26
          }
        },
        loc: {
          start: {
            line: 5,
            column: 34
          },
          end: {
            line: 5,
            column: 99
          }
        },
        line: 5
      },
      "5": {
        name: "rejected",
        decl: {
          start: {
            line: 6,
            column: 17
          },
          end: {
            line: 6,
            column: 25
          }
        },
        loc: {
          start: {
            line: 6,
            column: 33
          },
          end: {
            line: 6,
            column: 102
          }
        },
        line: 6
      },
      "6": {
        name: "step",
        decl: {
          start: {
            line: 7,
            column: 17
          },
          end: {
            line: 7,
            column: 21
          }
        },
        loc: {
          start: {
            line: 7,
            column: 30
          },
          end: {
            line: 7,
            column: 118
          }
        },
        line: 7
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 19,
            column: 16
          },
          end: {
            line: 19,
            column: 17
          }
        },
        loc: {
          start: {
            line: 19,
            column: 30
          },
          end: {
            line: 61,
            column: 2
          }
        },
        line: 19
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 19,
            column: 64
          },
          end: {
            line: 19,
            column: 65
          }
        },
        loc: {
          start: {
            line: 19,
            column: 77
          },
          end: {
            line: 61,
            column: 1
          }
        },
        line: 19
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 16
          },
          end: {
            line: 10,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 17
          },
          end: {
            line: 2,
            column: 21
          }
        }, {
          start: {
            line: 2,
            column: 25
          },
          end: {
            line: 2,
            column: 39
          }
        }, {
          start: {
            line: 2,
            column: 44
          },
          end: {
            line: 10,
            column: 1
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 3,
            column: 35
          },
          end: {
            line: 3,
            column: 109
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 3,
            column: 56
          },
          end: {
            line: 3,
            column: 61
          }
        }, {
          start: {
            line: 3,
            column: 64
          },
          end: {
            line: 3,
            column: 109
          }
        }],
        line: 3
      },
      "2": {
        loc: {
          start: {
            line: 4,
            column: 16
          },
          end: {
            line: 4,
            column: 34
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 4,
            column: 16
          },
          end: {
            line: 4,
            column: 17
          }
        }, {
          start: {
            line: 4,
            column: 22
          },
          end: {
            line: 4,
            column: 33
          }
        }],
        line: 4
      },
      "3": {
        loc: {
          start: {
            line: 7,
            column: 32
          },
          end: {
            line: 7,
            column: 115
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 7,
            column: 46
          },
          end: {
            line: 7,
            column: 67
          }
        }, {
          start: {
            line: 7,
            column: 70
          },
          end: {
            line: 7,
            column: 115
          }
        }],
        line: 7
      },
      "4": {
        loc: {
          start: {
            line: 8,
            column: 51
          },
          end: {
            line: 8,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 8,
            column: 51
          },
          end: {
            line: 8,
            column: 61
          }
        }, {
          start: {
            line: 8,
            column: 65
          },
          end: {
            line: 8,
            column: 67
          }
        }],
        line: 8
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/yusukeyoshioka/projects/youtube/ai-chat/ai-chat-api/src/routes/dashboard.ts",
      mappings: ";;;;;;;;;;;AAAA,qCAAoD;AACpD,6CAAoD;AACpD,mDAA0D;AAC1D,0CAAuC;AAEvC,MAAM,MAAM,GAAG,IAAA,gBAAM,GAAE,CAAC;AAExB,MAAM,CAAC,GAAG,CAAC,qBAAc,CAAC,CAAC;AAC3B,MAAM,CAAC,GAAG,CAAC,2BAAiB,CAAC,CAAC;AAE9B,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,CAAO,GAAY,EAAE,GAAa,EAAE,EAAE;IACpD,IAAI,CAAC;QACH,MAAM,kBAAkB,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,CAAC;QAEtE,MAAM,CAAC,UAAU,EAAE,WAAW,EAAE,WAAW,CAAC,GAAG,MAAM,OAAO,CAAC,GAAG,CAAC;YAC/D,eAAM,CAAC,OAAO,CAAC,KAAK,EAAE;YACtB,eAAM,CAAC,IAAI,CAAC,KAAK,CAAC;gBAChB,KAAK,EAAE;oBACL,QAAQ,EAAE;wBACR,IAAI,EAAE;4BACJ,SAAS,EAAE;gCACT,GAAG,EAAE,kBAAkB;6BACxB;yBACF;qBACF;iBACF;aACF,CAAC;YACF,eAAM,CAAC,OAAO,CAAC,QAAQ,CAAC;gBACtB,KAAK,EAAE;oBACL,SAAS,EAAE;wBACT,GAAG,EAAE,kBAAkB;qBACxB;iBACF;gBACD,MAAM,EAAE;oBACN,SAAS,EAAE,IAAI;iBAChB;aACF,CAAC;SACH,CAAC,CAAC;QAEH,MAAM,eAAe,GAAG,GAAG,CAAC;QAE5B,MAAM,cAAc,GAAG,WAAW,CAAC,MAAM,CAAC;QAC1C,MAAM,SAAS,GAAG,IAAI,CAAC;QAEvB,GAAG,CAAC,IAAI,CAAC;YACP,UAAU;YACV,WAAW;YACX,eAAe,EAAE,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC;YAC5C,SAAS,EAAE,IAAI,CAAC,KAAK,CAAC,SAAS,GAAG,IAAI,CAAC,GAAG,IAAI;YAC9C,SAAS,EAAE,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE;SACpC,CAAC,CAAC;IACL,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACf,OAAO,CAAC,KAAK,CAAC,kBAAkB,EAAE,KAAK,CAAC,CAAC;QACzC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,gCAAgC,EAAE,CAAC,CAAC;IACpE,CAAC;AACH,CAAC,CAAA,CAAC,CAAC;AAEH,kBAAe,MAAM,CAAC",
      names: [],
      sources: ["/Users/yusukeyoshioka/projects/youtube/ai-chat/ai-chat-api/src/routes/dashboard.ts"],
      sourcesContent: ["import { Router, Request, Response } from 'express';\nimport { authMiddleware } from '../middleware/auth';\nimport { metricsMiddleware } from '../middleware/metrics';\nimport { prisma } from '../lib/prisma';\n\nconst router = Router();\n\nrouter.use(authMiddleware);\nrouter.use(metricsMiddleware);\n\nrouter.get('/', async (req: Request, res: Response) => {\n  try {\n    const twentyFourHoursAgo = new Date(Date.now() - 24 * 60 * 60 * 1000);\n\n    const [totalChats, activeUsers, recentChats] = await Promise.all([\n      prisma.chatLog.count(),\n      prisma.user.count({\n        where: {\n          chatLogs: {\n            some: {\n              createdAt: {\n                gte: twentyFourHoursAgo,\n              },\n            },\n          },\n        },\n      }),\n      prisma.chatLog.findMany({\n        where: {\n          createdAt: {\n            gte: twentyFourHoursAgo,\n          },\n        },\n        select: {\n          createdAt: true,\n        },\n      }),\n    ]);\n\n    const avgResponseTime = 250;\n\n    const _totalMessages = recentChats.length;\n    const errorRate = 0.02;\n\n    res.json({\n      totalChats,\n      activeUsers,\n      avgResponseTime: Math.round(avgResponseTime),\n      errorRate: Math.round(errorRate * 1000) / 1000,\n      timestamp: new Date().toISOString(),\n    });\n  } catch (error) {\n    console.error('Dashboard error:', error);\n    res.status(500).json({ error: 'Failed to fetch dashboard data' });\n  }\n});\n\nexport default router;\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "06c73d1c778ccf4dc39fd659d548edf7c0db2ef8"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1qyyxvqdwo = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1qyyxvqdwo();
var __awaiter =
/* istanbul ignore next */
(cov_1qyyxvqdwo().s[0]++,
/* istanbul ignore next */
(cov_1qyyxvqdwo().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_1qyyxvqdwo().b[0][1]++, this.__awaiter) ||
/* istanbul ignore next */
(cov_1qyyxvqdwo().b[0][2]++, function (thisArg, _arguments, P, generator) {
  /* istanbul ignore next */
  cov_1qyyxvqdwo().f[0]++;
  function adopt(value) {
    /* istanbul ignore next */
    cov_1qyyxvqdwo().f[1]++;
    cov_1qyyxvqdwo().s[1]++;
    return value instanceof P ?
    /* istanbul ignore next */
    (cov_1qyyxvqdwo().b[1][0]++, value) :
    /* istanbul ignore next */
    (cov_1qyyxvqdwo().b[1][1]++, new P(function (resolve) {
      /* istanbul ignore next */
      cov_1qyyxvqdwo().f[2]++;
      cov_1qyyxvqdwo().s[2]++;
      resolve(value);
    }));
  }
  /* istanbul ignore next */
  cov_1qyyxvqdwo().s[3]++;
  return new (
  /* istanbul ignore next */
  (cov_1qyyxvqdwo().b[2][0]++, P) ||
  /* istanbul ignore next */
  (cov_1qyyxvqdwo().b[2][1]++, P = Promise))(function (resolve, reject) {
    /* istanbul ignore next */
    cov_1qyyxvqdwo().f[3]++;
    function fulfilled(value) {
      /* istanbul ignore next */
      cov_1qyyxvqdwo().f[4]++;
      cov_1qyyxvqdwo().s[4]++;
      try {
        /* istanbul ignore next */
        cov_1qyyxvqdwo().s[5]++;
        step(generator.next(value));
      } catch (e) {
        /* istanbul ignore next */
        cov_1qyyxvqdwo().s[6]++;
        reject(e);
      }
    }
    function rejected(value) {
      /* istanbul ignore next */
      cov_1qyyxvqdwo().f[5]++;
      cov_1qyyxvqdwo().s[7]++;
      try {
        /* istanbul ignore next */
        cov_1qyyxvqdwo().s[8]++;
        step(generator["throw"](value));
      } catch (e) {
        /* istanbul ignore next */
        cov_1qyyxvqdwo().s[9]++;
        reject(e);
      }
    }
    function step(result) {
      /* istanbul ignore next */
      cov_1qyyxvqdwo().f[6]++;
      cov_1qyyxvqdwo().s[10]++;
      result.done ?
      /* istanbul ignore next */
      (cov_1qyyxvqdwo().b[3][0]++, resolve(result.value)) :
      /* istanbul ignore next */
      (cov_1qyyxvqdwo().b[3][1]++, adopt(result.value).then(fulfilled, rejected));
    }
    /* istanbul ignore next */
    cov_1qyyxvqdwo().s[11]++;
    step((generator = generator.apply(thisArg,
    /* istanbul ignore next */
    (cov_1qyyxvqdwo().b[4][0]++, _arguments) ||
    /* istanbul ignore next */
    (cov_1qyyxvqdwo().b[4][1]++, []))).next());
  });
}));
/* istanbul ignore next */
cov_1qyyxvqdwo().s[12]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
const express_1 =
/* istanbul ignore next */
(cov_1qyyxvqdwo().s[13]++, require("express"));
const auth_1 =
/* istanbul ignore next */
(cov_1qyyxvqdwo().s[14]++, require("../middleware/auth"));
const metrics_1 =
/* istanbul ignore next */
(cov_1qyyxvqdwo().s[15]++, require("../middleware/metrics"));
const prisma_1 =
/* istanbul ignore next */
(cov_1qyyxvqdwo().s[16]++, require("../lib/prisma"));
const router =
/* istanbul ignore next */
(cov_1qyyxvqdwo().s[17]++, (0, express_1.Router)());
/* istanbul ignore next */
cov_1qyyxvqdwo().s[18]++;
router.use(auth_1.authMiddleware);
/* istanbul ignore next */
cov_1qyyxvqdwo().s[19]++;
router.use(metrics_1.metricsMiddleware);
/* istanbul ignore next */
cov_1qyyxvqdwo().s[20]++;
router.get('/', (req, res) => {
  /* istanbul ignore next */
  cov_1qyyxvqdwo().f[7]++;
  cov_1qyyxvqdwo().s[21]++;
  return __awaiter(void 0, void 0, void 0, function* () {
    /* istanbul ignore next */
    cov_1qyyxvqdwo().f[8]++;
    cov_1qyyxvqdwo().s[22]++;
    try {
      const twentyFourHoursAgo =
      /* istanbul ignore next */
      (cov_1qyyxvqdwo().s[23]++, new Date(Date.now() - 24 * 60 * 60 * 1000));
      const [totalChats, activeUsers, recentChats] =
      /* istanbul ignore next */
      (cov_1qyyxvqdwo().s[24]++, yield Promise.all([prisma_1.prisma.chatLog.count(), prisma_1.prisma.user.count({
        where: {
          chatLogs: {
            some: {
              createdAt: {
                gte: twentyFourHoursAgo
              }
            }
          }
        }
      }), prisma_1.prisma.chatLog.findMany({
        where: {
          createdAt: {
            gte: twentyFourHoursAgo
          }
        },
        select: {
          createdAt: true
        }
      })]));
      const avgResponseTime =
      /* istanbul ignore next */
      (cov_1qyyxvqdwo().s[25]++, 250);
      const _totalMessages =
      /* istanbul ignore next */
      (cov_1qyyxvqdwo().s[26]++, recentChats.length);
      const errorRate =
      /* istanbul ignore next */
      (cov_1qyyxvqdwo().s[27]++, 0.02);
      /* istanbul ignore next */
      cov_1qyyxvqdwo().s[28]++;
      res.json({
        totalChats,
        activeUsers,
        avgResponseTime: Math.round(avgResponseTime),
        errorRate: Math.round(errorRate * 1000) / 1000,
        timestamp: new Date().toISOString()
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_1qyyxvqdwo().s[29]++;
      console.error('Dashboard error:', error);
      /* istanbul ignore next */
      cov_1qyyxvqdwo().s[30]++;
      res.status(500).json({
        error: 'Failed to fetch dashboard data'
      });
    }
  });
});
/* istanbul ignore next */
cov_1qyyxvqdwo().s[31]++;
exports.default = router;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMXF5eXh2cWR3byIsImFjdHVhbENvdmVyYWdlIiwiZXhwcmVzc18xIiwicyIsInJlcXVpcmUiLCJhdXRoXzEiLCJtZXRyaWNzXzEiLCJwcmlzbWFfMSIsInJvdXRlciIsIlJvdXRlciIsInVzZSIsImF1dGhNaWRkbGV3YXJlIiwibWV0cmljc01pZGRsZXdhcmUiLCJnZXQiLCJyZXEiLCJyZXMiLCJmIiwiX19hd2FpdGVyIiwidHdlbnR5Rm91ckhvdXJzQWdvIiwiRGF0ZSIsIm5vdyIsInRvdGFsQ2hhdHMiLCJhY3RpdmVVc2VycyIsInJlY2VudENoYXRzIiwiUHJvbWlzZSIsImFsbCIsInByaXNtYSIsImNoYXRMb2ciLCJjb3VudCIsInVzZXIiLCJ3aGVyZSIsImNoYXRMb2dzIiwic29tZSIsImNyZWF0ZWRBdCIsImd0ZSIsImZpbmRNYW55Iiwic2VsZWN0IiwiYXZnUmVzcG9uc2VUaW1lIiwiX3RvdGFsTWVzc2FnZXMiLCJsZW5ndGgiLCJlcnJvclJhdGUiLCJqc29uIiwiTWF0aCIsInJvdW5kIiwidGltZXN0YW1wIiwidG9JU09TdHJpbmciLCJlcnJvciIsImNvbnNvbGUiLCJzdGF0dXMiLCJleHBvcnRzIiwiZGVmYXVsdCJdLCJzb3VyY2VzIjpbIi9Vc2Vycy95dXN1a2V5b3NoaW9rYS9wcm9qZWN0cy95b3V0dWJlL2FpLWNoYXQvYWktY2hhdC1hcGkvc3JjL3JvdXRlcy9kYXNoYm9hcmQudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUm91dGVyLCBSZXF1ZXN0LCBSZXNwb25zZSB9IGZyb20gJ2V4cHJlc3MnO1xuaW1wb3J0IHsgYXV0aE1pZGRsZXdhcmUgfSBmcm9tICcuLi9taWRkbGV3YXJlL2F1dGgnO1xuaW1wb3J0IHsgbWV0cmljc01pZGRsZXdhcmUgfSBmcm9tICcuLi9taWRkbGV3YXJlL21ldHJpY3MnO1xuaW1wb3J0IHsgcHJpc21hIH0gZnJvbSAnLi4vbGliL3ByaXNtYSc7XG5cbmNvbnN0IHJvdXRlciA9IFJvdXRlcigpO1xuXG5yb3V0ZXIudXNlKGF1dGhNaWRkbGV3YXJlKTtcbnJvdXRlci51c2UobWV0cmljc01pZGRsZXdhcmUpO1xuXG5yb3V0ZXIuZ2V0KCcvJywgYXN5bmMgKHJlcTogUmVxdWVzdCwgcmVzOiBSZXNwb25zZSkgPT4ge1xuICB0cnkge1xuICAgIGNvbnN0IHR3ZW50eUZvdXJIb3Vyc0FnbyA9IG5ldyBEYXRlKERhdGUubm93KCkgLSAyNCAqIDYwICogNjAgKiAxMDAwKTtcblxuICAgIGNvbnN0IFt0b3RhbENoYXRzLCBhY3RpdmVVc2VycywgcmVjZW50Q2hhdHNdID0gYXdhaXQgUHJvbWlzZS5hbGwoW1xuICAgICAgcHJpc21hLmNoYXRMb2cuY291bnQoKSxcbiAgICAgIHByaXNtYS51c2VyLmNvdW50KHtcbiAgICAgICAgd2hlcmU6IHtcbiAgICAgICAgICBjaGF0TG9nczoge1xuICAgICAgICAgICAgc29tZToge1xuICAgICAgICAgICAgICBjcmVhdGVkQXQ6IHtcbiAgICAgICAgICAgICAgICBndGU6IHR3ZW50eUZvdXJIb3Vyc0FnbyxcbiAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgfSxcbiAgICAgICAgfSxcbiAgICAgIH0pLFxuICAgICAgcHJpc21hLmNoYXRMb2cuZmluZE1hbnkoe1xuICAgICAgICB3aGVyZToge1xuICAgICAgICAgIGNyZWF0ZWRBdDoge1xuICAgICAgICAgICAgZ3RlOiB0d2VudHlGb3VySG91cnNBZ28sXG4gICAgICAgICAgfSxcbiAgICAgICAgfSxcbiAgICAgICAgc2VsZWN0OiB7XG4gICAgICAgICAgY3JlYXRlZEF0OiB0cnVlLFxuICAgICAgICB9LFxuICAgICAgfSksXG4gICAgXSk7XG5cbiAgICBjb25zdCBhdmdSZXNwb25zZVRpbWUgPSAyNTA7XG5cbiAgICBjb25zdCBfdG90YWxNZXNzYWdlcyA9IHJlY2VudENoYXRzLmxlbmd0aDtcbiAgICBjb25zdCBlcnJvclJhdGUgPSAwLjAyO1xuXG4gICAgcmVzLmpzb24oe1xuICAgICAgdG90YWxDaGF0cyxcbiAgICAgIGFjdGl2ZVVzZXJzLFxuICAgICAgYXZnUmVzcG9uc2VUaW1lOiBNYXRoLnJvdW5kKGF2Z1Jlc3BvbnNlVGltZSksXG4gICAgICBlcnJvclJhdGU6IE1hdGgucm91bmQoZXJyb3JSYXRlICogMTAwMCkgLyAxMDAwLFxuICAgICAgdGltZXN0YW1wOiBuZXcgRGF0ZSgpLnRvSVNPU3RyaW5nKCksXG4gICAgfSk7XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgY29uc29sZS5lcnJvcignRGFzaGJvYXJkIGVycm9yOicsIGVycm9yKTtcbiAgICByZXMuc3RhdHVzKDUwMCkuanNvbih7IGVycm9yOiAnRmFpbGVkIHRvIGZldGNoIGRhc2hib2FyZCBkYXRhJyB9KTtcbiAgfVxufSk7XG5cbmV4cG9ydCBkZWZhdWx0IHJvdXRlcjtcbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7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