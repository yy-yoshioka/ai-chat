1cf9bd6e31814a86382981a252306cab
"use strict";

/* istanbul ignore next */
function cov_2d8kdj2qjq() {
  var path = "/Users/yusukeyoshioka/projects/youtube/ai-chat/ai-chat-api/src/services/storageService.ts";
  var hash = "c342a5b525df117a749ba5cc1ae319fa1cbba2a6";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/yusukeyoshioka/projects/youtube/ai-chat/ai-chat-api/src/services/storageService.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 16
        },
        end: {
          line: 10,
          column: 1
        }
      },
      "1": {
        start: {
          line: 3,
          column: 28
        },
        end: {
          line: 3,
          column: 110
        }
      },
      "2": {
        start: {
          line: 3,
          column: 91
        },
        end: {
          line: 3,
          column: 106
        }
      },
      "3": {
        start: {
          line: 4,
          column: 4
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "4": {
        start: {
          line: 5,
          column: 36
        },
        end: {
          line: 5,
          column: 97
        }
      },
      "5": {
        start: {
          line: 5,
          column: 42
        },
        end: {
          line: 5,
          column: 70
        }
      },
      "6": {
        start: {
          line: 5,
          column: 85
        },
        end: {
          line: 5,
          column: 95
        }
      },
      "7": {
        start: {
          line: 6,
          column: 35
        },
        end: {
          line: 6,
          column: 100
        }
      },
      "8": {
        start: {
          line: 6,
          column: 41
        },
        end: {
          line: 6,
          column: 73
        }
      },
      "9": {
        start: {
          line: 6,
          column: 88
        },
        end: {
          line: 6,
          column: 98
        }
      },
      "10": {
        start: {
          line: 7,
          column: 32
        },
        end: {
          line: 7,
          column: 116
        }
      },
      "11": {
        start: {
          line: 8,
          column: 8
        },
        end: {
          line: 8,
          column: 78
        }
      },
      "12": {
        start: {
          line: 11,
          column: 22
        },
        end: {
          line: 13,
          column: 1
        }
      },
      "13": {
        start: {
          line: 12,
          column: 4
        },
        end: {
          line: 12,
          column: 62
        }
      },
      "14": {
        start: {
          line: 14,
          column: 0
        },
        end: {
          line: 14,
          column: 62
        }
      },
      "15": {
        start: {
          line: 15,
          column: 0
        },
        end: {
          line: 15,
          column: 63
        }
      },
      "16": {
        start: {
          line: 16,
          column: 18
        },
        end: {
          line: 16,
          column: 53
        }
      },
      "17": {
        start: {
          line: 17,
          column: 17
        },
        end: {
          line: 17,
          column: 41
        }
      },
      "18": {
        start: {
          line: 18,
          column: 11
        },
        end: {
          line: 23,
          column: 2
        }
      },
      "19": {
        start: {
          line: 26,
          column: 8
        },
        end: {
          line: 26,
          column: 72
        }
      },
      "20": {
        start: {
          line: 30,
          column: 8
        },
        end: {
          line: 30,
          column: 50
        }
      },
      "21": {
        start: {
          line: 34,
          column: 8
        },
        end: {
          line: 63,
          column: 11
        }
      },
      "22": {
        start: {
          line: 35,
          column: 28
        },
        end: {
          line: 35,
          column: 72
        }
      },
      "23": {
        start: {
          line: 36,
          column: 12
        },
        end: {
          line: 62,
          column: 13
        }
      },
      "24": {
        start: {
          line: 37,
          column: 16
        },
        end: {
          line: 48,
          column: 31
        }
      },
      "25": {
        start: {
          line: 49,
          column: 16
        },
        end: {
          line: 52,
          column: 19
        }
      },
      "26": {
        start: {
          line: 53,
          column: 16
        },
        end: {
          line: 53,
          column: 31
        }
      },
      "27": {
        start: {
          line: 56,
          column: 16
        },
        end: {
          line: 60,
          column: 19
        }
      },
      "28": {
        start: {
          line: 61,
          column: 16
        },
        end: {
          line: 61,
          column: 57
        }
      },
      "29": {
        start: {
          line: 68,
          column: 8
        },
        end: {
          line: 100,
          column: 11
        }
      },
      "30": {
        start: {
          line: 69,
          column: 28
        },
        end: {
          line: 71,
          column: 62
        }
      },
      "31": {
        start: {
          line: 72,
          column: 12
        },
        end: {
          line: 99,
          column: 13
        }
      },
      "32": {
        start: {
          line: 73,
          column: 31
        },
        end: {
          line: 78,
          column: 30
        }
      },
      "33": {
        start: {
          line: 80,
          column: 29
        },
        end: {
          line: 85,
          column: 30
        }
      },
      "34": {
        start: {
          line: 86,
          column: 31
        },
        end: {
          line: 86,
          column: 133
        }
      },
      "35": {
        start: {
          line: 86,
          column: 104
        },
        end: {
          line: 86,
          column: 132
        }
      },
      "36": {
        start: {
          line: 87,
          column: 16
        },
        end: {
          line: 89,
          column: 17
        }
      },
      "37": {
        start: {
          line: 88,
          column: 20
        },
        end: {
          line: 88,
          column: 76
        }
      },
      "38": {
        start: {
          line: 90,
          column: 16
        },
        end: {
          line: 90,
          column: 35
        }
      },
      "39": {
        start: {
          line: 93,
          column: 16
        },
        end: {
          line: 97,
          column: 19
        }
      },
      "40": {
        start: {
          line: 98,
          column: 16
        },
        end: {
          line: 98,
          column: 59
        }
      },
      "41": {
        start: {
          line: 104,
          column: 8
        },
        end: {
          line: 124,
          column: 11
        }
      },
      "42": {
        start: {
          line: 105,
          column: 31
        },
        end: {
          line: 105,
          column: 84
        }
      },
      "43": {
        start: {
          line: 106,
          column: 12
        },
        end: {
          line: 123,
          column: 13
        }
      },
      "44": {
        start: {
          line: 107,
          column: 31
        },
        end: {
          line: 113,
          column: 30
        }
      },
      "45": {
        start: {
          line: 114,
          column: 16
        },
        end: {
          line: 114,
          column: 45
        }
      },
      "46": {
        start: {
          line: 117,
          column: 16
        },
        end: {
          line: 121,
          column: 19
        }
      },
      "47": {
        start: {
          line: 122,
          column: 16
        },
        end: {
          line: 122,
          column: 56
        }
      },
      "48": {
        start: {
          line: 129,
          column: 8
        },
        end: {
          line: 164,
          column: 11
        }
      },
      "49": {
        start: {
          line: 130,
          column: 28
        },
        end: {
          line: 132,
          column: 62
        }
      },
      "50": {
        start: {
          line: 133,
          column: 12
        },
        end: {
          line: 163,
          column: 13
        }
      },
      "51": {
        start: {
          line: 135,
          column: 29
        },
        end: {
          line: 140,
          column: 30
        }
      },
      "52": {
        start: {
          line: 141,
          column: 31
        },
        end: {
          line: 141,
          column: 133
        }
      },
      "53": {
        start: {
          line: 141,
          column: 104
        },
        end: {
          line: 141,
          column: 132
        }
      },
      "54": {
        start: {
          line: 142,
          column: 16
        },
        end: {
          line: 144,
          column: 17
        }
      },
      "55": {
        start: {
          line: 143,
          column: 20
        },
        end: {
          line: 143,
          column: 76
        }
      },
      "56": {
        start: {
          line: 145,
          column: 16
        },
        end: {
          line: 150,
          column: 31
        }
      },
      "57": {
        start: {
          line: 151,
          column: 16
        },
        end: {
          line: 154,
          column: 19
        }
      },
      "58": {
        start: {
          line: 157,
          column: 16
        },
        end: {
          line: 161,
          column: 19
        }
      },
      "59": {
        start: {
          line: 162,
          column: 16
        },
        end: {
          line: 162,
          column: 57
        }
      },
      "60": {
        start: {
          line: 170,
          column: 8
        },
        end: {
          line: 201,
          column: 11
        }
      },
      "61": {
        start: {
          line: 171,
          column: 28
        },
        end: {
          line: 173,
          column: 62
        }
      },
      "62": {
        start: {
          line: 174,
          column: 12
        },
        end: {
          line: 200,
          column: 13
        }
      },
      "63": {
        start: {
          line: 176,
          column: 29
        },
        end: {
          line: 181,
          column: 30
        }
      },
      "64": {
        start: {
          line: 182,
          column: 31
        },
        end: {
          line: 182,
          column: 133
        }
      },
      "65": {
        start: {
          line: 182,
          column: 104
        },
        end: {
          line: 182,
          column: 132
        }
      },
      "66": {
        start: {
          line: 183,
          column: 16
        },
        end: {
          line: 185,
          column: 17
        }
      },
      "67": {
        start: {
          line: 184,
          column: 20
        },
        end: {
          line: 184,
          column: 76
        }
      },
      "68": {
        start: {
          line: 186,
          column: 28
        },
        end: {
          line: 190,
          column: 18
        }
      },
      "69": {
        start: {
          line: 191,
          column: 16
        },
        end: {
          line: 191,
          column: 27
        }
      },
      "70": {
        start: {
          line: 194,
          column: 16
        },
        end: {
          line: 198,
          column: 19
        }
      },
      "71": {
        start: {
          line: 199,
          column: 16
        },
        end: {
          line: 199,
          column: 68
        }
      },
      "72": {
        start: {
          line: 205,
          column: 8
        },
        end: {
          line: 209,
          column: 11
        }
      },
      "73": {
        start: {
          line: 208,
          column: 12
        },
        end: {
          line: 208,
          column: 95
        }
      },
      "74": {
        start: {
          line: 212,
          column: 0
        },
        end: {
          line: 212,
          column: 52
        }
      },
      "75": {
        start: {
          line: 213,
          column: 0
        },
        end: {
          line: 213,
          column: 52
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 44
          },
          end: {
            line: 2,
            column: 45
          }
        },
        loc: {
          start: {
            line: 2,
            column: 89
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "adopt",
        decl: {
          start: {
            line: 3,
            column: 13
          },
          end: {
            line: 3,
            column: 18
          }
        },
        loc: {
          start: {
            line: 3,
            column: 26
          },
          end: {
            line: 3,
            column: 112
          }
        },
        line: 3
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 3,
            column: 70
          },
          end: {
            line: 3,
            column: 71
          }
        },
        loc: {
          start: {
            line: 3,
            column: 89
          },
          end: {
            line: 3,
            column: 108
          }
        },
        line: 3
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 4,
            column: 36
          },
          end: {
            line: 4,
            column: 37
          }
        },
        loc: {
          start: {
            line: 4,
            column: 63
          },
          end: {
            line: 9,
            column: 5
          }
        },
        line: 4
      },
      "4": {
        name: "fulfilled",
        decl: {
          start: {
            line: 5,
            column: 17
          },
          end: {
            line: 5,
            column: 26
          }
        },
        loc: {
          start: {
            line: 5,
            column: 34
          },
          end: {
            line: 5,
            column: 99
          }
        },
        line: 5
      },
      "5": {
        name: "rejected",
        decl: {
          start: {
            line: 6,
            column: 17
          },
          end: {
            line: 6,
            column: 25
          }
        },
        loc: {
          start: {
            line: 6,
            column: 33
          },
          end: {
            line: 6,
            column: 102
          }
        },
        line: 6
      },
      "6": {
        name: "step",
        decl: {
          start: {
            line: 7,
            column: 17
          },
          end: {
            line: 7,
            column: 21
          }
        },
        loc: {
          start: {
            line: 7,
            column: 30
          },
          end: {
            line: 7,
            column: 118
          }
        },
        line: 7
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 11,
            column: 56
          },
          end: {
            line: 11,
            column: 57
          }
        },
        loc: {
          start: {
            line: 11,
            column: 71
          },
          end: {
            line: 13,
            column: 1
          }
        },
        line: 11
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 25,
            column: 4
          },
          end: {
            line: 25,
            column: 5
          }
        },
        loc: {
          start: {
            line: 25,
            column: 18
          },
          end: {
            line: 27,
            column: 5
          }
        },
        line: 25
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 29,
            column: 4
          },
          end: {
            line: 29,
            column: 5
          }
        },
        loc: {
          start: {
            line: 29,
            column: 33
          },
          end: {
            line: 31,
            column: 5
          }
        },
        line: 29
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 33,
            column: 4
          },
          end: {
            line: 33,
            column: 5
          }
        },
        loc: {
          start: {
            line: 33,
            column: 55
          },
          end: {
            line: 64,
            column: 5
          }
        },
        line: 33
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 34,
            column: 47
          },
          end: {
            line: 34,
            column: 48
          }
        },
        loc: {
          start: {
            line: 34,
            column: 60
          },
          end: {
            line: 63,
            column: 9
          }
        },
        line: 34
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 66,
            column: 4
          },
          end: {
            line: 66,
            column: 5
          }
        },
        loc: {
          start: {
            line: 66,
            column: 38
          },
          end: {
            line: 101,
            column: 5
          }
        },
        line: 66
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 68,
            column: 47
          },
          end: {
            line: 68,
            column: 48
          }
        },
        loc: {
          start: {
            line: 68,
            column: 60
          },
          end: {
            line: 100,
            column: 9
          }
        },
        line: 68
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 86,
            column: 95
          },
          end: {
            line: 86,
            column: 96
          }
        },
        loc: {
          start: {
            line: 86,
            column: 104
          },
          end: {
            line: 86,
            column: 132
          }
        },
        line: 86
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 103,
            column: 4
          },
          end: {
            line: 103,
            column: 5
          }
        },
        loc: {
          start: {
            line: 103,
            column: 38
          },
          end: {
            line: 125,
            column: 5
          }
        },
        line: 103
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 104,
            column: 47
          },
          end: {
            line: 104,
            column: 48
          }
        },
        loc: {
          start: {
            line: 104,
            column: 60
          },
          end: {
            line: 124,
            column: 9
          }
        },
        line: 104
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 127,
            column: 4
          },
          end: {
            line: 127,
            column: 5
          }
        },
        loc: {
          start: {
            line: 127,
            column: 36
          },
          end: {
            line: 165,
            column: 5
          }
        },
        line: 127
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 129,
            column: 47
          },
          end: {
            line: 129,
            column: 48
          }
        },
        loc: {
          start: {
            line: 129,
            column: 60
          },
          end: {
            line: 164,
            column: 9
          }
        },
        line: 129
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 141,
            column: 95
          },
          end: {
            line: 141,
            column: 96
          }
        },
        loc: {
          start: {
            line: 141,
            column: 104
          },
          end: {
            line: 141,
            column: 132
          }
        },
        line: 141
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 167,
            column: 4
          },
          end: {
            line: 167,
            column: 5
          }
        },
        loc: {
          start: {
            line: 168,
            column: 6
          },
          end: {
            line: 202,
            column: 5
          }
        },
        line: 168
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 170,
            column: 47
          },
          end: {
            line: 170,
            column: 48
          }
        },
        loc: {
          start: {
            line: 170,
            column: 60
          },
          end: {
            line: 201,
            column: 9
          }
        },
        line: 170
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 182,
            column: 95
          },
          end: {
            line: 182,
            column: 96
          }
        },
        loc: {
          start: {
            line: 182,
            column: 104
          },
          end: {
            line: 182,
            column: 132
          }
        },
        line: 182
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 204,
            column: 4
          },
          end: {
            line: 204,
            column: 5
          }
        },
        loc: {
          start: {
            line: 204,
            column: 44
          },
          end: {
            line: 210,
            column: 5
          }
        },
        line: 204
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 205,
            column: 47
          },
          end: {
            line: 205,
            column: 48
          }
        },
        loc: {
          start: {
            line: 205,
            column: 60
          },
          end: {
            line: 209,
            column: 9
          }
        },
        line: 205
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 16
          },
          end: {
            line: 10,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 17
          },
          end: {
            line: 2,
            column: 21
          }
        }, {
          start: {
            line: 2,
            column: 25
          },
          end: {
            line: 2,
            column: 39
          }
        }, {
          start: {
            line: 2,
            column: 44
          },
          end: {
            line: 10,
            column: 1
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 3,
            column: 35
          },
          end: {
            line: 3,
            column: 109
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 3,
            column: 56
          },
          end: {
            line: 3,
            column: 61
          }
        }, {
          start: {
            line: 3,
            column: 64
          },
          end: {
            line: 3,
            column: 109
          }
        }],
        line: 3
      },
      "2": {
        loc: {
          start: {
            line: 4,
            column: 16
          },
          end: {
            line: 4,
            column: 34
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 4,
            column: 16
          },
          end: {
            line: 4,
            column: 17
          }
        }, {
          start: {
            line: 4,
            column: 22
          },
          end: {
            line: 4,
            column: 33
          }
        }],
        line: 4
      },
      "3": {
        loc: {
          start: {
            line: 7,
            column: 32
          },
          end: {
            line: 7,
            column: 115
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 7,
            column: 46
          },
          end: {
            line: 7,
            column: 67
          }
        }, {
          start: {
            line: 7,
            column: 70
          },
          end: {
            line: 7,
            column: 115
          }
        }],
        line: 7
      },
      "4": {
        loc: {
          start: {
            line: 8,
            column: 51
          },
          end: {
            line: 8,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 8,
            column: 51
          },
          end: {
            line: 8,
            column: 61
          }
        }, {
          start: {
            line: 8,
            column: 65
          },
          end: {
            line: 8,
            column: 67
          }
        }],
        line: 8
      },
      "5": {
        loc: {
          start: {
            line: 11,
            column: 22
          },
          end: {
            line: 13,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 11,
            column: 23
          },
          end: {
            line: 11,
            column: 27
          }
        }, {
          start: {
            line: 11,
            column: 31
          },
          end: {
            line: 11,
            column: 51
          }
        }, {
          start: {
            line: 11,
            column: 56
          },
          end: {
            line: 13,
            column: 1
          }
        }],
        line: 11
      },
      "6": {
        loc: {
          start: {
            line: 12,
            column: 11
          },
          end: {
            line: 12,
            column: 61
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 12,
            column: 37
          },
          end: {
            line: 12,
            column: 40
          }
        }, {
          start: {
            line: 12,
            column: 43
          },
          end: {
            line: 12,
            column: 61
          }
        }],
        line: 12
      },
      "7": {
        loc: {
          start: {
            line: 12,
            column: 12
          },
          end: {
            line: 12,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 12,
            column: 12
          },
          end: {
            line: 12,
            column: 15
          }
        }, {
          start: {
            line: 12,
            column: 19
          },
          end: {
            line: 12,
            column: 33
          }
        }],
        line: 12
      },
      "8": {
        loc: {
          start: {
            line: 26,
            column: 22
          },
          end: {
            line: 26,
            column: 71
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 26,
            column: 22
          },
          end: {
            line: 26,
            column: 43
          }
        }, {
          start: {
            line: 26,
            column: 47
          },
          end: {
            line: 26,
            column: 71
          }
        }],
        line: 26
      },
      "9": {
        loc: {
          start: {
            line: 59,
            column: 27
          },
          end: {
            line: 59,
            column: 73
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 59,
            column: 52
          },
          end: {
            line: 59,
            column: 65
          }
        }, {
          start: {
            line: 59,
            column: 68
          },
          end: {
            line: 59,
            column: 73
          }
        }],
        line: 59
      },
      "10": {
        loc: {
          start: {
            line: 69,
            column: 28
          },
          end: {
            line: 71,
            column: 62
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 70,
            column: 18
          },
          end: {
            line: 70,
            column: 21
          }
        }, {
          start: {
            line: 71,
            column: 18
          },
          end: {
            line: 71,
            column: 62
          }
        }],
        line: 69
      },
      "11": {
        loc: {
          start: {
            line: 86,
            column: 31
          },
          end: {
            line: 86,
            column: 133
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 86,
            column: 78
          },
          end: {
            line: 86,
            column: 84
          }
        }, {
          start: {
            line: 86,
            column: 87
          },
          end: {
            line: 86,
            column: 133
          }
        }],
        line: 86
      },
      "12": {
        loc: {
          start: {
            line: 86,
            column: 31
          },
          end: {
            line: 86,
            column: 75
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 86,
            column: 31
          },
          end: {
            line: 86,
            column: 58
          }
        }, {
          start: {
            line: 86,
            column: 62
          },
          end: {
            line: 86,
            column: 75
          }
        }],
        line: 86
      },
      "13": {
        loc: {
          start: {
            line: 87,
            column: 16
          },
          end: {
            line: 89,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 87,
            column: 16
          },
          end: {
            line: 89,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 87
      },
      "14": {
        loc: {
          start: {
            line: 87,
            column: 21
          },
          end: {
            line: 87,
            column: 81
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 87,
            column: 60
          },
          end: {
            line: 87,
            column: 66
          }
        }, {
          start: {
            line: 87,
            column: 69
          },
          end: {
            line: 87,
            column: 81
          }
        }],
        line: 87
      },
      "15": {
        loc: {
          start: {
            line: 87,
            column: 21
          },
          end: {
            line: 87,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 87,
            column: 21
          },
          end: {
            line: 87,
            column: 36
          }
        }, {
          start: {
            line: 87,
            column: 40
          },
          end: {
            line: 87,
            column: 57
          }
        }],
        line: 87
      },
      "16": {
        loc: {
          start: {
            line: 96,
            column: 27
          },
          end: {
            line: 96,
            column: 73
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 96,
            column: 52
          },
          end: {
            line: 96,
            column: 65
          }
        }, {
          start: {
            line: 96,
            column: 68
          },
          end: {
            line: 96,
            column: 73
          }
        }],
        line: 96
      },
      "17": {
        loc: {
          start: {
            line: 105,
            column: 70
          },
          end: {
            line: 105,
            column: 82
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 105,
            column: 70
          },
          end: {
            line: 105,
            column: 76
          }
        }, {
          start: {
            line: 105,
            column: 80
          },
          end: {
            line: 105,
            column: 82
          }
        }],
        line: 105
      },
      "18": {
        loc: {
          start: {
            line: 114,
            column: 23
          },
          end: {
            line: 114,
            column: 44
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 114,
            column: 23
          },
          end: {
            line: 114,
            column: 38
          }
        }, {
          start: {
            line: 114,
            column: 42
          },
          end: {
            line: 114,
            column: 44
          }
        }],
        line: 114
      },
      "19": {
        loc: {
          start: {
            line: 120,
            column: 27
          },
          end: {
            line: 120,
            column: 73
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 120,
            column: 52
          },
          end: {
            line: 120,
            column: 65
          }
        }, {
          start: {
            line: 120,
            column: 68
          },
          end: {
            line: 120,
            column: 73
          }
        }],
        line: 120
      },
      "20": {
        loc: {
          start: {
            line: 130,
            column: 28
          },
          end: {
            line: 132,
            column: 62
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 131,
            column: 18
          },
          end: {
            line: 131,
            column: 21
          }
        }, {
          start: {
            line: 132,
            column: 18
          },
          end: {
            line: 132,
            column: 62
          }
        }],
        line: 130
      },
      "21": {
        loc: {
          start: {
            line: 141,
            column: 31
          },
          end: {
            line: 141,
            column: 133
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 141,
            column: 78
          },
          end: {
            line: 141,
            column: 84
          }
        }, {
          start: {
            line: 141,
            column: 87
          },
          end: {
            line: 141,
            column: 133
          }
        }],
        line: 141
      },
      "22": {
        loc: {
          start: {
            line: 141,
            column: 31
          },
          end: {
            line: 141,
            column: 75
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 141,
            column: 31
          },
          end: {
            line: 141,
            column: 58
          }
        }, {
          start: {
            line: 141,
            column: 62
          },
          end: {
            line: 141,
            column: 75
          }
        }],
        line: 141
      },
      "23": {
        loc: {
          start: {
            line: 142,
            column: 16
          },
          end: {
            line: 144,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 142,
            column: 16
          },
          end: {
            line: 144,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 142
      },
      "24": {
        loc: {
          start: {
            line: 142,
            column: 21
          },
          end: {
            line: 142,
            column: 81
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 142,
            column: 60
          },
          end: {
            line: 142,
            column: 66
          }
        }, {
          start: {
            line: 142,
            column: 69
          },
          end: {
            line: 142,
            column: 81
          }
        }],
        line: 142
      },
      "25": {
        loc: {
          start: {
            line: 142,
            column: 21
          },
          end: {
            line: 142,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 142,
            column: 21
          },
          end: {
            line: 142,
            column: 36
          }
        }, {
          start: {
            line: 142,
            column: 40
          },
          end: {
            line: 142,
            column: 57
          }
        }],
        line: 142
      },
      "26": {
        loc: {
          start: {
            line: 160,
            column: 27
          },
          end: {
            line: 160,
            column: 73
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 160,
            column: 52
          },
          end: {
            line: 160,
            column: 65
          }
        }, {
          start: {
            line: 160,
            column: 68
          },
          end: {
            line: 160,
            column: 73
          }
        }],
        line: 160
      },
      "27": {
        loc: {
          start: {
            line: 167,
            column: 41
          },
          end: {
            line: 167,
            column: 57
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 167,
            column: 53
          },
          end: {
            line: 167,
            column: 57
          }
        }],
        line: 167
      },
      "28": {
        loc: {
          start: {
            line: 171,
            column: 28
          },
          end: {
            line: 173,
            column: 62
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 172,
            column: 18
          },
          end: {
            line: 172,
            column: 21
          }
        }, {
          start: {
            line: 173,
            column: 18
          },
          end: {
            line: 173,
            column: 62
          }
        }],
        line: 171
      },
      "29": {
        loc: {
          start: {
            line: 182,
            column: 31
          },
          end: {
            line: 182,
            column: 133
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 182,
            column: 78
          },
          end: {
            line: 182,
            column: 84
          }
        }, {
          start: {
            line: 182,
            column: 87
          },
          end: {
            line: 182,
            column: 133
          }
        }],
        line: 182
      },
      "30": {
        loc: {
          start: {
            line: 182,
            column: 31
          },
          end: {
            line: 182,
            column: 75
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 182,
            column: 31
          },
          end: {
            line: 182,
            column: 58
          }
        }, {
          start: {
            line: 182,
            column: 62
          },
          end: {
            line: 182,
            column: 75
          }
        }],
        line: 182
      },
      "31": {
        loc: {
          start: {
            line: 183,
            column: 16
          },
          end: {
            line: 185,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 183,
            column: 16
          },
          end: {
            line: 185,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 183
      },
      "32": {
        loc: {
          start: {
            line: 183,
            column: 21
          },
          end: {
            line: 183,
            column: 81
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 183,
            column: 60
          },
          end: {
            line: 183,
            column: 66
          }
        }, {
          start: {
            line: 183,
            column: 69
          },
          end: {
            line: 183,
            column: 81
          }
        }],
        line: 183
      },
      "33": {
        loc: {
          start: {
            line: 183,
            column: 21
          },
          end: {
            line: 183,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 183,
            column: 21
          },
          end: {
            line: 183,
            column: 36
          }
        }, {
          start: {
            line: 183,
            column: 40
          },
          end: {
            line: 183,
            column: 57
          }
        }],
        line: 183
      },
      "34": {
        loc: {
          start: {
            line: 197,
            column: 27
          },
          end: {
            line: 197,
            column: 73
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 197,
            column: 52
          },
          end: {
            line: 197,
            column: 65
          }
        }, {
          start: {
            line: 197,
            column: 68
          },
          end: {
            line: 197,
            column: 73
          }
        }],
        line: 197
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/yusukeyoshioka/projects/youtube/ai-chat/ai-chat-api/src/services/storageService.ts",
      mappings: "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",
      names: [],
      sources: ["/Users/yusukeyoshioka/projects/youtube/ai-chat/ai-chat-api/src/services/storageService.ts"],
      sourcesContent: ["import AWS from 'aws-sdk';\nimport { logger } from '../lib/logger';\n\nconst s3 = new AWS.S3({\n  endpoint: process.env.S3_ENDPOINT,\n  accessKeyId: process.env.S3_ACCESS_KEY,\n  secretAccessKey: process.env.S3_SECRET_KEY,\n  s3ForcePathStyle: true, // for MinIO compatibility\n});\n\nexport class SecureStorageService {\n  private bucket: string;\n\n  constructor() {\n    this.bucket = process.env.S3_BUCKET || 'ai-chat-knowledge-base';\n  }\n\n  // Generate organization-specific prefix\n  private getOrgPrefix(organizationId: string): string {\n    return `organizations/${organizationId}/`;\n  }\n\n  // Upload file with organization isolation\n  async uploadFile(\n    organizationId: string,\n    key: string,\n    body: Buffer | Uint8Array | string,\n    contentType?: string\n  ): Promise<string> {\n    const fullKey = `${this.getOrgPrefix(organizationId)}${key}`;\n\n    try {\n      await s3\n        .putObject({\n          Bucket: this.bucket,\n          Key: fullKey,\n          Body: body,\n          ContentType: contentType,\n          // Set server-side encryption\n          ServerSideEncryption: 'AES256',\n          // Tag with organization ID for additional security\n          Tagging: `organizationId=${organizationId}`,\n        })\n        .promise();\n\n      logger.info('File uploaded successfully', {\n        organizationId,\n        key: fullKey,\n      });\n\n      return fullKey;\n    } catch (error) {\n      logger.error('Failed to upload file', {\n        organizationId,\n        key,\n        error: error instanceof Error ? error.message : error,\n      });\n      throw new Error('Failed to upload file');\n    }\n  }\n\n  // Download file with organization isolation\n  async downloadFile(organizationId: string, key: string): Promise<Buffer> {\n    const fullKey = key.startsWith(this.getOrgPrefix(organizationId))\n      ? key\n      : `${this.getOrgPrefix(organizationId)}${key}`;\n\n    try {\n      const result = await s3\n        .getObject({\n          Bucket: this.bucket,\n          Key: fullKey,\n        })\n        .promise();\n\n      // Verify organization tag\n      const tags = await s3\n        .getObjectTagging({\n          Bucket: this.bucket,\n          Key: fullKey,\n        })\n        .promise();\n\n      const orgTag = tags.TagSet?.find((tag) => tag.Key === 'organizationId');\n      if (orgTag?.Value !== organizationId) {\n        throw new Error('Access denied: Organization mismatch');\n      }\n\n      return result.Body as Buffer;\n    } catch (error) {\n      logger.error('Failed to download file', {\n        organizationId,\n        key,\n        error: error instanceof Error ? error.message : error,\n      });\n      throw new Error('Failed to download file');\n    }\n  }\n\n  // List files for organization\n  async listFiles(\n    organizationId: string,\n    prefix?: string\n  ): Promise<AWS.S3.ObjectList> {\n    const fullPrefix = `${this.getOrgPrefix(organizationId)}${prefix || ''}`;\n\n    try {\n      const result = await s3\n        .listObjectsV2({\n          Bucket: this.bucket,\n          Prefix: fullPrefix,\n          MaxKeys: 1000,\n        })\n        .promise();\n\n      return result.Contents || [];\n    } catch (error) {\n      logger.error('Failed to list files', {\n        organizationId,\n        prefix,\n        error: error instanceof Error ? error.message : error,\n      });\n      throw new Error('Failed to list files');\n    }\n  }\n\n  // Delete file with organization isolation\n  async deleteFile(organizationId: string, key: string): Promise<void> {\n    const fullKey = key.startsWith(this.getOrgPrefix(organizationId))\n      ? key\n      : `${this.getOrgPrefix(organizationId)}${key}`;\n\n    try {\n      // Verify organization tag before deletion\n      const tags = await s3\n        .getObjectTagging({\n          Bucket: this.bucket,\n          Key: fullKey,\n        })\n        .promise();\n\n      const orgTag = tags.TagSet?.find((tag) => tag.Key === 'organizationId');\n      if (orgTag?.Value !== organizationId) {\n        throw new Error('Access denied: Organization mismatch');\n      }\n\n      await s3\n        .deleteObject({\n          Bucket: this.bucket,\n          Key: fullKey,\n        })\n        .promise();\n\n      logger.info('File deleted successfully', {\n        organizationId,\n        key: fullKey,\n      });\n    } catch (error) {\n      logger.error('Failed to delete file', {\n        organizationId,\n        key,\n        error: error instanceof Error ? error.message : error,\n      });\n      throw new Error('Failed to delete file');\n    }\n  }\n\n  // Generate pre-signed URL for secure temporary access\n  async getPresignedUrl(\n    organizationId: string,\n    key: string,\n    expiresIn: number = 3600 // 1 hour default\n  ): Promise<string> {\n    const fullKey = key.startsWith(this.getOrgPrefix(organizationId))\n      ? key\n      : `${this.getOrgPrefix(organizationId)}${key}`;\n\n    try {\n      // Verify organization tag\n      const tags = await s3\n        .getObjectTagging({\n          Bucket: this.bucket,\n          Key: fullKey,\n        })\n        .promise();\n\n      const orgTag = tags.TagSet?.find((tag) => tag.Key === 'organizationId');\n      if (orgTag?.Value !== organizationId) {\n        throw new Error('Access denied: Organization mismatch');\n      }\n\n      const url = await s3.getSignedUrlPromise('getObject', {\n        Bucket: this.bucket,\n        Key: fullKey,\n        Expires: expiresIn,\n      });\n\n      return url;\n    } catch (error) {\n      logger.error('Failed to generate presigned URL', {\n        organizationId,\n        key,\n        error: error instanceof Error ? error.message : error,\n      });\n      throw new Error('Failed to generate presigned URL');\n    }\n  }\n\n  // Create organization bucket policy\n  async setupOrganizationPolicy(organizationId: string): Promise<void> {\n    // In a real implementation, this would create IAM policies\n    // or bucket policies specific to the organization\n    logger.info('Setting up organization storage policy', { organizationId });\n  }\n}\n\nexport const storageService = new SecureStorageService();\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "c342a5b525df117a749ba5cc1ae319fa1cbba2a6"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2d8kdj2qjq = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2d8kdj2qjq();
var __awaiter =
/* istanbul ignore next */
(cov_2d8kdj2qjq().s[0]++,
/* istanbul ignore next */
(cov_2d8kdj2qjq().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_2d8kdj2qjq().b[0][1]++, this.__awaiter) ||
/* istanbul ignore next */
(cov_2d8kdj2qjq().b[0][2]++, function (thisArg, _arguments, P, generator) {
  /* istanbul ignore next */
  cov_2d8kdj2qjq().f[0]++;
  function adopt(value) {
    /* istanbul ignore next */
    cov_2d8kdj2qjq().f[1]++;
    cov_2d8kdj2qjq().s[1]++;
    return value instanceof P ?
    /* istanbul ignore next */
    (cov_2d8kdj2qjq().b[1][0]++, value) :
    /* istanbul ignore next */
    (cov_2d8kdj2qjq().b[1][1]++, new P(function (resolve) {
      /* istanbul ignore next */
      cov_2d8kdj2qjq().f[2]++;
      cov_2d8kdj2qjq().s[2]++;
      resolve(value);
    }));
  }
  /* istanbul ignore next */
  cov_2d8kdj2qjq().s[3]++;
  return new (
  /* istanbul ignore next */
  (cov_2d8kdj2qjq().b[2][0]++, P) ||
  /* istanbul ignore next */
  (cov_2d8kdj2qjq().b[2][1]++, P = Promise))(function (resolve, reject) {
    /* istanbul ignore next */
    cov_2d8kdj2qjq().f[3]++;
    function fulfilled(value) {
      /* istanbul ignore next */
      cov_2d8kdj2qjq().f[4]++;
      cov_2d8kdj2qjq().s[4]++;
      try {
        /* istanbul ignore next */
        cov_2d8kdj2qjq().s[5]++;
        step(generator.next(value));
      } catch (e) {
        /* istanbul ignore next */
        cov_2d8kdj2qjq().s[6]++;
        reject(e);
      }
    }
    function rejected(value) {
      /* istanbul ignore next */
      cov_2d8kdj2qjq().f[5]++;
      cov_2d8kdj2qjq().s[7]++;
      try {
        /* istanbul ignore next */
        cov_2d8kdj2qjq().s[8]++;
        step(generator["throw"](value));
      } catch (e) {
        /* istanbul ignore next */
        cov_2d8kdj2qjq().s[9]++;
        reject(e);
      }
    }
    function step(result) {
      /* istanbul ignore next */
      cov_2d8kdj2qjq().f[6]++;
      cov_2d8kdj2qjq().s[10]++;
      result.done ?
      /* istanbul ignore next */
      (cov_2d8kdj2qjq().b[3][0]++, resolve(result.value)) :
      /* istanbul ignore next */
      (cov_2d8kdj2qjq().b[3][1]++, adopt(result.value).then(fulfilled, rejected));
    }
    /* istanbul ignore next */
    cov_2d8kdj2qjq().s[11]++;
    step((generator = generator.apply(thisArg,
    /* istanbul ignore next */
    (cov_2d8kdj2qjq().b[4][0]++, _arguments) ||
    /* istanbul ignore next */
    (cov_2d8kdj2qjq().b[4][1]++, []))).next());
  });
}));
var __importDefault =
/* istanbul ignore next */
(cov_2d8kdj2qjq().s[12]++,
/* istanbul ignore next */
(cov_2d8kdj2qjq().b[5][0]++, this) &&
/* istanbul ignore next */
(cov_2d8kdj2qjq().b[5][1]++, this.__importDefault) ||
/* istanbul ignore next */
(cov_2d8kdj2qjq().b[5][2]++, function (mod) {
  /* istanbul ignore next */
  cov_2d8kdj2qjq().f[7]++;
  cov_2d8kdj2qjq().s[13]++;
  return /* istanbul ignore next */(cov_2d8kdj2qjq().b[7][0]++, mod) &&
  /* istanbul ignore next */
  (cov_2d8kdj2qjq().b[7][1]++, mod.__esModule) ?
  /* istanbul ignore next */
  (cov_2d8kdj2qjq().b[6][0]++, mod) :
  /* istanbul ignore next */
  (cov_2d8kdj2qjq().b[6][1]++, {
    "default": mod
  });
}));
/* istanbul ignore next */
cov_2d8kdj2qjq().s[14]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_2d8kdj2qjq().s[15]++;
exports.storageService = exports.SecureStorageService = void 0;
const aws_sdk_1 =
/* istanbul ignore next */
(cov_2d8kdj2qjq().s[16]++, __importDefault(require("aws-sdk")));
const logger_1 =
/* istanbul ignore next */
(cov_2d8kdj2qjq().s[17]++, require("../lib/logger"));
const s3 =
/* istanbul ignore next */
(cov_2d8kdj2qjq().s[18]++, new aws_sdk_1.default.S3({
  endpoint: process.env.S3_ENDPOINT,
  accessKeyId: process.env.S3_ACCESS_KEY,
  secretAccessKey: process.env.S3_SECRET_KEY,
  s3ForcePathStyle: true // for MinIO compatibility
}));
class SecureStorageService {
  constructor() {
    /* istanbul ignore next */
    cov_2d8kdj2qjq().f[8]++;
    cov_2d8kdj2qjq().s[19]++;
    this.bucket =
    /* istanbul ignore next */
    (cov_2d8kdj2qjq().b[8][0]++, process.env.S3_BUCKET) ||
    /* istanbul ignore next */
    (cov_2d8kdj2qjq().b[8][1]++, 'ai-chat-knowledge-base');
  }
  // Generate organization-specific prefix
  getOrgPrefix(organizationId) {
    /* istanbul ignore next */
    cov_2d8kdj2qjq().f[9]++;
    cov_2d8kdj2qjq().s[20]++;
    return `organizations/${organizationId}/`;
  }
  // Upload file with organization isolation
  uploadFile(organizationId, key, body, contentType) {
    /* istanbul ignore next */
    cov_2d8kdj2qjq().f[10]++;
    cov_2d8kdj2qjq().s[21]++;
    return __awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_2d8kdj2qjq().f[11]++;
      const fullKey =
      /* istanbul ignore next */
      (cov_2d8kdj2qjq().s[22]++, `${this.getOrgPrefix(organizationId)}${key}`);
      /* istanbul ignore next */
      cov_2d8kdj2qjq().s[23]++;
      try {
        /* istanbul ignore next */
        cov_2d8kdj2qjq().s[24]++;
        yield s3.putObject({
          Bucket: this.bucket,
          Key: fullKey,
          Body: body,
          ContentType: contentType,
          // Set server-side encryption
          ServerSideEncryption: 'AES256',
          // Tag with organization ID for additional security
          Tagging: `organizationId=${organizationId}`
        }).promise();
        /* istanbul ignore next */
        cov_2d8kdj2qjq().s[25]++;
        logger_1.logger.info('File uploaded successfully', {
          organizationId,
          key: fullKey
        });
        /* istanbul ignore next */
        cov_2d8kdj2qjq().s[26]++;
        return fullKey;
      } catch (error) {
        /* istanbul ignore next */
        cov_2d8kdj2qjq().s[27]++;
        logger_1.logger.error('Failed to upload file', {
          organizationId,
          key,
          error: error instanceof Error ?
          /* istanbul ignore next */
          (cov_2d8kdj2qjq().b[9][0]++, error.message) :
          /* istanbul ignore next */
          (cov_2d8kdj2qjq().b[9][1]++, error)
        });
        /* istanbul ignore next */
        cov_2d8kdj2qjq().s[28]++;
        throw new Error('Failed to upload file');
      }
    });
  }
  // Download file with organization isolation
  downloadFile(organizationId, key) {
    /* istanbul ignore next */
    cov_2d8kdj2qjq().f[12]++;
    var _a;
    /* istanbul ignore next */
    cov_2d8kdj2qjq().s[29]++;
    return __awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_2d8kdj2qjq().f[13]++;
      const fullKey =
      /* istanbul ignore next */
      (cov_2d8kdj2qjq().s[30]++, key.startsWith(this.getOrgPrefix(organizationId)) ?
      /* istanbul ignore next */
      (cov_2d8kdj2qjq().b[10][0]++, key) :
      /* istanbul ignore next */
      (cov_2d8kdj2qjq().b[10][1]++, `${this.getOrgPrefix(organizationId)}${key}`));
      /* istanbul ignore next */
      cov_2d8kdj2qjq().s[31]++;
      try {
        const result =
        /* istanbul ignore next */
        (cov_2d8kdj2qjq().s[32]++, yield s3.getObject({
          Bucket: this.bucket,
          Key: fullKey
        }).promise());
        // Verify organization tag
        const tags =
        /* istanbul ignore next */
        (cov_2d8kdj2qjq().s[33]++, yield s3.getObjectTagging({
          Bucket: this.bucket,
          Key: fullKey
        }).promise());
        const orgTag =
        /* istanbul ignore next */
        (cov_2d8kdj2qjq().s[34]++,
        /* istanbul ignore next */
        (cov_2d8kdj2qjq().b[12][0]++, (_a = tags.TagSet) === null) ||
        /* istanbul ignore next */
        (cov_2d8kdj2qjq().b[12][1]++, _a === void 0) ?
        /* istanbul ignore next */
        (cov_2d8kdj2qjq().b[11][0]++, void 0) :
        /* istanbul ignore next */
        (cov_2d8kdj2qjq().b[11][1]++, _a.find(tag => {
          /* istanbul ignore next */
          cov_2d8kdj2qjq().f[14]++;
          cov_2d8kdj2qjq().s[35]++;
          return tag.Key === 'organizationId';
        })));
        /* istanbul ignore next */
        cov_2d8kdj2qjq().s[36]++;
        if ((
        /* istanbul ignore next */
        (cov_2d8kdj2qjq().b[15][0]++, orgTag === null) ||
        /* istanbul ignore next */
        (cov_2d8kdj2qjq().b[15][1]++, orgTag === void 0) ?
        /* istanbul ignore next */
        (cov_2d8kdj2qjq().b[14][0]++, void 0) :
        /* istanbul ignore next */
        (cov_2d8kdj2qjq().b[14][1]++, orgTag.Value)) !== organizationId) {
          /* istanbul ignore next */
          cov_2d8kdj2qjq().b[13][0]++;
          cov_2d8kdj2qjq().s[37]++;
          throw new Error('Access denied: Organization mismatch');
        } else
        /* istanbul ignore next */
        {
          cov_2d8kdj2qjq().b[13][1]++;
        }
        cov_2d8kdj2qjq().s[38]++;
        return result.Body;
      } catch (error) {
        /* istanbul ignore next */
        cov_2d8kdj2qjq().s[39]++;
        logger_1.logger.error('Failed to download file', {
          organizationId,
          key,
          error: error instanceof Error ?
          /* istanbul ignore next */
          (cov_2d8kdj2qjq().b[16][0]++, error.message) :
          /* istanbul ignore next */
          (cov_2d8kdj2qjq().b[16][1]++, error)
        });
        /* istanbul ignore next */
        cov_2d8kdj2qjq().s[40]++;
        throw new Error('Failed to download file');
      }
    });
  }
  // List files for organization
  listFiles(organizationId, prefix) {
    /* istanbul ignore next */
    cov_2d8kdj2qjq().f[15]++;
    cov_2d8kdj2qjq().s[41]++;
    return __awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_2d8kdj2qjq().f[16]++;
      const fullPrefix =
      /* istanbul ignore next */
      (cov_2d8kdj2qjq().s[42]++, `${this.getOrgPrefix(organizationId)}${
      /* istanbul ignore next */
      (cov_2d8kdj2qjq().b[17][0]++, prefix) ||
      /* istanbul ignore next */
      (cov_2d8kdj2qjq().b[17][1]++, '')}`);
      /* istanbul ignore next */
      cov_2d8kdj2qjq().s[43]++;
      try {
        const result =
        /* istanbul ignore next */
        (cov_2d8kdj2qjq().s[44]++, yield s3.listObjectsV2({
          Bucket: this.bucket,
          Prefix: fullPrefix,
          MaxKeys: 1000
        }).promise());
        /* istanbul ignore next */
        cov_2d8kdj2qjq().s[45]++;
        return /* istanbul ignore next */(cov_2d8kdj2qjq().b[18][0]++, result.Contents) ||
        /* istanbul ignore next */
        (cov_2d8kdj2qjq().b[18][1]++, []);
      } catch (error) {
        /* istanbul ignore next */
        cov_2d8kdj2qjq().s[46]++;
        logger_1.logger.error('Failed to list files', {
          organizationId,
          prefix,
          error: error instanceof Error ?
          /* istanbul ignore next */
          (cov_2d8kdj2qjq().b[19][0]++, error.message) :
          /* istanbul ignore next */
          (cov_2d8kdj2qjq().b[19][1]++, error)
        });
        /* istanbul ignore next */
        cov_2d8kdj2qjq().s[47]++;
        throw new Error('Failed to list files');
      }
    });
  }
  // Delete file with organization isolation
  deleteFile(organizationId, key) {
    /* istanbul ignore next */
    cov_2d8kdj2qjq().f[17]++;
    var _a;
    /* istanbul ignore next */
    cov_2d8kdj2qjq().s[48]++;
    return __awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_2d8kdj2qjq().f[18]++;
      const fullKey =
      /* istanbul ignore next */
      (cov_2d8kdj2qjq().s[49]++, key.startsWith(this.getOrgPrefix(organizationId)) ?
      /* istanbul ignore next */
      (cov_2d8kdj2qjq().b[20][0]++, key) :
      /* istanbul ignore next */
      (cov_2d8kdj2qjq().b[20][1]++, `${this.getOrgPrefix(organizationId)}${key}`));
      /* istanbul ignore next */
      cov_2d8kdj2qjq().s[50]++;
      try {
        // Verify organization tag before deletion
        const tags =
        /* istanbul ignore next */
        (cov_2d8kdj2qjq().s[51]++, yield s3.getObjectTagging({
          Bucket: this.bucket,
          Key: fullKey
        }).promise());
        const orgTag =
        /* istanbul ignore next */
        (cov_2d8kdj2qjq().s[52]++,
        /* istanbul ignore next */
        (cov_2d8kdj2qjq().b[22][0]++, (_a = tags.TagSet) === null) ||
        /* istanbul ignore next */
        (cov_2d8kdj2qjq().b[22][1]++, _a === void 0) ?
        /* istanbul ignore next */
        (cov_2d8kdj2qjq().b[21][0]++, void 0) :
        /* istanbul ignore next */
        (cov_2d8kdj2qjq().b[21][1]++, _a.find(tag => {
          /* istanbul ignore next */
          cov_2d8kdj2qjq().f[19]++;
          cov_2d8kdj2qjq().s[53]++;
          return tag.Key === 'organizationId';
        })));
        /* istanbul ignore next */
        cov_2d8kdj2qjq().s[54]++;
        if ((
        /* istanbul ignore next */
        (cov_2d8kdj2qjq().b[25][0]++, orgTag === null) ||
        /* istanbul ignore next */
        (cov_2d8kdj2qjq().b[25][1]++, orgTag === void 0) ?
        /* istanbul ignore next */
        (cov_2d8kdj2qjq().b[24][0]++, void 0) :
        /* istanbul ignore next */
        (cov_2d8kdj2qjq().b[24][1]++, orgTag.Value)) !== organizationId) {
          /* istanbul ignore next */
          cov_2d8kdj2qjq().b[23][0]++;
          cov_2d8kdj2qjq().s[55]++;
          throw new Error('Access denied: Organization mismatch');
        } else
        /* istanbul ignore next */
        {
          cov_2d8kdj2qjq().b[23][1]++;
        }
        cov_2d8kdj2qjq().s[56]++;
        yield s3.deleteObject({
          Bucket: this.bucket,
          Key: fullKey
        }).promise();
        /* istanbul ignore next */
        cov_2d8kdj2qjq().s[57]++;
        logger_1.logger.info('File deleted successfully', {
          organizationId,
          key: fullKey
        });
      } catch (error) {
        /* istanbul ignore next */
        cov_2d8kdj2qjq().s[58]++;
        logger_1.logger.error('Failed to delete file', {
          organizationId,
          key,
          error: error instanceof Error ?
          /* istanbul ignore next */
          (cov_2d8kdj2qjq().b[26][0]++, error.message) :
          /* istanbul ignore next */
          (cov_2d8kdj2qjq().b[26][1]++, error)
        });
        /* istanbul ignore next */
        cov_2d8kdj2qjq().s[59]++;
        throw new Error('Failed to delete file');
      }
    });
  }
  // Generate pre-signed URL for secure temporary access
  getPresignedUrl(organizationId, key, expiresIn =
  /* istanbul ignore next */
  (cov_2d8kdj2qjq().b[27][0]++, 3600) // 1 hour default
  ) {
    /* istanbul ignore next */
    cov_2d8kdj2qjq().f[20]++;
    var _a;
    /* istanbul ignore next */
    cov_2d8kdj2qjq().s[60]++;
    return __awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_2d8kdj2qjq().f[21]++;
      const fullKey =
      /* istanbul ignore next */
      (cov_2d8kdj2qjq().s[61]++, key.startsWith(this.getOrgPrefix(organizationId)) ?
      /* istanbul ignore next */
      (cov_2d8kdj2qjq().b[28][0]++, key) :
      /* istanbul ignore next */
      (cov_2d8kdj2qjq().b[28][1]++, `${this.getOrgPrefix(organizationId)}${key}`));
      /* istanbul ignore next */
      cov_2d8kdj2qjq().s[62]++;
      try {
        // Verify organization tag
        const tags =
        /* istanbul ignore next */
        (cov_2d8kdj2qjq().s[63]++, yield s3.getObjectTagging({
          Bucket: this.bucket,
          Key: fullKey
        }).promise());
        const orgTag =
        /* istanbul ignore next */
        (cov_2d8kdj2qjq().s[64]++,
        /* istanbul ignore next */
        (cov_2d8kdj2qjq().b[30][0]++, (_a = tags.TagSet) === null) ||
        /* istanbul ignore next */
        (cov_2d8kdj2qjq().b[30][1]++, _a === void 0) ?
        /* istanbul ignore next */
        (cov_2d8kdj2qjq().b[29][0]++, void 0) :
        /* istanbul ignore next */
        (cov_2d8kdj2qjq().b[29][1]++, _a.find(tag => {
          /* istanbul ignore next */
          cov_2d8kdj2qjq().f[22]++;
          cov_2d8kdj2qjq().s[65]++;
          return tag.Key === 'organizationId';
        })));
        /* istanbul ignore next */
        cov_2d8kdj2qjq().s[66]++;
        if ((
        /* istanbul ignore next */
        (cov_2d8kdj2qjq().b[33][0]++, orgTag === null) ||
        /* istanbul ignore next */
        (cov_2d8kdj2qjq().b[33][1]++, orgTag === void 0) ?
        /* istanbul ignore next */
        (cov_2d8kdj2qjq().b[32][0]++, void 0) :
        /* istanbul ignore next */
        (cov_2d8kdj2qjq().b[32][1]++, orgTag.Value)) !== organizationId) {
          /* istanbul ignore next */
          cov_2d8kdj2qjq().b[31][0]++;
          cov_2d8kdj2qjq().s[67]++;
          throw new Error('Access denied: Organization mismatch');
        } else
        /* istanbul ignore next */
        {
          cov_2d8kdj2qjq().b[31][1]++;
        }
        const url =
        /* istanbul ignore next */
        (cov_2d8kdj2qjq().s[68]++, yield s3.getSignedUrlPromise('getObject', {
          Bucket: this.bucket,
          Key: fullKey,
          Expires: expiresIn
        }));
        /* istanbul ignore next */
        cov_2d8kdj2qjq().s[69]++;
        return url;
      } catch (error) {
        /* istanbul ignore next */
        cov_2d8kdj2qjq().s[70]++;
        logger_1.logger.error('Failed to generate presigned URL', {
          organizationId,
          key,
          error: error instanceof Error ?
          /* istanbul ignore next */
          (cov_2d8kdj2qjq().b[34][0]++, error.message) :
          /* istanbul ignore next */
          (cov_2d8kdj2qjq().b[34][1]++, error)
        });
        /* istanbul ignore next */
        cov_2d8kdj2qjq().s[71]++;
        throw new Error('Failed to generate presigned URL');
      }
    });
  }
  // Create organization bucket policy
  setupOrganizationPolicy(organizationId) {
    /* istanbul ignore next */
    cov_2d8kdj2qjq().f[23]++;
    cov_2d8kdj2qjq().s[72]++;
    return __awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_2d8kdj2qjq().f[24]++;
      cov_2d8kdj2qjq().s[73]++;
      // In a real implementation, this would create IAM policies
      // or bucket policies specific to the organization
      logger_1.logger.info('Setting up organization storage policy', {
        organizationId
      });
    });
  }
}
/* istanbul ignore next */
cov_2d8kdj2qjq().s[74]++;
exports.SecureStorageService = SecureStorageService;
/* istanbul ignore next */
cov_2d8kdj2qjq().s[75]++;
exports.storageService = new SecureStorageService();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,