71fa8231cf1983c569ff87e6d87e7f8f
"use strict";

/* istanbul ignore next */
function cov_1ryg5oj8ro() {
  var path = "/Users/yusukeyoshioka/projects/youtube/ai-chat/ai-chat-api/src/routes/webhooks.ts";
  var hash = "e4c80c3d0173059c7c99b383d4a529d2117f317a";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/yusukeyoshioka/projects/youtube/ai-chat/ai-chat-api/src/routes/webhooks.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 16
        },
        end: {
          line: 10,
          column: 1
        }
      },
      "1": {
        start: {
          line: 3,
          column: 28
        },
        end: {
          line: 3,
          column: 110
        }
      },
      "2": {
        start: {
          line: 3,
          column: 91
        },
        end: {
          line: 3,
          column: 106
        }
      },
      "3": {
        start: {
          line: 4,
          column: 4
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "4": {
        start: {
          line: 5,
          column: 36
        },
        end: {
          line: 5,
          column: 97
        }
      },
      "5": {
        start: {
          line: 5,
          column: 42
        },
        end: {
          line: 5,
          column: 70
        }
      },
      "6": {
        start: {
          line: 5,
          column: 85
        },
        end: {
          line: 5,
          column: 95
        }
      },
      "7": {
        start: {
          line: 6,
          column: 35
        },
        end: {
          line: 6,
          column: 100
        }
      },
      "8": {
        start: {
          line: 6,
          column: 41
        },
        end: {
          line: 6,
          column: 73
        }
      },
      "9": {
        start: {
          line: 6,
          column: 88
        },
        end: {
          line: 6,
          column: 98
        }
      },
      "10": {
        start: {
          line: 7,
          column: 32
        },
        end: {
          line: 7,
          column: 116
        }
      },
      "11": {
        start: {
          line: 8,
          column: 8
        },
        end: {
          line: 8,
          column: 78
        }
      },
      "12": {
        start: {
          line: 11,
          column: 22
        },
        end: {
          line: 13,
          column: 1
        }
      },
      "13": {
        start: {
          line: 12,
          column: 4
        },
        end: {
          line: 12,
          column: 62
        }
      },
      "14": {
        start: {
          line: 14,
          column: 0
        },
        end: {
          line: 14,
          column: 62
        }
      },
      "15": {
        start: {
          line: 15,
          column: 18
        },
        end: {
          line: 15,
          column: 53
        }
      },
      "16": {
        start: {
          line: 16,
          column: 15
        },
        end: {
          line: 16,
          column: 44
        }
      },
      "17": {
        start: {
          line: 17,
          column: 29
        },
        end: {
          line: 17,
          column: 72
        }
      },
      "18": {
        start: {
          line: 18,
          column: 25
        },
        end: {
          line: 18,
          column: 62
        }
      },
      "19": {
        start: {
          line: 19,
          column: 17
        },
        end: {
          line: 19,
          column: 41
        }
      },
      "20": {
        start: {
          line: 20,
          column: 15
        },
        end: {
          line: 20,
          column: 41
        }
      },
      "21": {
        start: {
          line: 22,
          column: 0
        },
        end: {
          line: 31,
          column: 4
        }
      },
      "22": {
        start: {
          line: 22,
          column: 95
        },
        end: {
          line: 31,
          column: 2
        }
      },
      "23": {
        start: {
          line: 23,
          column: 4
        },
        end: {
          line: 30,
          column: 5
        }
      },
      "24": {
        start: {
          line: 24,
          column: 25
        },
        end: {
          line: 24,
          column: 94
        }
      },
      "25": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 25,
          column: 27
        }
      },
      "26": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 28,
          column: 65
        }
      },
      "27": {
        start: {
          line: 29,
          column: 8
        },
        end: {
          line: 29,
          column: 68
        }
      },
      "28": {
        start: {
          line: 33,
          column: 0
        },
        end: {
          line: 47,
          column: 4
        }
      },
      "29": {
        start: {
          line: 33,
          column: 98
        },
        end: {
          line: 47,
          column: 2
        }
      },
      "30": {
        start: {
          line: 34,
          column: 4
        },
        end: {
          line: 46,
          column: 5
        }
      },
      "31": {
        start: {
          line: 35,
          column: 24
        },
        end: {
          line: 35,
          column: 107
        }
      },
      "32": {
        start: {
          line: 36,
          column: 8
        },
        end: {
          line: 36,
          column: 26
        }
      },
      "33": {
        start: {
          line: 39,
          column: 8
        },
        end: {
          line: 45,
          column: 9
        }
      },
      "34": {
        start: {
          line: 40,
          column: 12
        },
        end: {
          line: 40,
          column: 65
        }
      },
      "35": {
        start: {
          line: 43,
          column: 12
        },
        end: {
          line: 43,
          column: 68
        }
      },
      "36": {
        start: {
          line: 44,
          column: 12
        },
        end: {
          line: 44,
          column: 71
        }
      },
      "37": {
        start: {
          line: 49,
          column: 0
        },
        end: {
          line: 97,
          column: 4
        }
      },
      "38": {
        start: {
          line: 49,
          column: 96
        },
        end: {
          line: 97,
          column: 2
        }
      },
      "39": {
        start: {
          line: 50,
          column: 4
        },
        end: {
          line: 96,
          column: 5
        }
      },
      "40": {
        start: {
          line: 51,
          column: 70
        },
        end: {
          line: 51,
          column: 78
        }
      },
      "41": {
        start: {
          line: 52,
          column: 8
        },
        end: {
          line: 56,
          column: 9
        }
      },
      "42": {
        start: {
          line: 53,
          column: 12
        },
        end: {
          line: 55,
          column: 15
        }
      },
      "43": {
        start: {
          line: 58,
          column: 8
        },
        end: {
          line: 63,
          column: 9
        }
      },
      "44": {
        start: {
          line: 59,
          column: 12
        },
        end: {
          line: 59,
          column: 25
        }
      },
      "45": {
        start: {
          line: 62,
          column: 12
        },
        end: {
          line: 62,
          column: 73
        }
      },
      "46": {
        start: {
          line: 65,
          column: 28
        },
        end: {
          line: 75,
          column: 9
        }
      },
      "47": {
        start: {
          line: 76,
          column: 30
        },
        end: {
          line: 76,
          column: 76
        }
      },
      "48": {
        start: {
          line: 76,
          column: 51
        },
        end: {
          line: 76,
          column: 75
        }
      },
      "49": {
        start: {
          line: 77,
          column: 8
        },
        end: {
          line: 82,
          column: 9
        }
      },
      "50": {
        start: {
          line: 78,
          column: 12
        },
        end: {
          line: 81,
          column: 15
        }
      },
      "51": {
        start: {
          line: 83,
          column: 24
        },
        end: {
          line: 90,
          column: 10
        }
      },
      "52": {
        start: {
          line: 91,
          column: 8
        },
        end: {
          line: 91,
          column: 38
        }
      },
      "53": {
        start: {
          line: 94,
          column: 8
        },
        end: {
          line: 94,
          column: 65
        }
      },
      "54": {
        start: {
          line: 95,
          column: 8
        },
        end: {
          line: 95,
          column: 68
        }
      },
      "55": {
        start: {
          line: 99,
          column: 0
        },
        end: {
          line: 113,
          column: 4
        }
      },
      "56": {
        start: {
          line: 99,
          column: 98
        },
        end: {
          line: 113,
          column: 2
        }
      },
      "57": {
        start: {
          line: 100,
          column: 4
        },
        end: {
          line: 112,
          column: 5
        }
      },
      "58": {
        start: {
          line: 101,
          column: 24
        },
        end: {
          line: 101,
          column: 120
        }
      },
      "59": {
        start: {
          line: 102,
          column: 8
        },
        end: {
          line: 102,
          column: 26
        }
      },
      "60": {
        start: {
          line: 105,
          column: 8
        },
        end: {
          line: 111,
          column: 9
        }
      },
      "61": {
        start: {
          line: 106,
          column: 12
        },
        end: {
          line: 106,
          column: 65
        }
      },
      "62": {
        start: {
          line: 109,
          column: 12
        },
        end: {
          line: 109,
          column: 69
        }
      },
      "63": {
        start: {
          line: 110,
          column: 12
        },
        end: {
          line: 110,
          column: 72
        }
      },
      "64": {
        start: {
          line: 115,
          column: 0
        },
        end: {
          line: 129,
          column: 4
        }
      },
      "65": {
        start: {
          line: 115,
          column: 101
        },
        end: {
          line: 129,
          column: 2
        }
      },
      "66": {
        start: {
          line: 116,
          column: 4
        },
        end: {
          line: 128,
          column: 5
        }
      },
      "67": {
        start: {
          line: 117,
          column: 8
        },
        end: {
          line: 117,
          column: 95
        }
      },
      "68": {
        start: {
          line: 118,
          column: 8
        },
        end: {
          line: 118,
          column: 31
        }
      },
      "69": {
        start: {
          line: 121,
          column: 8
        },
        end: {
          line: 127,
          column: 9
        }
      },
      "70": {
        start: {
          line: 122,
          column: 12
        },
        end: {
          line: 122,
          column: 65
        }
      },
      "71": {
        start: {
          line: 125,
          column: 12
        },
        end: {
          line: 125,
          column: 69
        }
      },
      "72": {
        start: {
          line: 126,
          column: 12
        },
        end: {
          line: 126,
          column: 72
        }
      },
      "73": {
        start: {
          line: 131,
          column: 0
        },
        end: {
          line: 152,
          column: 4
        }
      },
      "74": {
        start: {
          line: 131,
          column: 103
        },
        end: {
          line: 152,
          column: 2
        }
      },
      "75": {
        start: {
          line: 132,
          column: 4
        },
        end: {
          line: 151,
          column: 5
        }
      },
      "76": {
        start: {
          line: 133,
          column: 61
        },
        end: {
          line: 133,
          column: 70
        }
      },
      "77": {
        start: {
          line: 134,
          column: 21
        },
        end: {
          line: 140,
          column: 10
        }
      },
      "78": {
        start: {
          line: 141,
          column: 8
        },
        end: {
          line: 141,
          column: 23
        }
      },
      "79": {
        start: {
          line: 144,
          column: 8
        },
        end: {
          line: 150,
          column: 9
        }
      },
      "80": {
        start: {
          line: 145,
          column: 12
        },
        end: {
          line: 145,
          column: 65
        }
      },
      "81": {
        start: {
          line: 148,
          column: 12
        },
        end: {
          line: 148,
          column: 73
        }
      },
      "82": {
        start: {
          line: 149,
          column: 12
        },
        end: {
          line: 149,
          column: 76
        }
      },
      "83": {
        start: {
          line: 154,
          column: 0
        },
        end: {
          line: 168,
          column: 4
        }
      },
      "84": {
        start: {
          line: 154,
          column: 104
        },
        end: {
          line: 168,
          column: 2
        }
      },
      "85": {
        start: {
          line: 155,
          column: 4
        },
        end: {
          line: 167,
          column: 5
        }
      },
      "86": {
        start: {
          line: 156,
          column: 20
        },
        end: {
          line: 156,
          column: 104
        }
      },
      "87": {
        start: {
          line: 157,
          column: 8
        },
        end: {
          line: 157,
          column: 22
        }
      },
      "88": {
        start: {
          line: 160,
          column: 8
        },
        end: {
          line: 166,
          column: 9
        }
      },
      "89": {
        start: {
          line: 161,
          column: 12
        },
        end: {
          line: 161,
          column: 65
        }
      },
      "90": {
        start: {
          line: 164,
          column: 12
        },
        end: {
          line: 164,
          column: 67
        }
      },
      "91": {
        start: {
          line: 165,
          column: 12
        },
        end: {
          line: 165,
          column: 70
        }
      },
      "92": {
        start: {
          line: 169,
          column: 0
        },
        end: {
          line: 169,
          column: 25
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 44
          },
          end: {
            line: 2,
            column: 45
          }
        },
        loc: {
          start: {
            line: 2,
            column: 89
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "adopt",
        decl: {
          start: {
            line: 3,
            column: 13
          },
          end: {
            line: 3,
            column: 18
          }
        },
        loc: {
          start: {
            line: 3,
            column: 26
          },
          end: {
            line: 3,
            column: 112
          }
        },
        line: 3
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 3,
            column: 70
          },
          end: {
            line: 3,
            column: 71
          }
        },
        loc: {
          start: {
            line: 3,
            column: 89
          },
          end: {
            line: 3,
            column: 108
          }
        },
        line: 3
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 4,
            column: 36
          },
          end: {
            line: 4,
            column: 37
          }
        },
        loc: {
          start: {
            line: 4,
            column: 63
          },
          end: {
            line: 9,
            column: 5
          }
        },
        line: 4
      },
      "4": {
        name: "fulfilled",
        decl: {
          start: {
            line: 5,
            column: 17
          },
          end: {
            line: 5,
            column: 26
          }
        },
        loc: {
          start: {
            line: 5,
            column: 34
          },
          end: {
            line: 5,
            column: 99
          }
        },
        line: 5
      },
      "5": {
        name: "rejected",
        decl: {
          start: {
            line: 6,
            column: 17
          },
          end: {
            line: 6,
            column: 25
          }
        },
        loc: {
          start: {
            line: 6,
            column: 33
          },
          end: {
            line: 6,
            column: 102
          }
        },
        line: 6
      },
      "6": {
        name: "step",
        decl: {
          start: {
            line: 7,
            column: 17
          },
          end: {
            line: 7,
            column: 21
          }
        },
        loc: {
          start: {
            line: 7,
            column: 30
          },
          end: {
            line: 7,
            column: 118
          }
        },
        line: 7
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 11,
            column: 56
          },
          end: {
            line: 11,
            column: 57
          }
        },
        loc: {
          start: {
            line: 11,
            column: 71
          },
          end: {
            line: 13,
            column: 1
          }
        },
        line: 11
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 22,
            column: 81
          },
          end: {
            line: 22,
            column: 82
          }
        },
        loc: {
          start: {
            line: 22,
            column: 95
          },
          end: {
            line: 31,
            column: 2
          }
        },
        line: 22
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 22,
            column: 129
          },
          end: {
            line: 22,
            column: 130
          }
        },
        loc: {
          start: {
            line: 22,
            column: 142
          },
          end: {
            line: 31,
            column: 1
          }
        },
        line: 22
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 33,
            column: 84
          },
          end: {
            line: 33,
            column: 85
          }
        },
        loc: {
          start: {
            line: 33,
            column: 98
          },
          end: {
            line: 47,
            column: 2
          }
        },
        line: 33
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 33,
            column: 132
          },
          end: {
            line: 33,
            column: 133
          }
        },
        loc: {
          start: {
            line: 33,
            column: 145
          },
          end: {
            line: 47,
            column: 1
          }
        },
        line: 33
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 49,
            column: 82
          },
          end: {
            line: 49,
            column: 83
          }
        },
        loc: {
          start: {
            line: 49,
            column: 96
          },
          end: {
            line: 97,
            column: 2
          }
        },
        line: 49
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 49,
            column: 130
          },
          end: {
            line: 49,
            column: 131
          }
        },
        loc: {
          start: {
            line: 49,
            column: 143
          },
          end: {
            line: 97,
            column: 1
          }
        },
        line: 49
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 76,
            column: 44
          },
          end: {
            line: 76,
            column: 45
          }
        },
        loc: {
          start: {
            line: 76,
            column: 51
          },
          end: {
            line: 76,
            column: 75
          }
        },
        line: 76
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 99,
            column: 84
          },
          end: {
            line: 99,
            column: 85
          }
        },
        loc: {
          start: {
            line: 99,
            column: 98
          },
          end: {
            line: 113,
            column: 2
          }
        },
        line: 99
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 99,
            column: 132
          },
          end: {
            line: 99,
            column: 133
          }
        },
        loc: {
          start: {
            line: 99,
            column: 145
          },
          end: {
            line: 113,
            column: 1
          }
        },
        line: 99
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 115,
            column: 87
          },
          end: {
            line: 115,
            column: 88
          }
        },
        loc: {
          start: {
            line: 115,
            column: 101
          },
          end: {
            line: 129,
            column: 2
          }
        },
        line: 115
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 115,
            column: 135
          },
          end: {
            line: 115,
            column: 136
          }
        },
        loc: {
          start: {
            line: 115,
            column: 148
          },
          end: {
            line: 129,
            column: 1
          }
        },
        line: 115
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 131,
            column: 89
          },
          end: {
            line: 131,
            column: 90
          }
        },
        loc: {
          start: {
            line: 131,
            column: 103
          },
          end: {
            line: 152,
            column: 2
          }
        },
        line: 131
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 131,
            column: 137
          },
          end: {
            line: 131,
            column: 138
          }
        },
        loc: {
          start: {
            line: 131,
            column: 150
          },
          end: {
            line: 152,
            column: 1
          }
        },
        line: 131
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 154,
            column: 90
          },
          end: {
            line: 154,
            column: 91
          }
        },
        loc: {
          start: {
            line: 154,
            column: 104
          },
          end: {
            line: 168,
            column: 2
          }
        },
        line: 154
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 154,
            column: 138
          },
          end: {
            line: 154,
            column: 139
          }
        },
        loc: {
          start: {
            line: 154,
            column: 151
          },
          end: {
            line: 168,
            column: 1
          }
        },
        line: 154
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 16
          },
          end: {
            line: 10,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 17
          },
          end: {
            line: 2,
            column: 21
          }
        }, {
          start: {
            line: 2,
            column: 25
          },
          end: {
            line: 2,
            column: 39
          }
        }, {
          start: {
            line: 2,
            column: 44
          },
          end: {
            line: 10,
            column: 1
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 3,
            column: 35
          },
          end: {
            line: 3,
            column: 109
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 3,
            column: 56
          },
          end: {
            line: 3,
            column: 61
          }
        }, {
          start: {
            line: 3,
            column: 64
          },
          end: {
            line: 3,
            column: 109
          }
        }],
        line: 3
      },
      "2": {
        loc: {
          start: {
            line: 4,
            column: 16
          },
          end: {
            line: 4,
            column: 34
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 4,
            column: 16
          },
          end: {
            line: 4,
            column: 17
          }
        }, {
          start: {
            line: 4,
            column: 22
          },
          end: {
            line: 4,
            column: 33
          }
        }],
        line: 4
      },
      "3": {
        loc: {
          start: {
            line: 7,
            column: 32
          },
          end: {
            line: 7,
            column: 115
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 7,
            column: 46
          },
          end: {
            line: 7,
            column: 67
          }
        }, {
          start: {
            line: 7,
            column: 70
          },
          end: {
            line: 7,
            column: 115
          }
        }],
        line: 7
      },
      "4": {
        loc: {
          start: {
            line: 8,
            column: 51
          },
          end: {
            line: 8,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 8,
            column: 51
          },
          end: {
            line: 8,
            column: 61
          }
        }, {
          start: {
            line: 8,
            column: 65
          },
          end: {
            line: 8,
            column: 67
          }
        }],
        line: 8
      },
      "5": {
        loc: {
          start: {
            line: 11,
            column: 22
          },
          end: {
            line: 13,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 11,
            column: 23
          },
          end: {
            line: 11,
            column: 27
          }
        }, {
          start: {
            line: 11,
            column: 31
          },
          end: {
            line: 11,
            column: 51
          }
        }, {
          start: {
            line: 11,
            column: 56
          },
          end: {
            line: 13,
            column: 1
          }
        }],
        line: 11
      },
      "6": {
        loc: {
          start: {
            line: 12,
            column: 11
          },
          end: {
            line: 12,
            column: 61
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 12,
            column: 37
          },
          end: {
            line: 12,
            column: 40
          }
        }, {
          start: {
            line: 12,
            column: 43
          },
          end: {
            line: 12,
            column: 61
          }
        }],
        line: 12
      },
      "7": {
        loc: {
          start: {
            line: 12,
            column: 12
          },
          end: {
            line: 12,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 12,
            column: 12
          },
          end: {
            line: 12,
            column: 15
          }
        }, {
          start: {
            line: 12,
            column: 19
          },
          end: {
            line: 12,
            column: 33
          }
        }],
        line: 12
      },
      "8": {
        loc: {
          start: {
            line: 39,
            column: 8
          },
          end: {
            line: 45,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 39,
            column: 8
          },
          end: {
            line: 45,
            column: 9
          }
        }, {
          start: {
            line: 42,
            column: 13
          },
          end: {
            line: 45,
            column: 9
          }
        }],
        line: 39
      },
      "9": {
        loc: {
          start: {
            line: 52,
            column: 8
          },
          end: {
            line: 56,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 52,
            column: 8
          },
          end: {
            line: 56,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 52
      },
      "10": {
        loc: {
          start: {
            line: 52,
            column: 12
          },
          end: {
            line: 52,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 52,
            column: 12
          },
          end: {
            line: 52,
            column: 17
          }
        }, {
          start: {
            line: 52,
            column: 21
          },
          end: {
            line: 52,
            column: 25
          }
        }, {
          start: {
            line: 52,
            column: 29
          },
          end: {
            line: 52,
            column: 36
          }
        }, {
          start: {
            line: 52,
            column: 40
          },
          end: {
            line: 52,
            column: 62
          }
        }],
        line: 52
      },
      "11": {
        loc: {
          start: {
            line: 77,
            column: 8
          },
          end: {
            line: 82,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 77,
            column: 8
          },
          end: {
            line: 82,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 77
      },
      "12": {
        loc: {
          start: {
            line: 105,
            column: 8
          },
          end: {
            line: 111,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 105,
            column: 8
          },
          end: {
            line: 111,
            column: 9
          }
        }, {
          start: {
            line: 108,
            column: 13
          },
          end: {
            line: 111,
            column: 9
          }
        }],
        line: 105
      },
      "13": {
        loc: {
          start: {
            line: 121,
            column: 8
          },
          end: {
            line: 127,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 121,
            column: 8
          },
          end: {
            line: 127,
            column: 9
          }
        }, {
          start: {
            line: 124,
            column: 13
          },
          end: {
            line: 127,
            column: 9
          }
        }],
        line: 121
      },
      "14": {
        loc: {
          start: {
            line: 137,
            column: 23
          },
          end: {
            line: 137,
            column: 66
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 137,
            column: 35
          },
          end: {
            line: 137,
            column: 54
          }
        }, {
          start: {
            line: 137,
            column: 57
          },
          end: {
            line: 137,
            column: 66
          }
        }],
        line: 137
      },
      "15": {
        loc: {
          start: {
            line: 138,
            column: 21
          },
          end: {
            line: 138,
            column: 60
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 138,
            column: 31
          },
          end: {
            line: 138,
            column: 48
          }
        }, {
          start: {
            line: 138,
            column: 51
          },
          end: {
            line: 138,
            column: 60
          }
        }],
        line: 138
      },
      "16": {
        loc: {
          start: {
            line: 139,
            column: 19
          },
          end: {
            line: 139,
            column: 54
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 139,
            column: 27
          },
          end: {
            line: 139,
            column: 42
          }
        }, {
          start: {
            line: 139,
            column: 45
          },
          end: {
            line: 139,
            column: 54
          }
        }],
        line: 139
      },
      "17": {
        loc: {
          start: {
            line: 144,
            column: 8
          },
          end: {
            line: 150,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 144,
            column: 8
          },
          end: {
            line: 150,
            column: 9
          }
        }, {
          start: {
            line: 147,
            column: 13
          },
          end: {
            line: 150,
            column: 9
          }
        }],
        line: 144
      },
      "18": {
        loc: {
          start: {
            line: 160,
            column: 8
          },
          end: {
            line: 166,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 160,
            column: 8
          },
          end: {
            line: 166,
            column: 9
          }
        }, {
          start: {
            line: 163,
            column: 13
          },
          end: {
            line: 166,
            column: 9
          }
        }],
        line: 160
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0, 0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/yusukeyoshioka/projects/youtube/ai-chat/ai-chat-api/src/routes/webhooks.ts",
      mappings: "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",
      names: [],
      sources: ["/Users/yusukeyoshioka/projects/youtube/ai-chat/ai-chat-api/src/routes/webhooks.ts"],
      sourcesContent: ["import express from 'express';\nimport { authMiddleware as requireAuth } from '../middleware/auth';\nimport { orgAccessMiddleware as requireOrgAccess } from '../middleware/organizationAccess';\nimport { webhookService } from '../services/webhookService';\nimport { logger } from '../lib/logger';\n\nconst router = express.Router();\n\n// Get all webhooks for organization\nrouter.get('/', requireAuth, requireOrgAccess, async (req, res) => {\n  try {\n    const webhooks = await webhookService.getWebhooks(req.organizationId!);\n    res.json(webhooks);\n  } catch (error) {\n    logger.error('Failed to fetch webhooks', error);\n    res.status(500).json({ error: 'Failed to fetch webhooks' });\n  }\n});\n\n// Get single webhook\nrouter.get('/:id', requireAuth, requireOrgAccess, async (req, res) => {\n  try {\n    const webhook = await webhookService.getWebhook(\n      req.params.id,\n      req.organizationId!\n    );\n    res.json(webhook);\n  } catch (error: any) {\n    if (error.message === 'Webhook not found') {\n      res.status(404).json({ error: 'Webhook not found' });\n    } else {\n      logger.error('Failed to fetch webhook', error);\n      res.status(500).json({ error: 'Failed to fetch webhook' });\n    }\n  }\n});\n\n// Create webhook\nrouter.post('/', requireAuth, requireOrgAccess, async (req, res) => {\n  try {\n    const { name, url, events, headers, retryCount, timeoutMs } = req.body;\n\n    if (!name || !url || !events || !Array.isArray(events)) {\n      return res.status(400).json({\n        error: 'Name, URL, and events array are required',\n      });\n    }\n\n    // Validate URL\n    try {\n      new URL(url);\n    } catch {\n      return res.status(400).json({ error: 'Invalid URL format' });\n    }\n\n    // Validate events\n    const validEvents = [\n      'chat.created',\n      'user.created',\n      'user.updated',\n      'widget.created',\n      'widget.updated',\n      'widget.deleted',\n      'knowledge_base.created',\n      'knowledge_base.updated',\n      'knowledge_base.deleted',\n    ];\n\n    const invalidEvents = events.filter(\n      (e: string) => !validEvents.includes(e)\n    );\n    if (invalidEvents.length > 0) {\n      return res.status(400).json({\n        error: `Invalid events: ${invalidEvents.join(', ')}`,\n        validEvents,\n      });\n    }\n\n    const webhook = await webhookService.createWebhook(req.organizationId!, {\n      name,\n      url,\n      events,\n      headers,\n      retryCount,\n      timeoutMs,\n    });\n\n    res.status(201).json(webhook);\n  } catch (error) {\n    logger.error('Failed to create webhook', error);\n    res.status(500).json({ error: 'Failed to create webhook' });\n  }\n});\n\n// Update webhook\nrouter.put('/:id', requireAuth, requireOrgAccess, async (req, res) => {\n  try {\n    const webhook = await webhookService.updateWebhook(\n      req.params.id,\n      req.organizationId!,\n      req.body\n    );\n    res.json(webhook);\n  } catch (error: any) {\n    if (error.message === 'Webhook not found or access denied') {\n      res.status(404).json({ error: 'Webhook not found' });\n    } else {\n      logger.error('Failed to update webhook', error);\n      res.status(500).json({ error: 'Failed to update webhook' });\n    }\n  }\n});\n\n// Delete webhook\nrouter.delete('/:id', requireAuth, requireOrgAccess, async (req, res) => {\n  try {\n    await webhookService.deleteWebhook(req.params.id, req.organizationId!);\n    res.status(204).send();\n  } catch (error: any) {\n    if (error.message === 'Webhook not found or access denied') {\n      res.status(404).json({ error: 'Webhook not found' });\n    } else {\n      logger.error('Failed to delete webhook', error);\n      res.status(500).json({ error: 'Failed to delete webhook' });\n    }\n  }\n});\n\n// Get webhook logs\nrouter.get('/:id/logs', requireAuth, requireOrgAccess, async (req, res) => {\n  try {\n    const { status, event, startDate, endDate, limit } = req.query;\n\n    const logs = await webhookService.getWebhookLogs(\n      req.params.id,\n      req.organizationId!,\n      {\n        status: status as string,\n        event: event as string,\n        startDate: startDate ? new Date(startDate as string) : undefined,\n        endDate: endDate ? new Date(endDate as string) : undefined,\n        limit: limit ? parseInt(limit as string) : undefined,\n      }\n    );\n\n    res.json(logs);\n  } catch (error: any) {\n    if (error.message === 'Webhook not found or access denied') {\n      res.status(404).json({ error: 'Webhook not found' });\n    } else {\n      logger.error('Failed to fetch webhook logs', error);\n      res.status(500).json({ error: 'Failed to fetch webhook logs' });\n    }\n  }\n});\n\n// Test webhook\nrouter.post('/:id/test', requireAuth, requireOrgAccess, async (req, res) => {\n  try {\n    const log = await webhookService.testWebhook(\n      req.params.id,\n      req.organizationId!\n    );\n    res.json(log);\n  } catch (error: any) {\n    if (error.message === 'Webhook not found') {\n      res.status(404).json({ error: 'Webhook not found' });\n    } else {\n      logger.error('Failed to test webhook', error);\n      res.status(500).json({ error: 'Failed to test webhook' });\n    }\n  }\n});\n\nexport default router;\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "e4c80c3d0173059c7c99b383d4a529d2117f317a"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1ryg5oj8ro = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1ryg5oj8ro();
var __awaiter =
/* istanbul ignore next */
(cov_1ryg5oj8ro().s[0]++,
/* istanbul ignore next */
(cov_1ryg5oj8ro().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_1ryg5oj8ro().b[0][1]++, this.__awaiter) ||
/* istanbul ignore next */
(cov_1ryg5oj8ro().b[0][2]++, function (thisArg, _arguments, P, generator) {
  /* istanbul ignore next */
  cov_1ryg5oj8ro().f[0]++;
  function adopt(value) {
    /* istanbul ignore next */
    cov_1ryg5oj8ro().f[1]++;
    cov_1ryg5oj8ro().s[1]++;
    return value instanceof P ?
    /* istanbul ignore next */
    (cov_1ryg5oj8ro().b[1][0]++, value) :
    /* istanbul ignore next */
    (cov_1ryg5oj8ro().b[1][1]++, new P(function (resolve) {
      /* istanbul ignore next */
      cov_1ryg5oj8ro().f[2]++;
      cov_1ryg5oj8ro().s[2]++;
      resolve(value);
    }));
  }
  /* istanbul ignore next */
  cov_1ryg5oj8ro().s[3]++;
  return new (
  /* istanbul ignore next */
  (cov_1ryg5oj8ro().b[2][0]++, P) ||
  /* istanbul ignore next */
  (cov_1ryg5oj8ro().b[2][1]++, P = Promise))(function (resolve, reject) {
    /* istanbul ignore next */
    cov_1ryg5oj8ro().f[3]++;
    function fulfilled(value) {
      /* istanbul ignore next */
      cov_1ryg5oj8ro().f[4]++;
      cov_1ryg5oj8ro().s[4]++;
      try {
        /* istanbul ignore next */
        cov_1ryg5oj8ro().s[5]++;
        step(generator.next(value));
      } catch (e) {
        /* istanbul ignore next */
        cov_1ryg5oj8ro().s[6]++;
        reject(e);
      }
    }
    function rejected(value) {
      /* istanbul ignore next */
      cov_1ryg5oj8ro().f[5]++;
      cov_1ryg5oj8ro().s[7]++;
      try {
        /* istanbul ignore next */
        cov_1ryg5oj8ro().s[8]++;
        step(generator["throw"](value));
      } catch (e) {
        /* istanbul ignore next */
        cov_1ryg5oj8ro().s[9]++;
        reject(e);
      }
    }
    function step(result) {
      /* istanbul ignore next */
      cov_1ryg5oj8ro().f[6]++;
      cov_1ryg5oj8ro().s[10]++;
      result.done ?
      /* istanbul ignore next */
      (cov_1ryg5oj8ro().b[3][0]++, resolve(result.value)) :
      /* istanbul ignore next */
      (cov_1ryg5oj8ro().b[3][1]++, adopt(result.value).then(fulfilled, rejected));
    }
    /* istanbul ignore next */
    cov_1ryg5oj8ro().s[11]++;
    step((generator = generator.apply(thisArg,
    /* istanbul ignore next */
    (cov_1ryg5oj8ro().b[4][0]++, _arguments) ||
    /* istanbul ignore next */
    (cov_1ryg5oj8ro().b[4][1]++, []))).next());
  });
}));
var __importDefault =
/* istanbul ignore next */
(cov_1ryg5oj8ro().s[12]++,
/* istanbul ignore next */
(cov_1ryg5oj8ro().b[5][0]++, this) &&
/* istanbul ignore next */
(cov_1ryg5oj8ro().b[5][1]++, this.__importDefault) ||
/* istanbul ignore next */
(cov_1ryg5oj8ro().b[5][2]++, function (mod) {
  /* istanbul ignore next */
  cov_1ryg5oj8ro().f[7]++;
  cov_1ryg5oj8ro().s[13]++;
  return /* istanbul ignore next */(cov_1ryg5oj8ro().b[7][0]++, mod) &&
  /* istanbul ignore next */
  (cov_1ryg5oj8ro().b[7][1]++, mod.__esModule) ?
  /* istanbul ignore next */
  (cov_1ryg5oj8ro().b[6][0]++, mod) :
  /* istanbul ignore next */
  (cov_1ryg5oj8ro().b[6][1]++, {
    "default": mod
  });
}));
/* istanbul ignore next */
cov_1ryg5oj8ro().s[14]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
const express_1 =
/* istanbul ignore next */
(cov_1ryg5oj8ro().s[15]++, __importDefault(require("express")));
const auth_1 =
/* istanbul ignore next */
(cov_1ryg5oj8ro().s[16]++, require("../middleware/auth"));
const organizationAccess_1 =
/* istanbul ignore next */
(cov_1ryg5oj8ro().s[17]++, require("../middleware/organizationAccess"));
const webhookService_1 =
/* istanbul ignore next */
(cov_1ryg5oj8ro().s[18]++, require("../services/webhookService"));
const logger_1 =
/* istanbul ignore next */
(cov_1ryg5oj8ro().s[19]++, require("../lib/logger"));
const router =
/* istanbul ignore next */
(cov_1ryg5oj8ro().s[20]++, express_1.default.Router());
// Get all webhooks for organization
/* istanbul ignore next */
cov_1ryg5oj8ro().s[21]++;
router.get('/', auth_1.authMiddleware, organizationAccess_1.orgAccessMiddleware, (req, res) => {
  /* istanbul ignore next */
  cov_1ryg5oj8ro().f[8]++;
  cov_1ryg5oj8ro().s[22]++;
  return __awaiter(void 0, void 0, void 0, function* () {
    /* istanbul ignore next */
    cov_1ryg5oj8ro().f[9]++;
    cov_1ryg5oj8ro().s[23]++;
    try {
      const webhooks =
      /* istanbul ignore next */
      (cov_1ryg5oj8ro().s[24]++, yield webhookService_1.webhookService.getWebhooks(req.organizationId));
      /* istanbul ignore next */
      cov_1ryg5oj8ro().s[25]++;
      res.json(webhooks);
    } catch (error) {
      /* istanbul ignore next */
      cov_1ryg5oj8ro().s[26]++;
      logger_1.logger.error('Failed to fetch webhooks', error);
      /* istanbul ignore next */
      cov_1ryg5oj8ro().s[27]++;
      res.status(500).json({
        error: 'Failed to fetch webhooks'
      });
    }
  });
});
// Get single webhook
/* istanbul ignore next */
cov_1ryg5oj8ro().s[28]++;
router.get('/:id', auth_1.authMiddleware, organizationAccess_1.orgAccessMiddleware, (req, res) => {
  /* istanbul ignore next */
  cov_1ryg5oj8ro().f[10]++;
  cov_1ryg5oj8ro().s[29]++;
  return __awaiter(void 0, void 0, void 0, function* () {
    /* istanbul ignore next */
    cov_1ryg5oj8ro().f[11]++;
    cov_1ryg5oj8ro().s[30]++;
    try {
      const webhook =
      /* istanbul ignore next */
      (cov_1ryg5oj8ro().s[31]++, yield webhookService_1.webhookService.getWebhook(req.params.id, req.organizationId));
      /* istanbul ignore next */
      cov_1ryg5oj8ro().s[32]++;
      res.json(webhook);
    } catch (error) {
      /* istanbul ignore next */
      cov_1ryg5oj8ro().s[33]++;
      if (error.message === 'Webhook not found') {
        /* istanbul ignore next */
        cov_1ryg5oj8ro().b[8][0]++;
        cov_1ryg5oj8ro().s[34]++;
        res.status(404).json({
          error: 'Webhook not found'
        });
      } else {
        /* istanbul ignore next */
        cov_1ryg5oj8ro().b[8][1]++;
        cov_1ryg5oj8ro().s[35]++;
        logger_1.logger.error('Failed to fetch webhook', error);
        /* istanbul ignore next */
        cov_1ryg5oj8ro().s[36]++;
        res.status(500).json({
          error: 'Failed to fetch webhook'
        });
      }
    }
  });
});
// Create webhook
/* istanbul ignore next */
cov_1ryg5oj8ro().s[37]++;
router.post('/', auth_1.authMiddleware, organizationAccess_1.orgAccessMiddleware, (req, res) => {
  /* istanbul ignore next */
  cov_1ryg5oj8ro().f[12]++;
  cov_1ryg5oj8ro().s[38]++;
  return __awaiter(void 0, void 0, void 0, function* () {
    /* istanbul ignore next */
    cov_1ryg5oj8ro().f[13]++;
    cov_1ryg5oj8ro().s[39]++;
    try {
      const {
        name,
        url,
        events,
        headers,
        retryCount,
        timeoutMs
      } =
      /* istanbul ignore next */
      (cov_1ryg5oj8ro().s[40]++, req.body);
      /* istanbul ignore next */
      cov_1ryg5oj8ro().s[41]++;
      if (
      /* istanbul ignore next */
      (cov_1ryg5oj8ro().b[10][0]++, !name) ||
      /* istanbul ignore next */
      (cov_1ryg5oj8ro().b[10][1]++, !url) ||
      /* istanbul ignore next */
      (cov_1ryg5oj8ro().b[10][2]++, !events) ||
      /* istanbul ignore next */
      (cov_1ryg5oj8ro().b[10][3]++, !Array.isArray(events))) {
        /* istanbul ignore next */
        cov_1ryg5oj8ro().b[9][0]++;
        cov_1ryg5oj8ro().s[42]++;
        return res.status(400).json({
          error: 'Name, URL, and events array are required'
        });
      } else
      /* istanbul ignore next */
      {
        cov_1ryg5oj8ro().b[9][1]++;
      }
      // Validate URL
      cov_1ryg5oj8ro().s[43]++;
      try {
        /* istanbul ignore next */
        cov_1ryg5oj8ro().s[44]++;
        new URL(url);
      } catch (_a) {
        /* istanbul ignore next */
        cov_1ryg5oj8ro().s[45]++;
        return res.status(400).json({
          error: 'Invalid URL format'
        });
      }
      // Validate events
      const validEvents =
      /* istanbul ignore next */
      (cov_1ryg5oj8ro().s[46]++, ['chat.created', 'user.created', 'user.updated', 'widget.created', 'widget.updated', 'widget.deleted', 'knowledge_base.created', 'knowledge_base.updated', 'knowledge_base.deleted']);
      const invalidEvents =
      /* istanbul ignore next */
      (cov_1ryg5oj8ro().s[47]++, events.filter(e => {
        /* istanbul ignore next */
        cov_1ryg5oj8ro().f[14]++;
        cov_1ryg5oj8ro().s[48]++;
        return !validEvents.includes(e);
      }));
      /* istanbul ignore next */
      cov_1ryg5oj8ro().s[49]++;
      if (invalidEvents.length > 0) {
        /* istanbul ignore next */
        cov_1ryg5oj8ro().b[11][0]++;
        cov_1ryg5oj8ro().s[50]++;
        return res.status(400).json({
          error: `Invalid events: ${invalidEvents.join(', ')}`,
          validEvents
        });
      } else
      /* istanbul ignore next */
      {
        cov_1ryg5oj8ro().b[11][1]++;
      }
      const webhook =
      /* istanbul ignore next */
      (cov_1ryg5oj8ro().s[51]++, yield webhookService_1.webhookService.createWebhook(req.organizationId, {
        name,
        url,
        events,
        headers,
        retryCount,
        timeoutMs
      }));
      /* istanbul ignore next */
      cov_1ryg5oj8ro().s[52]++;
      res.status(201).json(webhook);
    } catch (error) {
      /* istanbul ignore next */
      cov_1ryg5oj8ro().s[53]++;
      logger_1.logger.error('Failed to create webhook', error);
      /* istanbul ignore next */
      cov_1ryg5oj8ro().s[54]++;
      res.status(500).json({
        error: 'Failed to create webhook'
      });
    }
  });
});
// Update webhook
/* istanbul ignore next */
cov_1ryg5oj8ro().s[55]++;
router.put('/:id', auth_1.authMiddleware, organizationAccess_1.orgAccessMiddleware, (req, res) => {
  /* istanbul ignore next */
  cov_1ryg5oj8ro().f[15]++;
  cov_1ryg5oj8ro().s[56]++;
  return __awaiter(void 0, void 0, void 0, function* () {
    /* istanbul ignore next */
    cov_1ryg5oj8ro().f[16]++;
    cov_1ryg5oj8ro().s[57]++;
    try {
      const webhook =
      /* istanbul ignore next */
      (cov_1ryg5oj8ro().s[58]++, yield webhookService_1.webhookService.updateWebhook(req.params.id, req.organizationId, req.body));
      /* istanbul ignore next */
      cov_1ryg5oj8ro().s[59]++;
      res.json(webhook);
    } catch (error) {
      /* istanbul ignore next */
      cov_1ryg5oj8ro().s[60]++;
      if (error.message === 'Webhook not found or access denied') {
        /* istanbul ignore next */
        cov_1ryg5oj8ro().b[12][0]++;
        cov_1ryg5oj8ro().s[61]++;
        res.status(404).json({
          error: 'Webhook not found'
        });
      } else {
        /* istanbul ignore next */
        cov_1ryg5oj8ro().b[12][1]++;
        cov_1ryg5oj8ro().s[62]++;
        logger_1.logger.error('Failed to update webhook', error);
        /* istanbul ignore next */
        cov_1ryg5oj8ro().s[63]++;
        res.status(500).json({
          error: 'Failed to update webhook'
        });
      }
    }
  });
});
// Delete webhook
/* istanbul ignore next */
cov_1ryg5oj8ro().s[64]++;
router.delete('/:id', auth_1.authMiddleware, organizationAccess_1.orgAccessMiddleware, (req, res) => {
  /* istanbul ignore next */
  cov_1ryg5oj8ro().f[17]++;
  cov_1ryg5oj8ro().s[65]++;
  return __awaiter(void 0, void 0, void 0, function* () {
    /* istanbul ignore next */
    cov_1ryg5oj8ro().f[18]++;
    cov_1ryg5oj8ro().s[66]++;
    try {
      /* istanbul ignore next */
      cov_1ryg5oj8ro().s[67]++;
      yield webhookService_1.webhookService.deleteWebhook(req.params.id, req.organizationId);
      /* istanbul ignore next */
      cov_1ryg5oj8ro().s[68]++;
      res.status(204).send();
    } catch (error) {
      /* istanbul ignore next */
      cov_1ryg5oj8ro().s[69]++;
      if (error.message === 'Webhook not found or access denied') {
        /* istanbul ignore next */
        cov_1ryg5oj8ro().b[13][0]++;
        cov_1ryg5oj8ro().s[70]++;
        res.status(404).json({
          error: 'Webhook not found'
        });
      } else {
        /* istanbul ignore next */
        cov_1ryg5oj8ro().b[13][1]++;
        cov_1ryg5oj8ro().s[71]++;
        logger_1.logger.error('Failed to delete webhook', error);
        /* istanbul ignore next */
        cov_1ryg5oj8ro().s[72]++;
        res.status(500).json({
          error: 'Failed to delete webhook'
        });
      }
    }
  });
});
// Get webhook logs
/* istanbul ignore next */
cov_1ryg5oj8ro().s[73]++;
router.get('/:id/logs', auth_1.authMiddleware, organizationAccess_1.orgAccessMiddleware, (req, res) => {
  /* istanbul ignore next */
  cov_1ryg5oj8ro().f[19]++;
  cov_1ryg5oj8ro().s[74]++;
  return __awaiter(void 0, void 0, void 0, function* () {
    /* istanbul ignore next */
    cov_1ryg5oj8ro().f[20]++;
    cov_1ryg5oj8ro().s[75]++;
    try {
      const {
        status,
        event,
        startDate,
        endDate,
        limit
      } =
      /* istanbul ignore next */
      (cov_1ryg5oj8ro().s[76]++, req.query);
      const logs =
      /* istanbul ignore next */
      (cov_1ryg5oj8ro().s[77]++, yield webhookService_1.webhookService.getWebhookLogs(req.params.id, req.organizationId, {
        status: status,
        event: event,
        startDate: startDate ?
        /* istanbul ignore next */
        (cov_1ryg5oj8ro().b[14][0]++, new Date(startDate)) :
        /* istanbul ignore next */
        (cov_1ryg5oj8ro().b[14][1]++, undefined),
        endDate: endDate ?
        /* istanbul ignore next */
        (cov_1ryg5oj8ro().b[15][0]++, new Date(endDate)) :
        /* istanbul ignore next */
        (cov_1ryg5oj8ro().b[15][1]++, undefined),
        limit: limit ?
        /* istanbul ignore next */
        (cov_1ryg5oj8ro().b[16][0]++, parseInt(limit)) :
        /* istanbul ignore next */
        (cov_1ryg5oj8ro().b[16][1]++, undefined)
      }));
      /* istanbul ignore next */
      cov_1ryg5oj8ro().s[78]++;
      res.json(logs);
    } catch (error) {
      /* istanbul ignore next */
      cov_1ryg5oj8ro().s[79]++;
      if (error.message === 'Webhook not found or access denied') {
        /* istanbul ignore next */
        cov_1ryg5oj8ro().b[17][0]++;
        cov_1ryg5oj8ro().s[80]++;
        res.status(404).json({
          error: 'Webhook not found'
        });
      } else {
        /* istanbul ignore next */
        cov_1ryg5oj8ro().b[17][1]++;
        cov_1ryg5oj8ro().s[81]++;
        logger_1.logger.error('Failed to fetch webhook logs', error);
        /* istanbul ignore next */
        cov_1ryg5oj8ro().s[82]++;
        res.status(500).json({
          error: 'Failed to fetch webhook logs'
        });
      }
    }
  });
});
// Test webhook
/* istanbul ignore next */
cov_1ryg5oj8ro().s[83]++;
router.post('/:id/test', auth_1.authMiddleware, organizationAccess_1.orgAccessMiddleware, (req, res) => {
  /* istanbul ignore next */
  cov_1ryg5oj8ro().f[21]++;
  cov_1ryg5oj8ro().s[84]++;
  return __awaiter(void 0, void 0, void 0, function* () {
    /* istanbul ignore next */
    cov_1ryg5oj8ro().f[22]++;
    cov_1ryg5oj8ro().s[85]++;
    try {
      const log =
      /* istanbul ignore next */
      (cov_1ryg5oj8ro().s[86]++, yield webhookService_1.webhookService.testWebhook(req.params.id, req.organizationId));
      /* istanbul ignore next */
      cov_1ryg5oj8ro().s[87]++;
      res.json(log);
    } catch (error) {
      /* istanbul ignore next */
      cov_1ryg5oj8ro().s[88]++;
      if (error.message === 'Webhook not found') {
        /* istanbul ignore next */
        cov_1ryg5oj8ro().b[18][0]++;
        cov_1ryg5oj8ro().s[89]++;
        res.status(404).json({
          error: 'Webhook not found'
        });
      } else {
        /* istanbul ignore next */
        cov_1ryg5oj8ro().b[18][1]++;
        cov_1ryg5oj8ro().s[90]++;
        logger_1.logger.error('Failed to test webhook', error);
        /* istanbul ignore next */
        cov_1ryg5oj8ro().s[91]++;
        res.status(500).json({
          error: 'Failed to test webhook'
        });
      }
    }
  });
});
/* istanbul ignore next */
cov_1ryg5oj8ro().s[92]++;
exports.default = router;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,