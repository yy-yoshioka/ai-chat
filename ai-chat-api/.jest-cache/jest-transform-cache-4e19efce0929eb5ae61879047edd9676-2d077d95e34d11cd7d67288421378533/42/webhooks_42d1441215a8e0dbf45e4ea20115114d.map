{"version":3,"names":["cov_1ryg5oj8ro","actualCoverage","express_1","s","__importDefault","require","auth_1","organizationAccess_1","webhookService_1","logger_1","router","default","Router","get","authMiddleware","orgAccessMiddleware","req","res","f","__awaiter","webhooks","webhookService","getWebhooks","organizationId","json","error","logger","status","webhook","getWebhook","params","id","message","b","post","name","url","events","headers","retryCount","timeoutMs","body","Array","isArray","URL","_a","validEvents","invalidEvents","filter","e","includes","length","join","createWebhook","put","updateWebhook","delete","deleteWebhook","send","event","startDate","endDate","limit","query","logs","getWebhookLogs","Date","undefined","parseInt","log","testWebhook","exports"],"sources":["/Users/yusukeyoshioka/projects/youtube/ai-chat/ai-chat-api/src/routes/webhooks.ts"],"sourcesContent":["import express from 'express';\nimport { authMiddleware as requireAuth } from '../middleware/auth';\nimport { orgAccessMiddleware as requireOrgAccess } from '../middleware/organizationAccess';\nimport { webhookService } from '../services/webhookService';\nimport { logger } from '../lib/logger';\n\nconst router = express.Router();\n\n// Get all webhooks for organization\nrouter.get('/', requireAuth, requireOrgAccess, async (req, res) => {\n  try {\n    const webhooks = await webhookService.getWebhooks(req.organizationId!);\n    res.json(webhooks);\n  } catch (error) {\n    logger.error('Failed to fetch webhooks', error);\n    res.status(500).json({ error: 'Failed to fetch webhooks' });\n  }\n});\n\n// Get single webhook\nrouter.get('/:id', requireAuth, requireOrgAccess, async (req, res) => {\n  try {\n    const webhook = await webhookService.getWebhook(\n      req.params.id,\n      req.organizationId!\n    );\n    res.json(webhook);\n  } catch (error: any) {\n    if (error.message === 'Webhook not found') {\n      res.status(404).json({ error: 'Webhook not found' });\n    } else {\n      logger.error('Failed to fetch webhook', error);\n      res.status(500).json({ error: 'Failed to fetch webhook' });\n    }\n  }\n});\n\n// Create webhook\nrouter.post('/', requireAuth, requireOrgAccess, async (req, res) => {\n  try {\n    const { name, url, events, headers, retryCount, timeoutMs } = req.body;\n\n    if (!name || !url || !events || !Array.isArray(events)) {\n      return res.status(400).json({\n        error: 'Name, URL, and events array are required',\n      });\n    }\n\n    // Validate URL\n    try {\n      new URL(url);\n    } catch {\n      return res.status(400).json({ error: 'Invalid URL format' });\n    }\n\n    // Validate events\n    const validEvents = [\n      'chat.created',\n      'user.created',\n      'user.updated',\n      'widget.created',\n      'widget.updated',\n      'widget.deleted',\n      'knowledge_base.created',\n      'knowledge_base.updated',\n      'knowledge_base.deleted',\n    ];\n\n    const invalidEvents = events.filter(\n      (e: string) => !validEvents.includes(e)\n    );\n    if (invalidEvents.length > 0) {\n      return res.status(400).json({\n        error: `Invalid events: ${invalidEvents.join(', ')}`,\n        validEvents,\n      });\n    }\n\n    const webhook = await webhookService.createWebhook(req.organizationId!, {\n      name,\n      url,\n      events,\n      headers,\n      retryCount,\n      timeoutMs,\n    });\n\n    res.status(201).json(webhook);\n  } catch (error) {\n    logger.error('Failed to create webhook', error);\n    res.status(500).json({ error: 'Failed to create webhook' });\n  }\n});\n\n// Update webhook\nrouter.put('/:id', requireAuth, requireOrgAccess, async (req, res) => {\n  try {\n    const webhook = await webhookService.updateWebhook(\n      req.params.id,\n      req.organizationId!,\n      req.body\n    );\n    res.json(webhook);\n  } catch (error: any) {\n    if (error.message === 'Webhook not found or access denied') {\n      res.status(404).json({ error: 'Webhook not found' });\n    } else {\n      logger.error('Failed to update webhook', error);\n      res.status(500).json({ error: 'Failed to update webhook' });\n    }\n  }\n});\n\n// Delete webhook\nrouter.delete('/:id', requireAuth, requireOrgAccess, async (req, res) => {\n  try {\n    await webhookService.deleteWebhook(req.params.id, req.organizationId!);\n    res.status(204).send();\n  } catch (error: any) {\n    if (error.message === 'Webhook not found or access denied') {\n      res.status(404).json({ error: 'Webhook not found' });\n    } else {\n      logger.error('Failed to delete webhook', error);\n      res.status(500).json({ error: 'Failed to delete webhook' });\n    }\n  }\n});\n\n// Get webhook logs\nrouter.get('/:id/logs', requireAuth, requireOrgAccess, async (req, res) => {\n  try {\n    const { status, event, startDate, endDate, limit } = req.query;\n\n    const logs = await webhookService.getWebhookLogs(\n      req.params.id,\n      req.organizationId!,\n      {\n        status: status as string,\n        event: event as string,\n        startDate: startDate ? new Date(startDate as string) : undefined,\n        endDate: endDate ? new Date(endDate as string) : undefined,\n        limit: limit ? parseInt(limit as string) : undefined,\n      }\n    );\n\n    res.json(logs);\n  } catch (error: any) {\n    if (error.message === 'Webhook not found or access denied') {\n      res.status(404).json({ error: 'Webhook not found' });\n    } else {\n      logger.error('Failed to fetch webhook logs', error);\n      res.status(500).json({ error: 'Failed to fetch webhook logs' });\n    }\n  }\n});\n\n// Test webhook\nrouter.post('/:id/test', requireAuth, requireOrgAccess, async (req, res) => {\n  try {\n    const log = await webhookService.testWebhook(\n      req.params.id,\n      req.organizationId!\n    );\n    res.json(log);\n  } catch (error: any) {\n    if (error.message === 'Webhook not found') {\n      res.status(404).json({ error: 'Webhook not found' });\n    } else {\n      logger.error('Failed to test webhook', error);\n      res.status(500).json({ error: 'Failed to test webhook' });\n    }\n  }\n});\n\nexport default router;\n"],"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","ignoreList":[]}