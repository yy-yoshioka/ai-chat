18587c11ba41cb294d4d3e29ae71c8f8
"use strict";

/* istanbul ignore next */
function cov_19722llrzt() {
  var path = "/Users/yusukeyoshioka/projects/youtube/ai-chat/ai-chat-api/src/schemas/securitySchema.ts";
  var hash = "a872d4117102c42ee6c0c0289757fb740d3a5ee4";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/yusukeyoshioka/projects/youtube/ai-chat/ai-chat-api/src/schemas/securitySchema.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 115
        }
      },
      "2": {
        start: {
          line: 4,
          column: 14
        },
        end: {
          line: 4,
          column: 28
        }
      },
      "3": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 32,
          column: 3
        }
      },
      "4": {
        start: {
          line: 33,
          column: 0
        },
        end: {
          line: 36,
          column: 3
        }
      },
      "5": {
        start: {
          line: 37,
          column: 0
        },
        end: {
          line: 46,
          column: 3
        }
      }
    },
    fnMap: {},
    branchMap: {},
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0
    },
    f: {},
    b: {},
    inputSourceMap: {
      file: "/Users/yusukeyoshioka/projects/youtube/ai-chat/ai-chat-api/src/schemas/securitySchema.ts",
      mappings: ";;;AAAA,6BAAwB;AAEX,QAAA,qBAAqB,GAAG,OAAC,CAAC,MAAM,CAAC;IAC5C,MAAM,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,IAAI,EAAE;IACzB,UAAU,EAAE,OAAC,CAAC,IAAI,CAAC;QACjB,UAAU;QACV,WAAW;QACX,YAAY;QACZ,kBAAkB;QAClB,aAAa;QACb,cAAc;QACd,eAAe;QACf,kBAAkB;QAClB,WAAW;QACX,eAAe;QACf,aAAa;QACb,SAAS;QACT,UAAU;QACV,WAAW;QACX,UAAU;QACV,gBAAgB;QAChB,kBAAkB;QAClB,eAAe;QACf,gBAAgB;QAChB,cAAc;QACd,eAAe;QACf,cAAc;QACd,YAAY;KACb,CAAC;CACH,CAAC,CAAC;AAEU,QAAA,yBAAyB,GAAG,OAAC,CAAC,MAAM,CAAC;IAChD,SAAS,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE;IAChC,OAAO,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE;CAC/B,CAAC,CAAC;AAEU,QAAA,6BAA6B,GAAG,OAAC,CAAC,MAAM,CAAC;IACpD,EAAE,EAAE,OAAC,CAAC,MAAM,EAAE;IACd,KAAK,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,KAAK,EAAE;IACzB,IAAI,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE;IAC3B,KAAK,EAAE,OAAC,CAAC,KAAK,CACZ,OAAC,CAAC,IAAI,CAAC,CAAC,OAAO,EAAE,WAAW,EAAE,QAAQ,EAAE,QAAQ,EAAE,UAAU,EAAE,WAAW,CAAC,CAAC,CAC5E;IACD,mBAAmB,EAAE,OAAC,CAAC,KAAK,CAC1B,OAAC,CAAC,MAAM,CAAC;QACP,UAAU,EAAE,OAAC,CAAC,MAAM,EAAE;QACtB,OAAO,EAAE,OAAC,CAAC,OAAO,EAAE;KACrB,CAAC,CACH;CACF,CAAC,CAAC",
      names: [],
      sources: ["/Users/yusukeyoshioka/projects/youtube/ai-chat/ai-chat-api/src/schemas/securitySchema.ts"],
      sourcesContent: ["import { z } from 'zod';\n\nexport const permissionGrantSchema = z.object({\n  userId: z.string().cuid(),\n  permission: z.enum([\n    'ORG_READ',\n    'ORG_WRITE',\n    'ORG_DELETE',\n    'ORG_INVITE_USERS',\n    'WIDGET_READ',\n    'WIDGET_WRITE',\n    'WIDGET_DELETE',\n    'WIDGET_CONFIGURE',\n    'CHAT_READ',\n    'CHAT_MODERATE',\n    'CHAT_EXPORT',\n    'KB_READ',\n    'KB_WRITE',\n    'KB_DELETE',\n    'KB_TRAIN',\n    'ANALYTICS_READ',\n    'ANALYTICS_EXPORT',\n    'SETTINGS_READ',\n    'SETTINGS_WRITE',\n    'BILLING_READ',\n    'BILLING_WRITE',\n    'SYSTEM_ADMIN',\n    'AUDIT_READ',\n  ]),\n});\n\nexport const securityReportQuerySchema = z.object({\n  startDate: z.string().datetime(),\n  endDate: z.string().datetime(),\n});\n\nexport const userPermissionsResponseSchema = z.object({\n  id: z.string(),\n  email: z.string().email(),\n  name: z.string().optional(),\n  roles: z.array(\n    z.enum(['owner', 'org_admin', 'editor', 'viewer', 'api_user', 'read_only'])\n  ),\n  permissionOverrides: z.array(\n    z.object({\n      permission: z.string(),\n      granted: z.boolean(),\n    })\n  ),\n});\n\nexport type PermissionGrant = z.infer<typeof permissionGrantSchema>;\nexport type SecurityReportQuery = z.infer<typeof securityReportQuerySchema>;\nexport type UserPermissionsResponse = z.infer<\n  typeof userPermissionsResponseSchema\n>;\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "a872d4117102c42ee6c0c0289757fb740d3a5ee4"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_19722llrzt = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_19722llrzt();
cov_19722llrzt().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_19722llrzt().s[1]++;
exports.userPermissionsResponseSchema = exports.securityReportQuerySchema = exports.permissionGrantSchema = void 0;
const zod_1 =
/* istanbul ignore next */
(cov_19722llrzt().s[2]++, require("zod"));
/* istanbul ignore next */
cov_19722llrzt().s[3]++;
exports.permissionGrantSchema = zod_1.z.object({
  userId: zod_1.z.string().cuid(),
  permission: zod_1.z.enum(['ORG_READ', 'ORG_WRITE', 'ORG_DELETE', 'ORG_INVITE_USERS', 'WIDGET_READ', 'WIDGET_WRITE', 'WIDGET_DELETE', 'WIDGET_CONFIGURE', 'CHAT_READ', 'CHAT_MODERATE', 'CHAT_EXPORT', 'KB_READ', 'KB_WRITE', 'KB_DELETE', 'KB_TRAIN', 'ANALYTICS_READ', 'ANALYTICS_EXPORT', 'SETTINGS_READ', 'SETTINGS_WRITE', 'BILLING_READ', 'BILLING_WRITE', 'SYSTEM_ADMIN', 'AUDIT_READ'])
});
/* istanbul ignore next */
cov_19722llrzt().s[4]++;
exports.securityReportQuerySchema = zod_1.z.object({
  startDate: zod_1.z.string().datetime(),
  endDate: zod_1.z.string().datetime()
});
/* istanbul ignore next */
cov_19722llrzt().s[5]++;
exports.userPermissionsResponseSchema = zod_1.z.object({
  id: zod_1.z.string(),
  email: zod_1.z.string().email(),
  name: zod_1.z.string().optional(),
  roles: zod_1.z.array(zod_1.z.enum(['owner', 'org_admin', 'editor', 'viewer', 'api_user', 'read_only'])),
  permissionOverrides: zod_1.z.array(zod_1.z.object({
    permission: zod_1.z.string(),
    granted: zod_1.z.boolean()
  }))
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMTk3MjJsbHJ6dCIsImFjdHVhbENvdmVyYWdlIiwicyIsInpvZF8xIiwicmVxdWlyZSIsImV4cG9ydHMiLCJwZXJtaXNzaW9uR3JhbnRTY2hlbWEiLCJ6Iiwib2JqZWN0IiwidXNlcklkIiwic3RyaW5nIiwiY3VpZCIsInBlcm1pc3Npb24iLCJlbnVtIiwic2VjdXJpdHlSZXBvcnRRdWVyeVNjaGVtYSIsInN0YXJ0RGF0ZSIsImRhdGV0aW1lIiwiZW5kRGF0ZSIsInVzZXJQZXJtaXNzaW9uc1Jlc3BvbnNlU2NoZW1hIiwiaWQiLCJlbWFpbCIsIm5hbWUiLCJvcHRpb25hbCIsInJvbGVzIiwiYXJyYXkiLCJwZXJtaXNzaW9uT3ZlcnJpZGVzIiwiZ3JhbnRlZCIsImJvb2xlYW4iXSwic291cmNlcyI6WyIvVXNlcnMveXVzdWtleW9zaGlva2EvcHJvamVjdHMveW91dHViZS9haS1jaGF0L2FpLWNoYXQtYXBpL3NyYy9zY2hlbWFzL3NlY3VyaXR5U2NoZW1hLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHogfSBmcm9tICd6b2QnO1xuXG5leHBvcnQgY29uc3QgcGVybWlzc2lvbkdyYW50U2NoZW1hID0gei5vYmplY3Qoe1xuICB1c2VySWQ6IHouc3RyaW5nKCkuY3VpZCgpLFxuICBwZXJtaXNzaW9uOiB6LmVudW0oW1xuICAgICdPUkdfUkVBRCcsXG4gICAgJ09SR19XUklURScsXG4gICAgJ09SR19ERUxFVEUnLFxuICAgICdPUkdfSU5WSVRFX1VTRVJTJyxcbiAgICAnV0lER0VUX1JFQUQnLFxuICAgICdXSURHRVRfV1JJVEUnLFxuICAgICdXSURHRVRfREVMRVRFJyxcbiAgICAnV0lER0VUX0NPTkZJR1VSRScsXG4gICAgJ0NIQVRfUkVBRCcsXG4gICAgJ0NIQVRfTU9ERVJBVEUnLFxuICAgICdDSEFUX0VYUE9SVCcsXG4gICAgJ0tCX1JFQUQnLFxuICAgICdLQl9XUklURScsXG4gICAgJ0tCX0RFTEVURScsXG4gICAgJ0tCX1RSQUlOJyxcbiAgICAnQU5BTFlUSUNTX1JFQUQnLFxuICAgICdBTkFMWVRJQ1NfRVhQT1JUJyxcbiAgICAnU0VUVElOR1NfUkVBRCcsXG4gICAgJ1NFVFRJTkdTX1dSSVRFJyxcbiAgICAnQklMTElOR19SRUFEJyxcbiAgICAnQklMTElOR19XUklURScsXG4gICAgJ1NZU1RFTV9BRE1JTicsXG4gICAgJ0FVRElUX1JFQUQnLFxuICBdKSxcbn0pO1xuXG5leHBvcnQgY29uc3Qgc2VjdXJpdHlSZXBvcnRRdWVyeVNjaGVtYSA9IHoub2JqZWN0KHtcbiAgc3RhcnREYXRlOiB6LnN0cmluZygpLmRhdGV0aW1lKCksXG4gIGVuZERhdGU6IHouc3RyaW5nKCkuZGF0ZXRpbWUoKSxcbn0pO1xuXG5leHBvcnQgY29uc3QgdXNlclBlcm1pc3Npb25zUmVzcG9uc2VTY2hlbWEgPSB6Lm9iamVjdCh7XG4gIGlkOiB6LnN0cmluZygpLFxuICBlbWFpbDogei5zdHJpbmcoKS5lbWFpbCgpLFxuICBuYW1lOiB6LnN0cmluZygpLm9wdGlvbmFsKCksXG4gIHJvbGVzOiB6LmFycmF5KFxuICAgIHouZW51bShbJ293bmVyJywgJ29yZ19hZG1pbicsICdlZGl0b3InLCAndmlld2VyJywgJ2FwaV91c2VyJywgJ3JlYWRfb25seSddKVxuICApLFxuICBwZXJtaXNzaW9uT3ZlcnJpZGVzOiB6LmFycmF5KFxuICAgIHoub2JqZWN0KHtcbiAgICAgIHBlcm1pc3Npb246IHouc3RyaW5nKCksXG4gICAgICBncmFudGVkOiB6LmJvb2xlYW4oKSxcbiAgICB9KVxuICApLFxufSk7XG5cbmV4cG9ydCB0eXBlIFBlcm1pc3Npb25HcmFudCA9IHouaW5mZXI8dHlwZW9mIHBlcm1pc3Npb25HcmFudFNjaGVtYT47XG5leHBvcnQgdHlwZSBTZWN1cml0eVJlcG9ydFF1ZXJ5ID0gei5pbmZlcjx0eXBlb2Ygc2VjdXJpdHlSZXBvcnRRdWVyeVNjaGVtYT47XG5leHBvcnQgdHlwZSBVc2VyUGVybWlzc2lvbnNSZXNwb25zZSA9IHouaW5mZXI8XG4gIHR5cGVv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