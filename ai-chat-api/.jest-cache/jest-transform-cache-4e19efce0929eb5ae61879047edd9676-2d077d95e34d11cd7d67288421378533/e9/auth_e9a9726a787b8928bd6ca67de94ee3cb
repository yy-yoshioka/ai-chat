eecc3bac04126cb79a40719c5ed8639a
"use strict";

/* istanbul ignore next */
function cov_1whxj8fcvr() {
  var path = "/Users/yusukeyoshioka/projects/youtube/ai-chat/ai-chat-api/src/routes/auth.ts";
  var hash = "bd9e2729cace0c36822de9383d68e2820b2f9059";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/yusukeyoshioka/projects/youtube/ai-chat/ai-chat-api/src/routes/auth.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 16
        },
        end: {
          line: 10,
          column: 1
        }
      },
      "1": {
        start: {
          line: 3,
          column: 28
        },
        end: {
          line: 3,
          column: 110
        }
      },
      "2": {
        start: {
          line: 3,
          column: 91
        },
        end: {
          line: 3,
          column: 106
        }
      },
      "3": {
        start: {
          line: 4,
          column: 4
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "4": {
        start: {
          line: 5,
          column: 36
        },
        end: {
          line: 5,
          column: 97
        }
      },
      "5": {
        start: {
          line: 5,
          column: 42
        },
        end: {
          line: 5,
          column: 70
        }
      },
      "6": {
        start: {
          line: 5,
          column: 85
        },
        end: {
          line: 5,
          column: 95
        }
      },
      "7": {
        start: {
          line: 6,
          column: 35
        },
        end: {
          line: 6,
          column: 100
        }
      },
      "8": {
        start: {
          line: 6,
          column: 41
        },
        end: {
          line: 6,
          column: 73
        }
      },
      "9": {
        start: {
          line: 6,
          column: 88
        },
        end: {
          line: 6,
          column: 98
        }
      },
      "10": {
        start: {
          line: 7,
          column: 32
        },
        end: {
          line: 7,
          column: 116
        }
      },
      "11": {
        start: {
          line: 8,
          column: 8
        },
        end: {
          line: 8,
          column: 78
        }
      },
      "12": {
        start: {
          line: 11,
          column: 13
        },
        end: {
          line: 21,
          column: 1
        }
      },
      "13": {
        start: {
          line: 12,
          column: 12
        },
        end: {
          line: 12,
          column: 14
        }
      },
      "14": {
        start: {
          line: 13,
          column: 4
        },
        end: {
          line: 14,
          column: 20
        }
      },
      "15": {
        start: {
          line: 13,
          column: 21
        },
        end: {
          line: 14,
          column: 20
        }
      },
      "16": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 20
        }
      },
      "17": {
        start: {
          line: 15,
          column: 4
        },
        end: {
          line: 19,
          column: 9
        }
      },
      "18": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 19,
          column: 9
        }
      },
      "19": {
        start: {
          line: 16,
          column: 21
        },
        end: {
          line: 16,
          column: 22
        }
      },
      "20": {
        start: {
          line: 16,
          column: 28
        },
        end: {
          line: 16,
          column: 59
        }
      },
      "21": {
        start: {
          line: 17,
          column: 12
        },
        end: {
          line: 18,
          column: 34
        }
      },
      "22": {
        start: {
          line: 18,
          column: 16
        },
        end: {
          line: 18,
          column: 34
        }
      },
      "23": {
        start: {
          line: 20,
          column: 4
        },
        end: {
          line: 20,
          column: 13
        }
      },
      "24": {
        start: {
          line: 22,
          column: 0
        },
        end: {
          line: 22,
          column: 62
        }
      },
      "25": {
        start: {
          line: 23,
          column: 18
        },
        end: {
          line: 23,
          column: 36
        }
      },
      "26": {
        start: {
          line: 24,
          column: 15
        },
        end: {
          line: 24,
          column: 44
        }
      },
      "27": {
        start: {
          line: 25,
          column: 14
        },
        end: {
          line: 25,
          column: 37
        }
      },
      "28": {
        start: {
          line: 26,
          column: 19
        },
        end: {
          line: 26,
          column: 47
        }
      },
      "29": {
        start: {
          line: 27,
          column: 17
        },
        end: {
          line: 27,
          column: 41
        }
      },
      "30": {
        start: {
          line: 28,
          column: 15
        },
        end: {
          line: 28,
          column: 38
        }
      },
      "31": {
        start: {
          line: 30,
          column: 0
        },
        end: {
          line: 65,
          column: 4
        }
      },
      "32": {
        start: {
          line: 30,
          column: 36
        },
        end: {
          line: 65,
          column: 2
        }
      },
      "33": {
        start: {
          line: 31,
          column: 4
        },
        end: {
          line: 64,
          column: 5
        }
      },
      "34": {
        start: {
          line: 32,
          column: 36
        },
        end: {
          line: 32,
          column: 44
        }
      },
      "35": {
        start: {
          line: 33,
          column: 8
        },
        end: {
          line: 33,
          column: 37
        }
      },
      "36": {
        start: {
          line: 35,
          column: 8
        },
        end: {
          line: 39,
          column: 9
        }
      },
      "37": {
        start: {
          line: 36,
          column: 12
        },
        end: {
          line: 38,
          column: 70
        }
      },
      "38": {
        start: {
          line: 41,
          column: 21
        },
        end: {
          line: 43,
          column: 10
        }
      },
      "39": {
        start: {
          line: 44,
          column: 8
        },
        end: {
          line: 46,
          column: 9
        }
      },
      "40": {
        start: {
          line: 45,
          column: 12
        },
        end: {
          line: 45,
          column: 76
        }
      },
      "41": {
        start: {
          line: 48,
          column: 32
        },
        end: {
          line: 48,
          column: 93
        }
      },
      "42": {
        start: {
          line: 49,
          column: 8
        },
        end: {
          line: 51,
          column: 9
        }
      },
      "43": {
        start: {
          line: 50,
          column: 12
        },
        end: {
          line: 50,
          column: 76
        }
      },
      "44": {
        start: {
          line: 53,
          column: 8
        },
        end: {
          line: 53,
          column: 93
        }
      },
      "45": {
        start: {
          line: 55,
          column: 40
        },
        end: {
          line: 55,
          column: 44
        }
      },
      "46": {
        start: {
          line: 55,
          column: 57
        },
        end: {
          line: 55,
          column: 83
        }
      },
      "47": {
        start: {
          line: 56,
          column: 8
        },
        end: {
          line: 59,
          column: 11
        }
      },
      "48": {
        start: {
          line: 62,
          column: 8
        },
        end: {
          line: 62,
          column: 45
        }
      },
      "49": {
        start: {
          line: 63,
          column: 8
        },
        end: {
          line: 63,
          column: 67
        }
      },
      "50": {
        start: {
          line: 67,
          column: 0
        },
        end: {
          line: 106,
          column: 4
        }
      },
      "51": {
        start: {
          line: 67,
          column: 37
        },
        end: {
          line: 106,
          column: 2
        }
      },
      "52": {
        start: {
          line: 68,
          column: 4
        },
        end: {
          line: 105,
          column: 5
        }
      },
      "53": {
        start: {
          line: 69,
          column: 42
        },
        end: {
          line: 69,
          column: 50
        }
      },
      "54": {
        start: {
          line: 71,
          column: 8
        },
        end: {
          line: 75,
          column: 9
        }
      },
      "55": {
        start: {
          line: 72,
          column: 12
        },
        end: {
          line: 74,
          column: 70
        }
      },
      "56": {
        start: {
          line: 77,
          column: 29
        },
        end: {
          line: 79,
          column: 10
        }
      },
      "57": {
        start: {
          line: 80,
          column: 8
        },
        end: {
          line: 82,
          column: 9
        }
      },
      "58": {
        start: {
          line: 81,
          column: 12
        },
        end: {
          line: 81,
          column: 76
        }
      },
      "59": {
        start: {
          line: 84,
          column: 31
        },
        end: {
          line: 84,
          column: 75
        }
      },
      "60": {
        start: {
          line: 86,
          column: 21
        },
        end: {
          line: 92,
          column: 10
        }
      },
      "61": {
        start: {
          line: 94,
          column: 8
        },
        end: {
          line: 94,
          column: 93
        }
      },
      "62": {
        start: {
          line: 96,
          column: 40
        },
        end: {
          line: 96,
          column: 44
        }
      },
      "63": {
        start: {
          line: 96,
          column: 57
        },
        end: {
          line: 96,
          column: 83
        }
      },
      "64": {
        start: {
          line: 97,
          column: 8
        },
        end: {
          line: 100,
          column: 11
        }
      },
      "65": {
        start: {
          line: 103,
          column: 8
        },
        end: {
          line: 103,
          column: 46
        }
      },
      "66": {
        start: {
          line: 104,
          column: 8
        },
        end: {
          line: 104,
          column: 67
        }
      },
      "67": {
        start: {
          line: 108,
          column: 0
        },
        end: {
          line: 129,
          column: 4
        }
      },
      "68": {
        start: {
          line: 108,
          column: 55
        },
        end: {
          line: 129,
          column: 2
        }
      },
      "69": {
        start: {
          line: 110,
          column: 4
        },
        end: {
          line: 128,
          column: 5
        }
      },
      "70": {
        start: {
          line: 112,
          column: 21
        },
        end: {
          line: 114,
          column: 10
        }
      },
      "71": {
        start: {
          line: 115,
          column: 8
        },
        end: {
          line: 117,
          column: 9
        }
      },
      "72": {
        start: {
          line: 116,
          column: 12
        },
        end: {
          line: 116,
          column: 71
        }
      },
      "73": {
        start: {
          line: 119,
          column: 40
        },
        end: {
          line: 119,
          column: 44
        }
      },
      "74": {
        start: {
          line: 119,
          column: 57
        },
        end: {
          line: 119,
          column: 83
        }
      },
      "75": {
        start: {
          line: 120,
          column: 8
        },
        end: {
          line: 123,
          column: 11
        }
      },
      "76": {
        start: {
          line: 126,
          column: 8
        },
        end: {
          line: 126,
          column: 47
        }
      },
      "77": {
        start: {
          line: 127,
          column: 8
        },
        end: {
          line: 127,
          column: 67
        }
      },
      "78": {
        start: {
          line: 130,
          column: 0
        },
        end: {
          line: 130,
          column: 25
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 44
          },
          end: {
            line: 2,
            column: 45
          }
        },
        loc: {
          start: {
            line: 2,
            column: 89
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "adopt",
        decl: {
          start: {
            line: 3,
            column: 13
          },
          end: {
            line: 3,
            column: 18
          }
        },
        loc: {
          start: {
            line: 3,
            column: 26
          },
          end: {
            line: 3,
            column: 112
          }
        },
        line: 3
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 3,
            column: 70
          },
          end: {
            line: 3,
            column: 71
          }
        },
        loc: {
          start: {
            line: 3,
            column: 89
          },
          end: {
            line: 3,
            column: 108
          }
        },
        line: 3
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 4,
            column: 36
          },
          end: {
            line: 4,
            column: 37
          }
        },
        loc: {
          start: {
            line: 4,
            column: 63
          },
          end: {
            line: 9,
            column: 5
          }
        },
        line: 4
      },
      "4": {
        name: "fulfilled",
        decl: {
          start: {
            line: 5,
            column: 17
          },
          end: {
            line: 5,
            column: 26
          }
        },
        loc: {
          start: {
            line: 5,
            column: 34
          },
          end: {
            line: 5,
            column: 99
          }
        },
        line: 5
      },
      "5": {
        name: "rejected",
        decl: {
          start: {
            line: 6,
            column: 17
          },
          end: {
            line: 6,
            column: 25
          }
        },
        loc: {
          start: {
            line: 6,
            column: 33
          },
          end: {
            line: 6,
            column: 102
          }
        },
        line: 6
      },
      "6": {
        name: "step",
        decl: {
          start: {
            line: 7,
            column: 17
          },
          end: {
            line: 7,
            column: 21
          }
        },
        loc: {
          start: {
            line: 7,
            column: 30
          },
          end: {
            line: 7,
            column: 118
          }
        },
        line: 7
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 11,
            column: 38
          },
          end: {
            line: 11,
            column: 39
          }
        },
        loc: {
          start: {
            line: 11,
            column: 54
          },
          end: {
            line: 21,
            column: 1
          }
        },
        line: 11
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 30,
            column: 22
          },
          end: {
            line: 30,
            column: 23
          }
        },
        loc: {
          start: {
            line: 30,
            column: 36
          },
          end: {
            line: 65,
            column: 2
          }
        },
        line: 30
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 30,
            column: 70
          },
          end: {
            line: 30,
            column: 71
          }
        },
        loc: {
          start: {
            line: 30,
            column: 83
          },
          end: {
            line: 65,
            column: 1
          }
        },
        line: 30
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 67,
            column: 23
          },
          end: {
            line: 67,
            column: 24
          }
        },
        loc: {
          start: {
            line: 67,
            column: 37
          },
          end: {
            line: 106,
            column: 2
          }
        },
        line: 67
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 67,
            column: 71
          },
          end: {
            line: 67,
            column: 72
          }
        },
        loc: {
          start: {
            line: 67,
            column: 84
          },
          end: {
            line: 106,
            column: 1
          }
        },
        line: 67
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 108,
            column: 41
          },
          end: {
            line: 108,
            column: 42
          }
        },
        loc: {
          start: {
            line: 108,
            column: 55
          },
          end: {
            line: 129,
            column: 2
          }
        },
        line: 108
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 108,
            column: 89
          },
          end: {
            line: 108,
            column: 90
          }
        },
        loc: {
          start: {
            line: 108,
            column: 102
          },
          end: {
            line: 129,
            column: 1
          }
        },
        line: 108
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 16
          },
          end: {
            line: 10,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 17
          },
          end: {
            line: 2,
            column: 21
          }
        }, {
          start: {
            line: 2,
            column: 25
          },
          end: {
            line: 2,
            column: 39
          }
        }, {
          start: {
            line: 2,
            column: 44
          },
          end: {
            line: 10,
            column: 1
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 3,
            column: 35
          },
          end: {
            line: 3,
            column: 109
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 3,
            column: 56
          },
          end: {
            line: 3,
            column: 61
          }
        }, {
          start: {
            line: 3,
            column: 64
          },
          end: {
            line: 3,
            column: 109
          }
        }],
        line: 3
      },
      "2": {
        loc: {
          start: {
            line: 4,
            column: 16
          },
          end: {
            line: 4,
            column: 34
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 4,
            column: 16
          },
          end: {
            line: 4,
            column: 17
          }
        }, {
          start: {
            line: 4,
            column: 22
          },
          end: {
            line: 4,
            column: 33
          }
        }],
        line: 4
      },
      "3": {
        loc: {
          start: {
            line: 7,
            column: 32
          },
          end: {
            line: 7,
            column: 115
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 7,
            column: 46
          },
          end: {
            line: 7,
            column: 67
          }
        }, {
          start: {
            line: 7,
            column: 70
          },
          end: {
            line: 7,
            column: 115
          }
        }],
        line: 7
      },
      "4": {
        loc: {
          start: {
            line: 8,
            column: 51
          },
          end: {
            line: 8,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 8,
            column: 51
          },
          end: {
            line: 8,
            column: 61
          }
        }, {
          start: {
            line: 8,
            column: 65
          },
          end: {
            line: 8,
            column: 67
          }
        }],
        line: 8
      },
      "5": {
        loc: {
          start: {
            line: 11,
            column: 13
          },
          end: {
            line: 21,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 11,
            column: 14
          },
          end: {
            line: 11,
            column: 18
          }
        }, {
          start: {
            line: 11,
            column: 22
          },
          end: {
            line: 11,
            column: 33
          }
        }, {
          start: {
            line: 11,
            column: 38
          },
          end: {
            line: 21,
            column: 1
          }
        }],
        line: 11
      },
      "6": {
        loc: {
          start: {
            line: 13,
            column: 21
          },
          end: {
            line: 14,
            column: 20
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 13,
            column: 21
          },
          end: {
            line: 14,
            column: 20
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 13
      },
      "7": {
        loc: {
          start: {
            line: 13,
            column: 25
          },
          end: {
            line: 13,
            column: 87
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 13,
            column: 25
          },
          end: {
            line: 13,
            column: 67
          }
        }, {
          start: {
            line: 13,
            column: 71
          },
          end: {
            line: 13,
            column: 87
          }
        }],
        line: 13
      },
      "8": {
        loc: {
          start: {
            line: 15,
            column: 4
          },
          end: {
            line: 19,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 15,
            column: 4
          },
          end: {
            line: 19,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 15
      },
      "9": {
        loc: {
          start: {
            line: 15,
            column: 8
          },
          end: {
            line: 15,
            column: 71
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 15,
            column: 8
          },
          end: {
            line: 15,
            column: 17
          }
        }, {
          start: {
            line: 15,
            column: 21
          },
          end: {
            line: 15,
            column: 71
          }
        }],
        line: 15
      },
      "10": {
        loc: {
          start: {
            line: 17,
            column: 12
          },
          end: {
            line: 18,
            column: 34
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 17,
            column: 12
          },
          end: {
            line: 18,
            column: 34
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 17
      },
      "11": {
        loc: {
          start: {
            line: 17,
            column: 16
          },
          end: {
            line: 17,
            column: 90
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 17,
            column: 16
          },
          end: {
            line: 17,
            column: 35
          }
        }, {
          start: {
            line: 17,
            column: 39
          },
          end: {
            line: 17,
            column: 90
          }
        }],
        line: 17
      },
      "12": {
        loc: {
          start: {
            line: 35,
            column: 8
          },
          end: {
            line: 39,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 35,
            column: 8
          },
          end: {
            line: 39,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 35
      },
      "13": {
        loc: {
          start: {
            line: 35,
            column: 12
          },
          end: {
            line: 35,
            column: 31
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 35,
            column: 12
          },
          end: {
            line: 35,
            column: 18
          }
        }, {
          start: {
            line: 35,
            column: 22
          },
          end: {
            line: 35,
            column: 31
          }
        }],
        line: 35
      },
      "14": {
        loc: {
          start: {
            line: 44,
            column: 8
          },
          end: {
            line: 46,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 44,
            column: 8
          },
          end: {
            line: 46,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 44
      },
      "15": {
        loc: {
          start: {
            line: 49,
            column: 8
          },
          end: {
            line: 51,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 49,
            column: 8
          },
          end: {
            line: 51,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 49
      },
      "16": {
        loc: {
          start: {
            line: 71,
            column: 8
          },
          end: {
            line: 75,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 71,
            column: 8
          },
          end: {
            line: 75,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 71
      },
      "17": {
        loc: {
          start: {
            line: 71,
            column: 12
          },
          end: {
            line: 71,
            column: 31
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 71,
            column: 12
          },
          end: {
            line: 71,
            column: 18
          }
        }, {
          start: {
            line: 71,
            column: 22
          },
          end: {
            line: 71,
            column: 31
          }
        }],
        line: 71
      },
      "18": {
        loc: {
          start: {
            line: 80,
            column: 8
          },
          end: {
            line: 82,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 80,
            column: 8
          },
          end: {
            line: 82,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 80
      },
      "19": {
        loc: {
          start: {
            line: 90,
            column: 22
          },
          end: {
            line: 90,
            column: 34
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 90,
            column: 22
          },
          end: {
            line: 90,
            column: 26
          }
        }, {
          start: {
            line: 90,
            column: 30
          },
          end: {
            line: 90,
            column: 34
          }
        }],
        line: 90
      },
      "20": {
        loc: {
          start: {
            line: 113,
            column: 25
          },
          end: {
            line: 113,
            column: 83
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 113,
            column: 69
          },
          end: {
            line: 113,
            column: 75
          }
        }, {
          start: {
            line: 113,
            column: 78
          },
          end: {
            line: 113,
            column: 83
          }
        }],
        line: 113
      },
      "21": {
        loc: {
          start: {
            line: 113,
            column: 25
          },
          end: {
            line: 113,
            column: 66
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 113,
            column: 25
          },
          end: {
            line: 113,
            column: 49
          }
        }, {
          start: {
            line: 113,
            column: 53
          },
          end: {
            line: 113,
            column: 66
          }
        }],
        line: 113
      },
      "22": {
        loc: {
          start: {
            line: 115,
            column: 8
          },
          end: {
            line: 117,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 115,
            column: 8
          },
          end: {
            line: 117,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 115
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/yusukeyoshioka/projects/youtube/ai-chat/ai-chat-api/src/routes/auth.ts",
      mappings: "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",
      names: [],
      sources: ["/Users/yusukeyoshioka/projects/youtube/ai-chat/ai-chat-api/src/routes/auth.ts"],
      sourcesContent: ["import { Router, Request, Response } from 'express';\nimport { authMiddleware } from '../middleware/auth';\nimport { signToken } from '../utils/jwt';\nimport { hashPassword, verifyPassword } from '../utils/password';\nimport { prisma } from '../lib/prisma';\n\nconst router = Router();\n\n// POST /auth/login - User login\nrouter.post('/login', async (req: Request, res: Response) => {\n  try {\n    const { email, password } = req.body;\n\n    console.log(email, password);\n\n    // Simple validation\n    if (!email || !password) {\n      return res\n        .status(400)\n        .json({ message: 'Email and password are required' });\n    }\n\n    // Find user by email\n    const user = await prisma.user.findUnique({\n      where: { email },\n    });\n\n    if (!user) {\n      return res.status(401).json({ message: 'Invalid credentials' });\n    }\n\n    // Verify password\n    const isPasswordValid = await verifyPassword(password, user.password);\n\n    if (!isPasswordValid) {\n      return res.status(401).json({ message: 'Invalid credentials' });\n    }\n\n    // Generate JWT and set cookie\n    signToken({ id: user.id, email: user.email, isAdmin: user.isAdmin }, res);\n\n    // Return user data (excluding password)\n    const { password: _password, ...userData } = user;\n    res.status(200).json({\n      message: 'Login successful',\n      user: userData,\n    });\n  } catch (error) {\n    console.error('Login error:', error);\n    res.status(500).json({ message: 'Internal server error' });\n  }\n});\n\n// POST /auth/signup - User registration\nrouter.post('/signup', async (req: Request, res: Response) => {\n  try {\n    const { email, password, name } = req.body;\n\n    // Simple validation\n    if (!email || !password) {\n      return res\n        .status(400)\n        .json({ message: 'Email and password are required' });\n    }\n\n    // Check if user already exists\n    const existingUser = await prisma.user.findUnique({\n      where: { email },\n    });\n\n    if (existingUser) {\n      return res.status(409).json({ message: 'User already exists' });\n    }\n\n    // Hash password\n    const hashedPassword = await hashPassword(password);\n\n    // Create new user\n    const user = await prisma.user.create({\n      data: {\n        email,\n        password: hashedPassword,\n        name: name || null,\n      },\n    });\n\n    // Generate JWT and set cookie\n    signToken({ id: user.id, email: user.email, isAdmin: user.isAdmin }, res);\n\n    // Return user data (excluding password)\n    const { password: _password, ...userData } = user;\n    res.status(201).json({\n      message: 'User created successfully',\n      user: userData,\n    });\n  } catch (error) {\n    console.error('Signup error:', error);\n    res.status(500).json({ message: 'Internal server error' });\n  }\n});\n\n// GET /auth/me - Get current user info (protected route)\nrouter.get('/me', authMiddleware, async (req: Request, res: Response) => {\n  try {\n    // Get user from database using the ID from JWT\n    const user = await prisma.user.findUnique({\n      where: { id: req.user?.id },\n    });\n\n    if (!user) {\n      return res.status(404).json({ message: 'User not found' });\n    }\n\n    // Return user data (excluding password)\n    const { password: _password, ...userData } = user;\n    res.status(200).json({\n      message: 'User authenticated',\n      user: userData,\n    });\n  } catch (error) {\n    console.error('Auth/me error:', error);\n    res.status(500).json({ message: 'Internal server error' });\n  }\n});\n\nexport default router;\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "bd9e2729cace0c36822de9383d68e2820b2f9059"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1whxj8fcvr = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1whxj8fcvr();
var __awaiter =
/* istanbul ignore next */
(cov_1whxj8fcvr().s[0]++,
/* istanbul ignore next */
(cov_1whxj8fcvr().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_1whxj8fcvr().b[0][1]++, this.__awaiter) ||
/* istanbul ignore next */
(cov_1whxj8fcvr().b[0][2]++, function (thisArg, _arguments, P, generator) {
  /* istanbul ignore next */
  cov_1whxj8fcvr().f[0]++;
  function adopt(value) {
    /* istanbul ignore next */
    cov_1whxj8fcvr().f[1]++;
    cov_1whxj8fcvr().s[1]++;
    return value instanceof P ?
    /* istanbul ignore next */
    (cov_1whxj8fcvr().b[1][0]++, value) :
    /* istanbul ignore next */
    (cov_1whxj8fcvr().b[1][1]++, new P(function (resolve) {
      /* istanbul ignore next */
      cov_1whxj8fcvr().f[2]++;
      cov_1whxj8fcvr().s[2]++;
      resolve(value);
    }));
  }
  /* istanbul ignore next */
  cov_1whxj8fcvr().s[3]++;
  return new (
  /* istanbul ignore next */
  (cov_1whxj8fcvr().b[2][0]++, P) ||
  /* istanbul ignore next */
  (cov_1whxj8fcvr().b[2][1]++, P = Promise))(function (resolve, reject) {
    /* istanbul ignore next */
    cov_1whxj8fcvr().f[3]++;
    function fulfilled(value) {
      /* istanbul ignore next */
      cov_1whxj8fcvr().f[4]++;
      cov_1whxj8fcvr().s[4]++;
      try {
        /* istanbul ignore next */
        cov_1whxj8fcvr().s[5]++;
        step(generator.next(value));
      } catch (e) {
        /* istanbul ignore next */
        cov_1whxj8fcvr().s[6]++;
        reject(e);
      }
    }
    function rejected(value) {
      /* istanbul ignore next */
      cov_1whxj8fcvr().f[5]++;
      cov_1whxj8fcvr().s[7]++;
      try {
        /* istanbul ignore next */
        cov_1whxj8fcvr().s[8]++;
        step(generator["throw"](value));
      } catch (e) {
        /* istanbul ignore next */
        cov_1whxj8fcvr().s[9]++;
        reject(e);
      }
    }
    function step(result) {
      /* istanbul ignore next */
      cov_1whxj8fcvr().f[6]++;
      cov_1whxj8fcvr().s[10]++;
      result.done ?
      /* istanbul ignore next */
      (cov_1whxj8fcvr().b[3][0]++, resolve(result.value)) :
      /* istanbul ignore next */
      (cov_1whxj8fcvr().b[3][1]++, adopt(result.value).then(fulfilled, rejected));
    }
    /* istanbul ignore next */
    cov_1whxj8fcvr().s[11]++;
    step((generator = generator.apply(thisArg,
    /* istanbul ignore next */
    (cov_1whxj8fcvr().b[4][0]++, _arguments) ||
    /* istanbul ignore next */
    (cov_1whxj8fcvr().b[4][1]++, []))).next());
  });
}));
var __rest =
/* istanbul ignore next */
(cov_1whxj8fcvr().s[12]++,
/* istanbul ignore next */
(cov_1whxj8fcvr().b[5][0]++, this) &&
/* istanbul ignore next */
(cov_1whxj8fcvr().b[5][1]++, this.__rest) ||
/* istanbul ignore next */
(cov_1whxj8fcvr().b[5][2]++, function (s, e) {
  /* istanbul ignore next */
  cov_1whxj8fcvr().f[7]++;
  var t =
  /* istanbul ignore next */
  (cov_1whxj8fcvr().s[13]++, {});
  /* istanbul ignore next */
  cov_1whxj8fcvr().s[14]++;
  for (var p in s) {
    /* istanbul ignore next */
    cov_1whxj8fcvr().s[15]++;
    if (
    /* istanbul ignore next */
    (cov_1whxj8fcvr().b[7][0]++, Object.prototype.hasOwnProperty.call(s, p)) &&
    /* istanbul ignore next */
    (cov_1whxj8fcvr().b[7][1]++, e.indexOf(p) < 0)) {
      /* istanbul ignore next */
      cov_1whxj8fcvr().b[6][0]++;
      cov_1whxj8fcvr().s[16]++;
      t[p] = s[p];
    } else
    /* istanbul ignore next */
    {
      cov_1whxj8fcvr().b[6][1]++;
    }
  }
  /* istanbul ignore next */
  cov_1whxj8fcvr().s[17]++;
  if (
  /* istanbul ignore next */
  (cov_1whxj8fcvr().b[9][0]++, s != null) &&
  /* istanbul ignore next */
  (cov_1whxj8fcvr().b[9][1]++, typeof Object.getOwnPropertySymbols === "function")) {
    /* istanbul ignore next */
    cov_1whxj8fcvr().b[8][0]++;
    cov_1whxj8fcvr().s[18]++;
    for (var i =
      /* istanbul ignore next */
      (cov_1whxj8fcvr().s[19]++, 0), p =
      /* istanbul ignore next */
      (cov_1whxj8fcvr().s[20]++, Object.getOwnPropertySymbols(s)); i < p.length; i++) {
      /* istanbul ignore next */
      cov_1whxj8fcvr().s[21]++;
      if (
      /* istanbul ignore next */
      (cov_1whxj8fcvr().b[11][0]++, e.indexOf(p[i]) < 0) &&
      /* istanbul ignore next */
      (cov_1whxj8fcvr().b[11][1]++, Object.prototype.propertyIsEnumerable.call(s, p[i]))) {
        /* istanbul ignore next */
        cov_1whxj8fcvr().b[10][0]++;
        cov_1whxj8fcvr().s[22]++;
        t[p[i]] = s[p[i]];
      } else
      /* istanbul ignore next */
      {
        cov_1whxj8fcvr().b[10][1]++;
      }
    }
  } else
  /* istanbul ignore next */
  {
    cov_1whxj8fcvr().b[8][1]++;
  }
  cov_1whxj8fcvr().s[23]++;
  return t;
}));
/* istanbul ignore next */
cov_1whxj8fcvr().s[24]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
const express_1 =
/* istanbul ignore next */
(cov_1whxj8fcvr().s[25]++, require("express"));
const auth_1 =
/* istanbul ignore next */
(cov_1whxj8fcvr().s[26]++, require("../middleware/auth"));
const jwt_1 =
/* istanbul ignore next */
(cov_1whxj8fcvr().s[27]++, require("../utils/jwt"));
const password_1 =
/* istanbul ignore next */
(cov_1whxj8fcvr().s[28]++, require("../utils/password"));
const prisma_1 =
/* istanbul ignore next */
(cov_1whxj8fcvr().s[29]++, require("../lib/prisma"));
const router =
/* istanbul ignore next */
(cov_1whxj8fcvr().s[30]++, (0, express_1.Router)());
// POST /auth/login - User login
/* istanbul ignore next */
cov_1whxj8fcvr().s[31]++;
router.post('/login', (req, res) => {
  /* istanbul ignore next */
  cov_1whxj8fcvr().f[8]++;
  cov_1whxj8fcvr().s[32]++;
  return __awaiter(void 0, void 0, void 0, function* () {
    /* istanbul ignore next */
    cov_1whxj8fcvr().f[9]++;
    cov_1whxj8fcvr().s[33]++;
    try {
      const {
        email,
        password
      } =
      /* istanbul ignore next */
      (cov_1whxj8fcvr().s[34]++, req.body);
      /* istanbul ignore next */
      cov_1whxj8fcvr().s[35]++;
      console.log(email, password);
      // Simple validation
      /* istanbul ignore next */
      cov_1whxj8fcvr().s[36]++;
      if (
      /* istanbul ignore next */
      (cov_1whxj8fcvr().b[13][0]++, !email) ||
      /* istanbul ignore next */
      (cov_1whxj8fcvr().b[13][1]++, !password)) {
        /* istanbul ignore next */
        cov_1whxj8fcvr().b[12][0]++;
        cov_1whxj8fcvr().s[37]++;
        return res.status(400).json({
          message: 'Email and password are required'
        });
      } else
      /* istanbul ignore next */
      {
        cov_1whxj8fcvr().b[12][1]++;
      }
      // Find user by email
      const user =
      /* istanbul ignore next */
      (cov_1whxj8fcvr().s[38]++, yield prisma_1.prisma.user.findUnique({
        where: {
          email
        }
      }));
      /* istanbul ignore next */
      cov_1whxj8fcvr().s[39]++;
      if (!user) {
        /* istanbul ignore next */
        cov_1whxj8fcvr().b[14][0]++;
        cov_1whxj8fcvr().s[40]++;
        return res.status(401).json({
          message: 'Invalid credentials'
        });
      } else
      /* istanbul ignore next */
      {
        cov_1whxj8fcvr().b[14][1]++;
      }
      // Verify password
      const isPasswordValid =
      /* istanbul ignore next */
      (cov_1whxj8fcvr().s[41]++, yield (0, password_1.verifyPassword)(password, user.password));
      /* istanbul ignore next */
      cov_1whxj8fcvr().s[42]++;
      if (!isPasswordValid) {
        /* istanbul ignore next */
        cov_1whxj8fcvr().b[15][0]++;
        cov_1whxj8fcvr().s[43]++;
        return res.status(401).json({
          message: 'Invalid credentials'
        });
      } else
      /* istanbul ignore next */
      {
        cov_1whxj8fcvr().b[15][1]++;
      }
      // Generate JWT and set cookie
      cov_1whxj8fcvr().s[44]++;
      (0, jwt_1.signToken)({
        id: user.id,
        email: user.email,
        isAdmin: user.isAdmin
      }, res);
      // Return user data (excluding password)
      const {
          password: _password
        } =
        /* istanbul ignore next */
        (cov_1whxj8fcvr().s[45]++, user),
        userData =
        /* istanbul ignore next */
        (cov_1whxj8fcvr().s[46]++, __rest(user, ["password"]));
      /* istanbul ignore next */
      cov_1whxj8fcvr().s[47]++;
      res.status(200).json({
        message: 'Login successful',
        user: userData
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_1whxj8fcvr().s[48]++;
      console.error('Login error:', error);
      /* istanbul ignore next */
      cov_1whxj8fcvr().s[49]++;
      res.status(500).json({
        message: 'Internal server error'
      });
    }
  });
});
// POST /auth/signup - User registration
/* istanbul ignore next */
cov_1whxj8fcvr().s[50]++;
router.post('/signup', (req, res) => {
  /* istanbul ignore next */
  cov_1whxj8fcvr().f[10]++;
  cov_1whxj8fcvr().s[51]++;
  return __awaiter(void 0, void 0, void 0, function* () {
    /* istanbul ignore next */
    cov_1whxj8fcvr().f[11]++;
    cov_1whxj8fcvr().s[52]++;
    try {
      const {
        email,
        password,
        name
      } =
      /* istanbul ignore next */
      (cov_1whxj8fcvr().s[53]++, req.body);
      // Simple validation
      /* istanbul ignore next */
      cov_1whxj8fcvr().s[54]++;
      if (
      /* istanbul ignore next */
      (cov_1whxj8fcvr().b[17][0]++, !email) ||
      /* istanbul ignore next */
      (cov_1whxj8fcvr().b[17][1]++, !password)) {
        /* istanbul ignore next */
        cov_1whxj8fcvr().b[16][0]++;
        cov_1whxj8fcvr().s[55]++;
        return res.status(400).json({
          message: 'Email and password are required'
        });
      } else
      /* istanbul ignore next */
      {
        cov_1whxj8fcvr().b[16][1]++;
      }
      // Check if user already exists
      const existingUser =
      /* istanbul ignore next */
      (cov_1whxj8fcvr().s[56]++, yield prisma_1.prisma.user.findUnique({
        where: {
          email
        }
      }));
      /* istanbul ignore next */
      cov_1whxj8fcvr().s[57]++;
      if (existingUser) {
        /* istanbul ignore next */
        cov_1whxj8fcvr().b[18][0]++;
        cov_1whxj8fcvr().s[58]++;
        return res.status(409).json({
          message: 'User already exists'
        });
      } else
      /* istanbul ignore next */
      {
        cov_1whxj8fcvr().b[18][1]++;
      }
      // Hash password
      const hashedPassword =
      /* istanbul ignore next */
      (cov_1whxj8fcvr().s[59]++, yield (0, password_1.hashPassword)(password));
      // Create new user
      const user =
      /* istanbul ignore next */
      (cov_1whxj8fcvr().s[60]++, yield prisma_1.prisma.user.create({
        data: {
          email,
          password: hashedPassword,
          name:
          /* istanbul ignore next */
          (cov_1whxj8fcvr().b[19][0]++, name) ||
          /* istanbul ignore next */
          (cov_1whxj8fcvr().b[19][1]++, null)
        }
      }));
      // Generate JWT and set cookie
      /* istanbul ignore next */
      cov_1whxj8fcvr().s[61]++;
      (0, jwt_1.signToken)({
        id: user.id,
        email: user.email,
        isAdmin: user.isAdmin
      }, res);
      // Return user data (excluding password)
      const {
          password: _password
        } =
        /* istanbul ignore next */
        (cov_1whxj8fcvr().s[62]++, user),
        userData =
        /* istanbul ignore next */
        (cov_1whxj8fcvr().s[63]++, __rest(user, ["password"]));
      /* istanbul ignore next */
      cov_1whxj8fcvr().s[64]++;
      res.status(201).json({
        message: 'User created successfully',
        user: userData
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_1whxj8fcvr().s[65]++;
      console.error('Signup error:', error);
      /* istanbul ignore next */
      cov_1whxj8fcvr().s[66]++;
      res.status(500).json({
        message: 'Internal server error'
      });
    }
  });
});
// GET /auth/me - Get current user info (protected route)
/* istanbul ignore next */
cov_1whxj8fcvr().s[67]++;
router.get('/me', auth_1.authMiddleware, (req, res) => {
  /* istanbul ignore next */
  cov_1whxj8fcvr().f[12]++;
  cov_1whxj8fcvr().s[68]++;
  return __awaiter(void 0, void 0, void 0, function* () {
    /* istanbul ignore next */
    cov_1whxj8fcvr().f[13]++;
    var _a;
    /* istanbul ignore next */
    cov_1whxj8fcvr().s[69]++;
    try {
      // Get user from database using the ID from JWT
      const user =
      /* istanbul ignore next */
      (cov_1whxj8fcvr().s[70]++, yield prisma_1.prisma.user.findUnique({
        where: {
          id:
          /* istanbul ignore next */
          (cov_1whxj8fcvr().b[21][0]++, (_a = req.user) === null) ||
          /* istanbul ignore next */
          (cov_1whxj8fcvr().b[21][1]++, _a === void 0) ?
          /* istanbul ignore next */
          (cov_1whxj8fcvr().b[20][0]++, void 0) :
          /* istanbul ignore next */
          (cov_1whxj8fcvr().b[20][1]++, _a.id)
        }
      }));
      /* istanbul ignore next */
      cov_1whxj8fcvr().s[71]++;
      if (!user) {
        /* istanbul ignore next */
        cov_1whxj8fcvr().b[22][0]++;
        cov_1whxj8fcvr().s[72]++;
        return res.status(404).json({
          message: 'User not found'
        });
      } else
      /* istanbul ignore next */
      {
        cov_1whxj8fcvr().b[22][1]++;
      }
      // Return user data (excluding password)
      const {
          password: _password
        } =
        /* istanbul ignore next */
        (cov_1whxj8fcvr().s[73]++, user),
        userData =
        /* istanbul ignore next */
        (cov_1whxj8fcvr().s[74]++, __rest(user, ["password"]));
      /* istanbul ignore next */
      cov_1whxj8fcvr().s[75]++;
      res.status(200).json({
        message: 'User authenticated',
        user: userData
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_1whxj8fcvr().s[76]++;
      console.error('Auth/me error:', error);
      /* istanbul ignore next */
      cov_1whxj8fcvr().s[77]++;
      res.status(500).json({
        message: 'Internal server error'
      });
    }
  });
});
/* istanbul ignore next */
cov_1whxj8fcvr().s[78]++;
exports.default = router;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,