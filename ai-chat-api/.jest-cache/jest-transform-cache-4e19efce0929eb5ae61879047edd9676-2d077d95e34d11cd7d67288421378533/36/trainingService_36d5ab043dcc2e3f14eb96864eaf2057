cc4bfce6b78910368f515265406ea41f
"use strict";

/* istanbul ignore next */
function cov_jaw416zxk() {
  var path = "/Users/yusukeyoshioka/projects/youtube/ai-chat/ai-chat-api/src/services/trainingService.ts";
  var hash = "83b9821e396ace76a453bc900f947a36fd7107ca";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/yusukeyoshioka/projects/youtube/ai-chat/ai-chat-api/src/services/trainingService.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 16
        },
        end: {
          line: 10,
          column: 1
        }
      },
      "1": {
        start: {
          line: 3,
          column: 28
        },
        end: {
          line: 3,
          column: 110
        }
      },
      "2": {
        start: {
          line: 3,
          column: 91
        },
        end: {
          line: 3,
          column: 106
        }
      },
      "3": {
        start: {
          line: 4,
          column: 4
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "4": {
        start: {
          line: 5,
          column: 36
        },
        end: {
          line: 5,
          column: 97
        }
      },
      "5": {
        start: {
          line: 5,
          column: 42
        },
        end: {
          line: 5,
          column: 70
        }
      },
      "6": {
        start: {
          line: 5,
          column: 85
        },
        end: {
          line: 5,
          column: 95
        }
      },
      "7": {
        start: {
          line: 6,
          column: 35
        },
        end: {
          line: 6,
          column: 100
        }
      },
      "8": {
        start: {
          line: 6,
          column: 41
        },
        end: {
          line: 6,
          column: 73
        }
      },
      "9": {
        start: {
          line: 6,
          column: 88
        },
        end: {
          line: 6,
          column: 98
        }
      },
      "10": {
        start: {
          line: 7,
          column: 32
        },
        end: {
          line: 7,
          column: 116
        }
      },
      "11": {
        start: {
          line: 8,
          column: 8
        },
        end: {
          line: 8,
          column: 78
        }
      },
      "12": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 11,
          column: 62
        }
      },
      "13": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 12,
          column: 33
        }
      },
      "14": {
        start: {
          line: 13,
          column: 17
        },
        end: {
          line: 13,
          column: 34
        }
      },
      "15": {
        start: {
          line: 14,
          column: 17
        },
        end: {
          line: 14,
          column: 41
        }
      },
      "16": {
        start: {
          line: 15,
          column: 17
        },
        end: {
          line: 15,
          column: 41
        }
      },
      "17": {
        start: {
          line: 16,
          column: 15
        },
        end: {
          line: 18,
          column: 2
        }
      },
      "18": {
        start: {
          line: 20,
          column: 4
        },
        end: {
          line: 76,
          column: 7
        }
      },
      "19": {
        start: {
          line: 21,
          column: 96
        },
        end: {
          line: 21,
          column: 102
        }
      },
      "20": {
        start: {
          line: 22,
          column: 8
        },
        end: {
          line: 75,
          column: 9
        }
      },
      "21": {
        start: {
          line: 24,
          column: 31
        },
        end: {
          line: 44,
          column: 14
        }
      },
      "22": {
        start: {
          line: 45,
          column: 32
        },
        end: {
          line: 45,
          column: 69
        }
      },
      "23": {
        start: {
          line: 49,
          column: 12
        },
        end: {
          line: 53,
          column: 15
        }
      },
      "24": {
        start: {
          line: 55,
          column: 36
        },
        end: {
          line: 63,
          column: 14
        }
      },
      "25": {
        start: {
          line: 64,
          column: 12
        },
        end: {
          line: 70,
          column: 13
        }
      },
      "26": {
        start: {
          line: 66,
          column: 16
        },
        end: {
          line: 69,
          column: 19
        }
      },
      "27": {
        start: {
          line: 73,
          column: 12
        },
        end: {
          line: 73,
          column: 91
        }
      },
      "28": {
        start: {
          line: 74,
          column: 12
        },
        end: {
          line: 74,
          column: 24
        }
      },
      "29": {
        start: {
          line: 78,
          column: 0
        },
        end: {
          line: 78,
          column: 42
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 44
          },
          end: {
            line: 2,
            column: 45
          }
        },
        loc: {
          start: {
            line: 2,
            column: 89
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "adopt",
        decl: {
          start: {
            line: 3,
            column: 13
          },
          end: {
            line: 3,
            column: 18
          }
        },
        loc: {
          start: {
            line: 3,
            column: 26
          },
          end: {
            line: 3,
            column: 112
          }
        },
        line: 3
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 3,
            column: 70
          },
          end: {
            line: 3,
            column: 71
          }
        },
        loc: {
          start: {
            line: 3,
            column: 89
          },
          end: {
            line: 3,
            column: 108
          }
        },
        line: 3
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 4,
            column: 36
          },
          end: {
            line: 4,
            column: 37
          }
        },
        loc: {
          start: {
            line: 4,
            column: 63
          },
          end: {
            line: 9,
            column: 5
          }
        },
        line: 4
      },
      "4": {
        name: "fulfilled",
        decl: {
          start: {
            line: 5,
            column: 17
          },
          end: {
            line: 5,
            column: 26
          }
        },
        loc: {
          start: {
            line: 5,
            column: 34
          },
          end: {
            line: 5,
            column: 99
          }
        },
        line: 5
      },
      "5": {
        name: "rejected",
        decl: {
          start: {
            line: 6,
            column: 17
          },
          end: {
            line: 6,
            column: 25
          }
        },
        loc: {
          start: {
            line: 6,
            column: 33
          },
          end: {
            line: 6,
            column: 102
          }
        },
        line: 6
      },
      "6": {
        name: "step",
        decl: {
          start: {
            line: 7,
            column: 17
          },
          end: {
            line: 7,
            column: 21
          }
        },
        loc: {
          start: {
            line: 7,
            column: 30
          },
          end: {
            line: 7,
            column: 118
          }
        },
        line: 7
      },
      "7": {
        name: "improveResponse",
        decl: {
          start: {
            line: 19,
            column: 9
          },
          end: {
            line: 19,
            column: 24
          }
        },
        loc: {
          start: {
            line: 19,
            column: 33
          },
          end: {
            line: 77,
            column: 1
          }
        },
        line: 19
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 20,
            column: 43
          },
          end: {
            line: 20,
            column: 44
          }
        },
        loc: {
          start: {
            line: 20,
            column: 56
          },
          end: {
            line: 76,
            column: 5
          }
        },
        line: 20
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 16
          },
          end: {
            line: 10,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 17
          },
          end: {
            line: 2,
            column: 21
          }
        }, {
          start: {
            line: 2,
            column: 25
          },
          end: {
            line: 2,
            column: 39
          }
        }, {
          start: {
            line: 2,
            column: 44
          },
          end: {
            line: 10,
            column: 1
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 3,
            column: 35
          },
          end: {
            line: 3,
            column: 109
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 3,
            column: 56
          },
          end: {
            line: 3,
            column: 61
          }
        }, {
          start: {
            line: 3,
            column: 64
          },
          end: {
            line: 3,
            column: 109
          }
        }],
        line: 3
      },
      "2": {
        loc: {
          start: {
            line: 4,
            column: 16
          },
          end: {
            line: 4,
            column: 34
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 4,
            column: 16
          },
          end: {
            line: 4,
            column: 17
          }
        }, {
          start: {
            line: 4,
            column: 22
          },
          end: {
            line: 4,
            column: 33
          }
        }],
        line: 4
      },
      "3": {
        loc: {
          start: {
            line: 7,
            column: 32
          },
          end: {
            line: 7,
            column: 115
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 7,
            column: 46
          },
          end: {
            line: 7,
            column: 67
          }
        }, {
          start: {
            line: 7,
            column: 70
          },
          end: {
            line: 7,
            column: 115
          }
        }],
        line: 7
      },
      "4": {
        loc: {
          start: {
            line: 8,
            column: 51
          },
          end: {
            line: 8,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 8,
            column: 51
          },
          end: {
            line: 8,
            column: 61
          }
        }, {
          start: {
            line: 8,
            column: 65
          },
          end: {
            line: 8,
            column: 67
          }
        }],
        line: 8
      },
      "5": {
        loc: {
          start: {
            line: 52,
            column: 30
          },
          end: {
            line: 52,
            column: 117
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 52,
            column: 79
          },
          end: {
            line: 52,
            column: 85
          }
        }, {
          start: {
            line: 52,
            column: 88
          },
          end: {
            line: 52,
            column: 117
          }
        }],
        line: 52
      },
      "6": {
        loc: {
          start: {
            line: 52,
            column: 30
          },
          end: {
            line: 52,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 52,
            column: 30
          },
          end: {
            line: 52,
            column: 50
          }
        }, {
          start: {
            line: 52,
            column: 54
          },
          end: {
            line: 52,
            column: 76
          }
        }],
        line: 52
      },
      "7": {
        loc: {
          start: {
            line: 64,
            column: 12
          },
          end: {
            line: 70,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 64,
            column: 12
          },
          end: {
            line: 70,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 64
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/yusukeyoshioka/projects/youtube/ai-chat/ai-chat-api/src/services/trainingService.ts",
      mappings: ";;;;;;;;;;;;AAAA,mCAAgC;AAChC,0CAAuC;AACvC,0CAAuC;AAEvC,MAAM,MAAM,GAAG,IAAI,eAAM,CAAC;IACxB,MAAM,EAAE,OAAO,CAAC,GAAG,CAAC,cAAc;CACnC,CAAC,CAAC;AAWH,SAAsB,eAAe,CAAC,MAA6B;;QACjE,MAAM,EACJ,UAAU,EACV,SAAS,EACT,QAAQ,EACR,aAAa,EACb,gBAAgB,EAChB,QAAQ,GACT,GAAG,MAAM,CAAC;QAEX,IAAI,CAAC;YACH,UAAU;YACV,MAAM,UAAU,GAAG,MAAM,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC;gBACtD,KAAK,EAAE,OAAO;gBACd,QAAQ,EAAE;oBACR;wBACE,IAAI,EAAE,QAAQ;wBACd,OAAO,EAAE;mCACgB;qBAC1B;oBACD;wBACE,IAAI,EAAE,MAAM;wBACZ,OAAO,EAAE;WACR,aAAa;SACf,gBAAgB;gBACT,QAAQ;;;2BAGG;qBAClB;iBACF;gBACD,WAAW,EAAE,GAAG;aACjB,CAAC,CAAC;YAEH,MAAM,WAAW,GAAG,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC;YAE1D,yBAAyB;YACzB,yCAAyC;YAEzC,QAAQ;YACR,eAAM,CAAC,IAAI,CAAC,kCAAkC,EAAE;gBAC9C,UAAU;gBACV,SAAS;gBACT,WAAW,EAAE,CAAA,WAAW,aAAX,WAAW,uBAAX,WAAW,CAAE,SAAS,CAAC,CAAC,EAAE,GAAG,CAAC,IAAG,KAAK;aACpD,CAAC,CAAC;YAEH,mCAAmC;YACnC,MAAM,eAAe,GAAG,MAAM,eAAM,CAAC,OAAO,CAAC,QAAQ,CAAC;gBACpD,KAAK,EAAE;oBACL,QAAQ;oBACR,QAAQ,EAAE;wBACR,QAAQ,EAAE,aAAa,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,WAAW;qBACnD;iBACF;gBACD,IAAI,EAAE,CAAC;aACR,CAAC,CAAC;YAEH,IAAI,eAAe,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;gBAC/B,aAAa;gBACb,eAAM,CAAC,IAAI,CAAC,wBAAwB,EAAE;oBACpC,OAAO,EAAE,aAAa;oBACtB,SAAS,EAAE,eAAe,CAAC,MAAM;iBAClC,CAAC,CAAC;YACL,CAAC;QACH,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,eAAM,CAAC,KAAK,CAAC,gCAAgC,EAAE,EAAE,KAAK,EAAE,UAAU,EAAE,CAAC,CAAC;YACtE,MAAM,KAAK,CAAC;QACd,CAAC;IACH,CAAC;CAAA;AApED,0CAoEC",
      names: [],
      sources: ["/Users/yusukeyoshioka/projects/youtube/ai-chat/ai-chat-api/src/services/trainingService.ts"],
      sourcesContent: ["import { OpenAI } from 'openai';\nimport { prisma } from '../lib/prisma';\nimport { logger } from '../lib/logger';\n\nconst openai = new OpenAI({\n  apiKey: process.env.OPENAI_API_KEY,\n});\n\ninterface ImproveResponseParams {\n  feedbackId: string;\n  messageId: string;\n  feedback: string;\n  originalQuery: string;\n  originalResponse: string;\n  widgetId: string;\n}\n\nexport async function improveResponse(params: ImproveResponseParams) {\n  const {\n    feedbackId,\n    messageId,\n    feedback,\n    originalQuery,\n    originalResponse,\n    widgetId,\n  } = params;\n\n  try {\n    // \u6539\u5584\u63D0\u6848\u3092\u751F\u6210\n    const completion = await openai.chat.completions.create({\n      model: 'gpt-4',\n      messages: [\n        {\n          role: 'system',\n          content: `\u3042\u306A\u305F\u306F\u30AB\u30B9\u30BF\u30DE\u30FC\u30B5\u30DD\u30FC\u30C8\u306E\u6539\u5584\u30A2\u30C9\u30D0\u30A4\u30B6\u30FC\u3067\u3059\u3002\n\u30E6\u30FC\u30B6\u30FC\u304B\u3089\u306E\u30D5\u30A3\u30FC\u30C9\u30D0\u30C3\u30AF\u3092\u57FA\u306B\u3001\u3088\u308A\u826F\u3044\u56DE\u7B54\u3092\u63D0\u6848\u3057\u3066\u304F\u3060\u3055\u3044\u3002`,\n        },\n        {\n          role: 'user',\n          content: `\n\u30E6\u30FC\u30B6\u30FC\u306E\u8CEA\u554F: ${originalQuery}\n\u73FE\u5728\u306E\u56DE\u7B54: ${originalResponse}\n\u30E6\u30FC\u30B6\u30FC\u306E\u30D5\u30A3\u30FC\u30C9\u30D0\u30C3\u30AF: ${feedback}\n\n\u3053\u306E\u30D5\u30A3\u30FC\u30C9\u30D0\u30C3\u30AF\u3092\u8E0F\u307E\u3048\u3066\u3001\u3088\u308A\u826F\u3044\u56DE\u7B54\u3092\u63D0\u6848\u3057\u3066\u304F\u3060\u3055\u3044\u3002\n\u307E\u305F\u3001\u4ECA\u5F8C\u540C\u69D8\u306E\u8CEA\u554F\u306B\u5BFE\u3059\u308B\u6539\u5584\u70B9\u3082\u6559\u3048\u3066\u304F\u3060\u3055\u3044\u3002`,\n        },\n      ],\n      temperature: 0.7,\n    });\n\n    const improvement = completion.choices[0].message.content;\n\n    // \u6539\u5584\u63D0\u6848\u3092\u4FDD\u5B58\uFF08\u65B0\u3057\u3044\u30C6\u30FC\u30D6\u30EB\u304C\u5FC5\u8981\u306A\u5834\u5408\uFF09\n    // TODO: ImprovementSuggestion\u30C6\u30FC\u30D6\u30EB\u3092\u4F5C\u6210\u3057\u3066\u4FDD\u5B58\n\n    // \u30ED\u30B0\u306B\u8A18\u9332\n    logger.info('Improvement suggestion generated', {\n      feedbackId,\n      messageId,\n      improvement: improvement?.substring(0, 100) + '...',\n    });\n\n    // \u985E\u4F3C\u306E\u8CEA\u554F\u30D1\u30BF\u30FC\u30F3\u3092\u691C\u7D22\u3057\u3066\u3001FAQ\u3084\u5FDC\u7B54\u30EB\u30FC\u30EB\u306E\u5019\u88DC\u3068\u3057\u3066\u63D0\u6848\n    const similarMessages = await prisma.chatLog.findMany({\n      where: {\n        widgetId,\n        question: {\n          contains: originalQuery.split(' ')[0], // \u7C21\u6613\u7684\u306A\u985E\u4F3C\u691C\u7D22\n        },\n      },\n      take: 5,\n    });\n\n    if (similarMessages.length > 3) {\n      // FAQ\u5019\u88DC\u3068\u3057\u3066\u8A18\u9332\n      logger.info('FAQ candidate detected', {\n        pattern: originalQuery,\n        frequency: similarMessages.length,\n      });\n    }\n  } catch (error) {\n    logger.error('Failed to generate improvement', { error, feedbackId });\n    throw error;\n  }\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "83b9821e396ace76a453bc900f947a36fd7107ca"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_jaw416zxk = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_jaw416zxk();
var __awaiter =
/* istanbul ignore next */
(cov_jaw416zxk().s[0]++,
/* istanbul ignore next */
(cov_jaw416zxk().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_jaw416zxk().b[0][1]++, this.__awaiter) ||
/* istanbul ignore next */
(cov_jaw416zxk().b[0][2]++, function (thisArg, _arguments, P, generator) {
  /* istanbul ignore next */
  cov_jaw416zxk().f[0]++;
  function adopt(value) {
    /* istanbul ignore next */
    cov_jaw416zxk().f[1]++;
    cov_jaw416zxk().s[1]++;
    return value instanceof P ?
    /* istanbul ignore next */
    (cov_jaw416zxk().b[1][0]++, value) :
    /* istanbul ignore next */
    (cov_jaw416zxk().b[1][1]++, new P(function (resolve) {
      /* istanbul ignore next */
      cov_jaw416zxk().f[2]++;
      cov_jaw416zxk().s[2]++;
      resolve(value);
    }));
  }
  /* istanbul ignore next */
  cov_jaw416zxk().s[3]++;
  return new (
  /* istanbul ignore next */
  (cov_jaw416zxk().b[2][0]++, P) ||
  /* istanbul ignore next */
  (cov_jaw416zxk().b[2][1]++, P = Promise))(function (resolve, reject) {
    /* istanbul ignore next */
    cov_jaw416zxk().f[3]++;
    function fulfilled(value) {
      /* istanbul ignore next */
      cov_jaw416zxk().f[4]++;
      cov_jaw416zxk().s[4]++;
      try {
        /* istanbul ignore next */
        cov_jaw416zxk().s[5]++;
        step(generator.next(value));
      } catch (e) {
        /* istanbul ignore next */
        cov_jaw416zxk().s[6]++;
        reject(e);
      }
    }
    function rejected(value) {
      /* istanbul ignore next */
      cov_jaw416zxk().f[5]++;
      cov_jaw416zxk().s[7]++;
      try {
        /* istanbul ignore next */
        cov_jaw416zxk().s[8]++;
        step(generator["throw"](value));
      } catch (e) {
        /* istanbul ignore next */
        cov_jaw416zxk().s[9]++;
        reject(e);
      }
    }
    function step(result) {
      /* istanbul ignore next */
      cov_jaw416zxk().f[6]++;
      cov_jaw416zxk().s[10]++;
      result.done ?
      /* istanbul ignore next */
      (cov_jaw416zxk().b[3][0]++, resolve(result.value)) :
      /* istanbul ignore next */
      (cov_jaw416zxk().b[3][1]++, adopt(result.value).then(fulfilled, rejected));
    }
    /* istanbul ignore next */
    cov_jaw416zxk().s[11]++;
    step((generator = generator.apply(thisArg,
    /* istanbul ignore next */
    (cov_jaw416zxk().b[4][0]++, _arguments) ||
    /* istanbul ignore next */
    (cov_jaw416zxk().b[4][1]++, []))).next());
  });
}));
/* istanbul ignore next */
cov_jaw416zxk().s[12]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_jaw416zxk().s[13]++;
exports.improveResponse = void 0;
const openai_1 =
/* istanbul ignore next */
(cov_jaw416zxk().s[14]++, require("openai"));
const prisma_1 =
/* istanbul ignore next */
(cov_jaw416zxk().s[15]++, require("../lib/prisma"));
const logger_1 =
/* istanbul ignore next */
(cov_jaw416zxk().s[16]++, require("../lib/logger"));
const openai =
/* istanbul ignore next */
(cov_jaw416zxk().s[17]++, new openai_1.OpenAI({
  apiKey: process.env.OPENAI_API_KEY
}));
function improveResponse(params) {
  /* istanbul ignore next */
  cov_jaw416zxk().f[7]++;
  cov_jaw416zxk().s[18]++;
  return __awaiter(this, void 0, void 0, function* () {
    /* istanbul ignore next */
    cov_jaw416zxk().f[8]++;
    const {
      feedbackId,
      messageId,
      feedback,
      originalQuery,
      originalResponse,
      widgetId
    } =
    /* istanbul ignore next */
    (cov_jaw416zxk().s[19]++, params);
    /* istanbul ignore next */
    cov_jaw416zxk().s[20]++;
    try {
      // 改善提案を生成
      const completion =
      /* istanbul ignore next */
      (cov_jaw416zxk().s[21]++, yield openai.chat.completions.create({
        model: 'gpt-4',
        messages: [{
          role: 'system',
          content: `あなたはカスタマーサポートの改善アドバイザーです。
ユーザーからのフィードバックを基に、より良い回答を提案してください。`
        }, {
          role: 'user',
          content: `
ユーザーの質問: ${originalQuery}
現在の回答: ${originalResponse}
ユーザーのフィードバック: ${feedback}

このフィードバックを踏まえて、より良い回答を提案してください。
また、今後同様の質問に対する改善点も教えてください。`
        }],
        temperature: 0.7
      }));
      const improvement =
      /* istanbul ignore next */
      (cov_jaw416zxk().s[22]++, completion.choices[0].message.content);
      // 改善提案を保存（新しいテーブルが必要な場合）
      // TODO: ImprovementSuggestionテーブルを作成して保存
      // ログに記録
      /* istanbul ignore next */
      cov_jaw416zxk().s[23]++;
      logger_1.logger.info('Improvement suggestion generated', {
        feedbackId,
        messageId,
        improvement: (
        /* istanbul ignore next */
        (cov_jaw416zxk().b[6][0]++, improvement === null) ||
        /* istanbul ignore next */
        (cov_jaw416zxk().b[6][1]++, improvement === void 0) ?
        /* istanbul ignore next */
        (cov_jaw416zxk().b[5][0]++, void 0) :
        /* istanbul ignore next */
        (cov_jaw416zxk().b[5][1]++, improvement.substring(0, 100))) + '...'
      });
      // 類似の質問パターンを検索して、FAQや応答ルールの候補として提案
      const similarMessages =
      /* istanbul ignore next */
      (cov_jaw416zxk().s[24]++, yield prisma_1.prisma.chatLog.findMany({
        where: {
          widgetId,
          question: {
            contains: originalQuery.split(' ')[0] // 簡易的な類似検索
          }
        },
        take: 5
      }));
      /* istanbul ignore next */
      cov_jaw416zxk().s[25]++;
      if (similarMessages.length > 3) {
        /* istanbul ignore next */
        cov_jaw416zxk().b[7][0]++;
        cov_jaw416zxk().s[26]++;
        // FAQ候補として記録
        logger_1.logger.info('FAQ candidate detected', {
          pattern: originalQuery,
          frequency: similarMessages.length
        });
      } else
      /* istanbul ignore next */
      {
        cov_jaw416zxk().b[7][1]++;
      }
    } catch (error) {
      /* istanbul ignore next */
      cov_jaw416zxk().s[27]++;
      logger_1.logger.error('Failed to generate improvement', {
        error,
        feedbackId
      });
      /* istanbul ignore next */
      cov_jaw416zxk().s[28]++;
      throw error;
    }
  });
}
/* istanbul ignore next */
cov_jaw416zxk().s[29]++;
exports.improveResponse = improveResponse;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,