{"version":3,"names":["cov_2nuxe3potz","actualCoverage","prisma_1","s","require","DEFAULT_ROLE_PERMISSIONS","owner","org_admin","editor","viewer","api_user","read_only","initializeRolePermissions","f","__awaiter","role","permissions","Object","entries","permission","prisma","rolePermission","upsert","where","role_permission","update","create","exports","getUserPermissions","userId","organizationId","user","findUnique","id","include","permissionOverrides","b","rolePermissions","findMany","in","roles","select","Set","map","rp","override","granted","add","delete","Array","from","hasPermission","includes","hasAnyPermission","userPermissions","some","p","grantPermission","grantedBy","userPermissionOverride","userId_organizationId_permission","createdBy","revokePermission","revokedBy","getOrganizationUsers","email","name"],"sources":["/Users/yusukeyoshioka/projects/youtube/ai-chat/ai-chat-api/src/services/rbacService.ts"],"sourcesContent":["import { prisma } from '../lib/prisma';\nimport { Role, Permission } from '@prisma/client';\n\n// Default role permissions mapping\nconst DEFAULT_ROLE_PERMISSIONS: Record<Role, Permission[]> = {\n  owner: [\n    'ORG_READ',\n    'ORG_WRITE',\n    'ORG_DELETE',\n    'ORG_INVITE_USERS',\n    'WIDGET_READ',\n    'WIDGET_WRITE',\n    'WIDGET_DELETE',\n    'WIDGET_CONFIGURE',\n    'CHAT_READ',\n    'CHAT_MODERATE',\n    'CHAT_EXPORT',\n    'KB_READ',\n    'KB_WRITE',\n    'KB_DELETE',\n    'KB_TRAIN',\n    'ANALYTICS_READ',\n    'ANALYTICS_EXPORT',\n    'SETTINGS_READ',\n    'SETTINGS_WRITE',\n    'BILLING_READ',\n    'BILLING_WRITE',\n  ] as Permission[],\n\n  org_admin: [\n    'ORG_READ',\n    'ORG_WRITE',\n    'ORG_INVITE_USERS',\n    'WIDGET_READ',\n    'WIDGET_WRITE',\n    'WIDGET_DELETE',\n    'WIDGET_CONFIGURE',\n    'CHAT_READ',\n    'CHAT_MODERATE',\n    'CHAT_EXPORT',\n    'KB_READ',\n    'KB_WRITE',\n    'KB_DELETE',\n    'KB_TRAIN',\n    'ANALYTICS_READ',\n    'ANALYTICS_EXPORT',\n    'SETTINGS_READ',\n    'SETTINGS_WRITE',\n  ] as Permission[],\n\n  editor: [\n    'ORG_READ',\n    'WIDGET_READ',\n    'WIDGET_WRITE',\n    'WIDGET_CONFIGURE',\n    'CHAT_READ',\n    'CHAT_MODERATE',\n    'KB_READ',\n    'KB_WRITE',\n    'KB_TRAIN',\n    'ANALYTICS_READ',\n    'SETTINGS_READ',\n  ] as Permission[],\n\n  viewer: [\n    'ORG_READ',\n    'WIDGET_READ',\n    'CHAT_READ',\n    'KB_READ',\n    'ANALYTICS_READ',\n    'SETTINGS_READ',\n  ] as Permission[],\n\n  api_user: [\n    'WIDGET_READ',\n    'WIDGET_CONFIGURE',\n    'CHAT_READ',\n    'KB_READ',\n  ] as Permission[],\n\n  read_only: [\n    'ORG_READ',\n    'WIDGET_READ',\n    'CHAT_READ',\n    'KB_READ',\n    'ANALYTICS_READ',\n  ] as Permission[],\n};\n\nexport const initializeRolePermissions = async () => {\n  for (const [role, permissions] of Object.entries(DEFAULT_ROLE_PERMISSIONS)) {\n    for (const permission of permissions) {\n      await prisma.rolePermission.upsert({\n        where: {\n          role_permission: {\n            role: role as Role,\n            permission: permission as Permission,\n          },\n        },\n        update: {},\n        create: {\n          role: role as Role,\n          permission: permission as Permission,\n        },\n      });\n    }\n  }\n};\n\nexport const getUserPermissions = async (\n  userId: string,\n  organizationId: string\n): Promise<Permission[]> => {\n  const user = await prisma.user.findUnique({\n    where: { id: userId },\n    include: {\n      permissionOverrides: {\n        where: { organizationId },\n      },\n    },\n  });\n\n  if (!user) {\n    return [];\n  }\n\n  // Get base permissions from roles\n  const rolePermissions = await prisma.rolePermission.findMany({\n    where: {\n      role: {\n        in: user.roles,\n      },\n    },\n    select: { permission: true },\n  });\n\n  const permissions = new Set(rolePermissions.map((rp) => rp.permission));\n\n  // Apply permission overrides\n  for (const override of user.permissionOverrides) {\n    if (override.granted) {\n      permissions.add(override.permission);\n    } else {\n      permissions.delete(override.permission);\n    }\n  }\n\n  return Array.from(permissions);\n};\n\nexport const hasPermission = async (\n  userId: string,\n  organizationId: string,\n  permission: Permission\n): Promise<boolean> => {\n  const permissions = await getUserPermissions(userId, organizationId);\n  return permissions.includes(permission);\n};\n\nexport const hasAnyPermission = async (\n  userId: string,\n  organizationId: string,\n  permissions: Permission[]\n): Promise<boolean> => {\n  const userPermissions = await getUserPermissions(userId, organizationId);\n  return permissions.some((p) => userPermissions.includes(p));\n};\n\nexport const grantPermission = async (\n  userId: string,\n  organizationId: string,\n  permission: Permission,\n  grantedBy: string\n) => {\n  return prisma.userPermissionOverride.upsert({\n    where: {\n      userId_organizationId_permission: {\n        userId,\n        organizationId,\n        permission,\n      },\n    },\n    update: {\n      granted: true,\n      createdBy: grantedBy,\n    },\n    create: {\n      userId,\n      organizationId,\n      permission,\n      granted: true,\n      createdBy: grantedBy,\n    },\n  });\n};\n\nexport const revokePermission = async (\n  userId: string,\n  organizationId: string,\n  permission: Permission,\n  revokedBy: string\n) => {\n  return prisma.userPermissionOverride.upsert({\n    where: {\n      userId_organizationId_permission: {\n        userId,\n        organizationId,\n        permission,\n      },\n    },\n    update: {\n      granted: false,\n      createdBy: revokedBy,\n    },\n    create: {\n      userId,\n      organizationId,\n      permission,\n      granted: false,\n      createdBy: revokedBy,\n    },\n  });\n};\n\nexport const getOrganizationUsers = async (organizationId: string) => {\n  return prisma.user.findMany({\n    where: { organizationId },\n    select: {\n      id: true,\n      email: true,\n      name: true,\n      roles: true,\n      permissionOverrides: {\n        where: { organizationId },\n        select: {\n          permission: true,\n          granted: true,\n        },\n      },\n    },\n  });\n};\n"],"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","ignoreList":[]}