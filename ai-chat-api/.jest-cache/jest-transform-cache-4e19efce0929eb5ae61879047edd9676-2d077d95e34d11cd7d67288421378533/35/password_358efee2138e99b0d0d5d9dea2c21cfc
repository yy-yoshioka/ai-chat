eef9867f49daa30850df72c38dccb4f5
"use strict";

/* istanbul ignore next */
function cov_1xb4exinbi() {
  var path = "/Users/yusukeyoshioka/projects/youtube/ai-chat/ai-chat-api/src/utils/password.ts";
  var hash = "a71e0130b6b1e320aa2c1e2bc07df3e6d070eb29";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/yusukeyoshioka/projects/youtube/ai-chat/ai-chat-api/src/utils/password.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 16
        },
        end: {
          line: 10,
          column: 1
        }
      },
      "1": {
        start: {
          line: 3,
          column: 28
        },
        end: {
          line: 3,
          column: 110
        }
      },
      "2": {
        start: {
          line: 3,
          column: 91
        },
        end: {
          line: 3,
          column: 106
        }
      },
      "3": {
        start: {
          line: 4,
          column: 4
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "4": {
        start: {
          line: 5,
          column: 36
        },
        end: {
          line: 5,
          column: 97
        }
      },
      "5": {
        start: {
          line: 5,
          column: 42
        },
        end: {
          line: 5,
          column: 70
        }
      },
      "6": {
        start: {
          line: 5,
          column: 85
        },
        end: {
          line: 5,
          column: 95
        }
      },
      "7": {
        start: {
          line: 6,
          column: 35
        },
        end: {
          line: 6,
          column: 100
        }
      },
      "8": {
        start: {
          line: 6,
          column: 41
        },
        end: {
          line: 6,
          column: 73
        }
      },
      "9": {
        start: {
          line: 6,
          column: 88
        },
        end: {
          line: 6,
          column: 98
        }
      },
      "10": {
        start: {
          line: 7,
          column: 32
        },
        end: {
          line: 7,
          column: 116
        }
      },
      "11": {
        start: {
          line: 8,
          column: 8
        },
        end: {
          line: 8,
          column: 78
        }
      },
      "12": {
        start: {
          line: 11,
          column: 22
        },
        end: {
          line: 13,
          column: 1
        }
      },
      "13": {
        start: {
          line: 12,
          column: 4
        },
        end: {
          line: 12,
          column: 62
        }
      },
      "14": {
        start: {
          line: 14,
          column: 0
        },
        end: {
          line: 14,
          column: 62
        }
      },
      "15": {
        start: {
          line: 15,
          column: 0
        },
        end: {
          line: 15,
          column: 55
        }
      },
      "16": {
        start: {
          line: 16,
          column: 17
        },
        end: {
          line: 16,
          column: 51
        }
      },
      "17": {
        start: {
          line: 17,
          column: 20
        },
        end: {
          line: 17,
          column: 22
        }
      },
      "18": {
        start: {
          line: 19,
          column: 21
        },
        end: {
          line: 21,
          column: 2
        }
      },
      "19": {
        start: {
          line: 19,
          column: 35
        },
        end: {
          line: 21,
          column: 2
        }
      },
      "20": {
        start: {
          line: 20,
          column: 4
        },
        end: {
          line: 20,
          column: 56
        }
      },
      "21": {
        start: {
          line: 22,
          column: 0
        },
        end: {
          line: 22,
          column: 36
        }
      },
      "22": {
        start: {
          line: 24,
          column: 23
        },
        end: {
          line: 26,
          column: 2
        }
      },
      "23": {
        start: {
          line: 24,
          column: 53
        },
        end: {
          line: 26,
          column: 2
        }
      },
      "24": {
        start: {
          line: 25,
          column: 4
        },
        end: {
          line: 25,
          column: 62
        }
      },
      "25": {
        start: {
          line: 27,
          column: 0
        },
        end: {
          line: 27,
          column: 40
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 44
          },
          end: {
            line: 2,
            column: 45
          }
        },
        loc: {
          start: {
            line: 2,
            column: 89
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "adopt",
        decl: {
          start: {
            line: 3,
            column: 13
          },
          end: {
            line: 3,
            column: 18
          }
        },
        loc: {
          start: {
            line: 3,
            column: 26
          },
          end: {
            line: 3,
            column: 112
          }
        },
        line: 3
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 3,
            column: 70
          },
          end: {
            line: 3,
            column: 71
          }
        },
        loc: {
          start: {
            line: 3,
            column: 89
          },
          end: {
            line: 3,
            column: 108
          }
        },
        line: 3
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 4,
            column: 36
          },
          end: {
            line: 4,
            column: 37
          }
        },
        loc: {
          start: {
            line: 4,
            column: 63
          },
          end: {
            line: 9,
            column: 5
          }
        },
        line: 4
      },
      "4": {
        name: "fulfilled",
        decl: {
          start: {
            line: 5,
            column: 17
          },
          end: {
            line: 5,
            column: 26
          }
        },
        loc: {
          start: {
            line: 5,
            column: 34
          },
          end: {
            line: 5,
            column: 99
          }
        },
        line: 5
      },
      "5": {
        name: "rejected",
        decl: {
          start: {
            line: 6,
            column: 17
          },
          end: {
            line: 6,
            column: 25
          }
        },
        loc: {
          start: {
            line: 6,
            column: 33
          },
          end: {
            line: 6,
            column: 102
          }
        },
        line: 6
      },
      "6": {
        name: "step",
        decl: {
          start: {
            line: 7,
            column: 17
          },
          end: {
            line: 7,
            column: 21
          }
        },
        loc: {
          start: {
            line: 7,
            column: 30
          },
          end: {
            line: 7,
            column: 118
          }
        },
        line: 7
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 11,
            column: 56
          },
          end: {
            line: 11,
            column: 57
          }
        },
        loc: {
          start: {
            line: 11,
            column: 71
          },
          end: {
            line: 13,
            column: 1
          }
        },
        line: 11
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 19,
            column: 21
          },
          end: {
            line: 19,
            column: 22
          }
        },
        loc: {
          start: {
            line: 19,
            column: 35
          },
          end: {
            line: 21,
            column: 2
          }
        },
        line: 19
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 19,
            column: 69
          },
          end: {
            line: 19,
            column: 70
          }
        },
        loc: {
          start: {
            line: 19,
            column: 82
          },
          end: {
            line: 21,
            column: 1
          }
        },
        line: 19
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 24,
            column: 23
          },
          end: {
            line: 24,
            column: 24
          }
        },
        loc: {
          start: {
            line: 24,
            column: 53
          },
          end: {
            line: 26,
            column: 2
          }
        },
        line: 24
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 24,
            column: 87
          },
          end: {
            line: 24,
            column: 88
          }
        },
        loc: {
          start: {
            line: 24,
            column: 100
          },
          end: {
            line: 26,
            column: 1
          }
        },
        line: 24
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 16
          },
          end: {
            line: 10,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 17
          },
          end: {
            line: 2,
            column: 21
          }
        }, {
          start: {
            line: 2,
            column: 25
          },
          end: {
            line: 2,
            column: 39
          }
        }, {
          start: {
            line: 2,
            column: 44
          },
          end: {
            line: 10,
            column: 1
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 3,
            column: 35
          },
          end: {
            line: 3,
            column: 109
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 3,
            column: 56
          },
          end: {
            line: 3,
            column: 61
          }
        }, {
          start: {
            line: 3,
            column: 64
          },
          end: {
            line: 3,
            column: 109
          }
        }],
        line: 3
      },
      "2": {
        loc: {
          start: {
            line: 4,
            column: 16
          },
          end: {
            line: 4,
            column: 34
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 4,
            column: 16
          },
          end: {
            line: 4,
            column: 17
          }
        }, {
          start: {
            line: 4,
            column: 22
          },
          end: {
            line: 4,
            column: 33
          }
        }],
        line: 4
      },
      "3": {
        loc: {
          start: {
            line: 7,
            column: 32
          },
          end: {
            line: 7,
            column: 115
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 7,
            column: 46
          },
          end: {
            line: 7,
            column: 67
          }
        }, {
          start: {
            line: 7,
            column: 70
          },
          end: {
            line: 7,
            column: 115
          }
        }],
        line: 7
      },
      "4": {
        loc: {
          start: {
            line: 8,
            column: 51
          },
          end: {
            line: 8,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 8,
            column: 51
          },
          end: {
            line: 8,
            column: 61
          }
        }, {
          start: {
            line: 8,
            column: 65
          },
          end: {
            line: 8,
            column: 67
          }
        }],
        line: 8
      },
      "5": {
        loc: {
          start: {
            line: 11,
            column: 22
          },
          end: {
            line: 13,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 11,
            column: 23
          },
          end: {
            line: 11,
            column: 27
          }
        }, {
          start: {
            line: 11,
            column: 31
          },
          end: {
            line: 11,
            column: 51
          }
        }, {
          start: {
            line: 11,
            column: 56
          },
          end: {
            line: 13,
            column: 1
          }
        }],
        line: 11
      },
      "6": {
        loc: {
          start: {
            line: 12,
            column: 11
          },
          end: {
            line: 12,
            column: 61
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 12,
            column: 37
          },
          end: {
            line: 12,
            column: 40
          }
        }, {
          start: {
            line: 12,
            column: 43
          },
          end: {
            line: 12,
            column: 61
          }
        }],
        line: 12
      },
      "7": {
        loc: {
          start: {
            line: 12,
            column: 12
          },
          end: {
            line: 12,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 12,
            column: 12
          },
          end: {
            line: 12,
            column: 15
          }
        }, {
          start: {
            line: 12,
            column: 19
          },
          end: {
            line: 12,
            column: 33
          }
        }],
        line: 12
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0, 0],
      "6": [0, 0],
      "7": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/yusukeyoshioka/projects/youtube/ai-chat/ai-chat-api/src/utils/password.ts",
      mappings: ";;;;;;;;;;;;;;;AAAA,oDAA4B;AAE5B,MAAM,WAAW,GAAG,EAAE,CAAC;AAEvB,kBAAkB;AACX,MAAM,YAAY,GAAG,CAAO,QAAgB,EAAmB,EAAE;IACtE,OAAO,gBAAM,CAAC,IAAI,CAAC,QAAQ,EAAE,WAAW,CAAC,CAAC;AAC5C,CAAC,CAAA,CAAC;AAFW,QAAA,YAAY,gBAEvB;AAEF,mCAAmC;AAC5B,MAAM,cAAc,GAAG,CAC5B,QAAgB,EAChB,cAAsB,EACJ,EAAE;IACpB,OAAO,gBAAM,CAAC,OAAO,CAAC,QAAQ,EAAE,cAAc,CAAC,CAAC;AAClD,CAAC,CAAA,CAAC;AALW,QAAA,cAAc,kBAKzB",
      names: [],
      sources: ["/Users/yusukeyoshioka/projects/youtube/ai-chat/ai-chat-api/src/utils/password.ts"],
      sourcesContent: ["import bcrypt from 'bcrypt';\n\nconst SALT_ROUNDS = 10;\n\n// Hash a password\nexport const hashPassword = async (password: string): Promise<string> => {\n  return bcrypt.hash(password, SALT_ROUNDS);\n};\n\n// Verify a password against a hash\nexport const verifyPassword = async (\n  password: string,\n  hashedPassword: string\n): Promise<boolean> => {\n  return bcrypt.compare(password, hashedPassword);\n};\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "a71e0130b6b1e320aa2c1e2bc07df3e6d070eb29"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1xb4exinbi = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1xb4exinbi();
var __awaiter =
/* istanbul ignore next */
(cov_1xb4exinbi().s[0]++,
/* istanbul ignore next */
(cov_1xb4exinbi().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_1xb4exinbi().b[0][1]++, this.__awaiter) ||
/* istanbul ignore next */
(cov_1xb4exinbi().b[0][2]++, function (thisArg, _arguments, P, generator) {
  /* istanbul ignore next */
  cov_1xb4exinbi().f[0]++;
  function adopt(value) {
    /* istanbul ignore next */
    cov_1xb4exinbi().f[1]++;
    cov_1xb4exinbi().s[1]++;
    return value instanceof P ?
    /* istanbul ignore next */
    (cov_1xb4exinbi().b[1][0]++, value) :
    /* istanbul ignore next */
    (cov_1xb4exinbi().b[1][1]++, new P(function (resolve) {
      /* istanbul ignore next */
      cov_1xb4exinbi().f[2]++;
      cov_1xb4exinbi().s[2]++;
      resolve(value);
    }));
  }
  /* istanbul ignore next */
  cov_1xb4exinbi().s[3]++;
  return new (
  /* istanbul ignore next */
  (cov_1xb4exinbi().b[2][0]++, P) ||
  /* istanbul ignore next */
  (cov_1xb4exinbi().b[2][1]++, P = Promise))(function (resolve, reject) {
    /* istanbul ignore next */
    cov_1xb4exinbi().f[3]++;
    function fulfilled(value) {
      /* istanbul ignore next */
      cov_1xb4exinbi().f[4]++;
      cov_1xb4exinbi().s[4]++;
      try {
        /* istanbul ignore next */
        cov_1xb4exinbi().s[5]++;
        step(generator.next(value));
      } catch (e) {
        /* istanbul ignore next */
        cov_1xb4exinbi().s[6]++;
        reject(e);
      }
    }
    function rejected(value) {
      /* istanbul ignore next */
      cov_1xb4exinbi().f[5]++;
      cov_1xb4exinbi().s[7]++;
      try {
        /* istanbul ignore next */
        cov_1xb4exinbi().s[8]++;
        step(generator["throw"](value));
      } catch (e) {
        /* istanbul ignore next */
        cov_1xb4exinbi().s[9]++;
        reject(e);
      }
    }
    function step(result) {
      /* istanbul ignore next */
      cov_1xb4exinbi().f[6]++;
      cov_1xb4exinbi().s[10]++;
      result.done ?
      /* istanbul ignore next */
      (cov_1xb4exinbi().b[3][0]++, resolve(result.value)) :
      /* istanbul ignore next */
      (cov_1xb4exinbi().b[3][1]++, adopt(result.value).then(fulfilled, rejected));
    }
    /* istanbul ignore next */
    cov_1xb4exinbi().s[11]++;
    step((generator = generator.apply(thisArg,
    /* istanbul ignore next */
    (cov_1xb4exinbi().b[4][0]++, _arguments) ||
    /* istanbul ignore next */
    (cov_1xb4exinbi().b[4][1]++, []))).next());
  });
}));
var __importDefault =
/* istanbul ignore next */
(cov_1xb4exinbi().s[12]++,
/* istanbul ignore next */
(cov_1xb4exinbi().b[5][0]++, this) &&
/* istanbul ignore next */
(cov_1xb4exinbi().b[5][1]++, this.__importDefault) ||
/* istanbul ignore next */
(cov_1xb4exinbi().b[5][2]++, function (mod) {
  /* istanbul ignore next */
  cov_1xb4exinbi().f[7]++;
  cov_1xb4exinbi().s[13]++;
  return /* istanbul ignore next */(cov_1xb4exinbi().b[7][0]++, mod) &&
  /* istanbul ignore next */
  (cov_1xb4exinbi().b[7][1]++, mod.__esModule) ?
  /* istanbul ignore next */
  (cov_1xb4exinbi().b[6][0]++, mod) :
  /* istanbul ignore next */
  (cov_1xb4exinbi().b[6][1]++, {
    "default": mod
  });
}));
/* istanbul ignore next */
cov_1xb4exinbi().s[14]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1xb4exinbi().s[15]++;
exports.verifyPassword = exports.hashPassword = void 0;
const bcrypt_1 =
/* istanbul ignore next */
(cov_1xb4exinbi().s[16]++, __importDefault(require("bcrypt")));
const SALT_ROUNDS =
/* istanbul ignore next */
(cov_1xb4exinbi().s[17]++, 10);
// Hash a password
/* istanbul ignore next */
cov_1xb4exinbi().s[18]++;
const hashPassword = password => {
  /* istanbul ignore next */
  cov_1xb4exinbi().f[8]++;
  cov_1xb4exinbi().s[19]++;
  return __awaiter(void 0, void 0, void 0, function* () {
    /* istanbul ignore next */
    cov_1xb4exinbi().f[9]++;
    cov_1xb4exinbi().s[20]++;
    return bcrypt_1.default.hash(password, SALT_ROUNDS);
  });
};
/* istanbul ignore next */
cov_1xb4exinbi().s[21]++;
exports.hashPassword = hashPassword;
// Verify a password against a hash
/* istanbul ignore next */
cov_1xb4exinbi().s[22]++;
const verifyPassword = (password, hashedPassword) => {
  /* istanbul ignore next */
  cov_1xb4exinbi().f[10]++;
  cov_1xb4exinbi().s[23]++;
  return __awaiter(void 0, void 0, void 0, function* () {
    /* istanbul ignore next */
    cov_1xb4exinbi().f[11]++;
    cov_1xb4exinbi().s[24]++;
    return bcrypt_1.default.compare(password, hashedPassword);
  });
};
/* istanbul ignore next */
cov_1xb4exinbi().s[25]++;
exports.verifyPassword = verifyPassword;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMXhiNGV4aW5iaSIsImFjdHVhbENvdmVyYWdlIiwiYmNyeXB0XzEiLCJzIiwiX19pbXBvcnREZWZhdWx0IiwicmVxdWlyZSIsIlNBTFRfUk9VTkRTIiwiaGFzaFBhc3N3b3JkIiwicGFzc3dvcmQiLCJmIiwiX19hd2FpdGVyIiwiZGVmYXVsdCIsImhhc2giLCJleHBvcnRzIiwidmVyaWZ5UGFzc3dvcmQiLCJoYXNoZWRQYXNzd29yZCIsImNvbXBhcmUiXSwic291cmNlcyI6WyIvVXNlcnMveXVzdWtleW9zaGlva2EvcHJvamVjdHMveW91dHViZS9haS1jaGF0L2FpLWNoYXQtYXBpL3NyYy91dGlscy9wYXNzd29yZC50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgYmNyeXB0IGZyb20gJ2JjcnlwdCc7XG5cbmNvbnN0IFNBTFRfUk9VTkRTID0gMTA7XG5cbi8vIEhhc2ggYSBwYXNzd29yZFxuZXhwb3J0IGNvbnN0IGhhc2hQYXNzd29yZCA9IGFzeW5jIChwYXNzd29yZDogc3RyaW5nKTogUHJvbWlzZTxzdHJpbmc+ID0+IHtcbiAgcmV0dXJuIGJjcnlwdC5oYXNoKHBhc3N3b3JkLCBTQUxUX1JPVU5EUyk7XG59O1xuXG4vLyBWZXJpZnkgYSBwYXNzd29yZCBhZ2FpbnN0IGEgaGFzaFxuZXhwb3J0IGNvbnN0IHZlcmlmeVBhc3N3b3JkID0gYXN5bmMgKFxuICBwYXNzd29yZDogc3RyaW5nLFxuICBoYXNoZWRQYXNzd29yZDogc3RyaW5nXG4pOiBQcm9taXNlPGJvb2xlYW4+ID0+IHtcbiAgcmV0dXJuIGJjcnlwdC5jb21wYXJlKHBhc3N3b3JkLCBoYXNoZWRQYXNzd29yZCk7XG59O1xuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7SUFBQTtJQUFBQSxjQUFBLFlBQUFBLENBQUE7TUFBQSxPQUFBQyxjQUFBO0lBQUE7RUFBQTtFQUFBLE9BQUFBLGNBQUE7QUFBQTtBQUFBRCxjQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBLE1BQUFFLFFBQUE7QUFBQTtBQUFBLENBQUFGLGNBQUEsR0FBQUcsQ0FBQSxRQUFBQyxlQUFBLENBQUFDLE9BQUE7QUFFQSxNQUFNQyxXQUFXO0FBQUE7QUFBQSxDQUFBTixjQUFBLEdBQUFHLENBQUEsUUFBRyxFQUFFO0FBRXRCO0FBQUE7QUFBQUgsY0FBQSxHQUFBRyxDQUFBO0FBQ08sTUFBTUksWUFBWSxHQUFVQyxRQUFnQixJQUFxQjtFQUFBO0VBQUFSLGNBQUEsR0FBQVMsQ0FBQTtFQUFBVCxjQUFBLEdBQUFHLENBQUE7RUFBQSxPQUFBTyxTQUFBO0lBQUE7SUFBQVYsY0FBQSxHQUFBUyxDQUFBO0lBQUFULGNBQUEsR0FBQUcsQ0FBQTtJQUN0RSxPQUFPRCxRQUFBLENBQUFTLE9BQU0sQ0FBQ0MsSUFBSSxDQUFDSixRQUFRLEVBQUVGLFdBQVcsQ0FBQztFQUMzQyxDQUFDO0FBQUE7QUFBQztBQUFBTixjQUFBLEdBQUFHLENBQUE7QUFGV1UsT0FBQSxDQUFBTixZQUFZLEdBQUFBLFlBQUE7QUFJekI7QUFBQTtBQUFBUCxjQUFBLEdBQUFHLENBQUE7QUFDTyxNQUFNVyxjQUFjLEdBQUdBLENBQzVCTixRQUFnQixFQUNoQk8sY0FBc0IsS0FDRjtFQUFBO0VBQUFmLGNBQUEsR0FBQVMsQ0FBQTtFQUFBVCxjQUFBLEdBQUFHLENBQUE7RUFBQSxPQUFBTyxTQUFBO0lBQUE7SUFBQVYsY0FBQSxHQUFBUyxDQUFBO0lBQUFULGNBQUEsR0FBQUcsQ0FBQTtJQUNwQixPQUFPRCxRQUFBLENBQUFTLE9BQU0sQ0FBQ0ssT0FBTyxDQUFDUixRQUFRLEVBQUVPLGNBQWMsQ0FBQztFQUNqRCxDQUFDO0FBQUE7QUFBQztBQUFBZixjQUFBLEdBQUFHLENBQUE7QUFMV1UsT0FBQSxDQUFBQyxjQUFjLEdBQUFBLGNBQUEiLCJpZ25vcmVMaXN0IjpbXX0=