2460cb663e1dd86e72370b6dcc9df6ee
"use strict";

/* istanbul ignore next */
function cov_2wc17ekoj() {
  var path = "/Users/yusukeyoshioka/projects/youtube/ai-chat/ai-chat-api/src/lib/prisma.ts";
  var hash = "25ee0696f355a03e47375a5d08978fcd80a918f9";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/yusukeyoshioka/projects/youtube/ai-chat/ai-chat-api/src/lib/prisma.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 24
        }
      },
      "2": {
        start: {
          line: 5,
          column: 17
        },
        end: {
          line: 5,
          column: 42
        }
      },
      "3": {
        start: {
          line: 9,
          column: 24
        },
        end: {
          line: 9,
          column: 30
        }
      },
      "4": {
        start: {
          line: 10,
          column: 0
        },
        end: {
          line: 10,
          column: 71
        }
      },
      "5": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 13,
          column: 1
        }
      },
      "6": {
        start: {
          line: 12,
          column: 4
        },
        end: {
          line: 12,
          column: 44
        }
      }
    },
    fnMap: {},
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 10,
            column: 17
          },
          end: {
            line: 10,
            column: 70
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 10,
            column: 17
          },
          end: {
            line: 10,
            column: 39
          }
        }, {
          start: {
            line: 10,
            column: 43
          },
          end: {
            line: 10,
            column: 70
          }
        }],
        line: 10
      },
      "1": {
        loc: {
          start: {
            line: 11,
            column: 0
          },
          end: {
            line: 13,
            column: 1
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 11,
            column: 0
          },
          end: {
            line: 13,
            column: 1
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 11
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0
    },
    f: {},
    b: {
      "0": [0, 0],
      "1": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/yusukeyoshioka/projects/youtube/ai-chat/ai-chat-api/src/lib/prisma.ts",
      mappings: ";;;AAAA,oBAAoB;AACpB,2CAA8C,CAAC,iBAAiB;AAEhE,4EAA4E;AAC5E,6CAA6C;AAC7C,4DAA4D;AAE5D,MAAM,eAAe,GAAG,MAEvB,CAAC;AAEW,QAAA,MAAM,GAAG,eAAe,CAAC,MAAM,IAAI,IAAI,qBAAY,EAAE,CAAC;AAEnE,IAAI,OAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,YAAY,EAAE,CAAC;IAC1C,eAAe,CAAC,MAAM,GAAG,cAAM,CAAC;AAClC,CAAC",
      names: [],
      sources: ["/Users/yusukeyoshioka/projects/youtube/ai-chat/ai-chat-api/src/lib/prisma.ts"],
      sourcesContent: ["// src/lib/prisma.ts\nimport { PrismaClient } from '@prisma/client'; // \u2705 \u6A19\u6E96\u7684\u306A\u30A4\u30F3\u30DD\u30FC\u30C8\u306B\u5909\u66F4\n\n// PrismaClient is attached to the `global` object in development to prevent\n// exhausting your database connection limit.\n// Learn more: https://pris.ly/d/help/next-js-best-practices\n\nconst globalForPrisma = global as unknown as {\n  prisma: PrismaClient | undefined;\n};\n\nexport const prisma = globalForPrisma.prisma || new PrismaClient();\n\nif (process.env.NODE_ENV !== 'production') {\n  globalForPrisma.prisma = prisma;\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "25ee0696f355a03e47375a5d08978fcd80a918f9"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2wc17ekoj = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2wc17ekoj();
cov_2wc17ekoj().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_2wc17ekoj().s[1]++;
exports.prisma = void 0;
// src/lib/prisma.ts
const client_1 =
/* istanbul ignore next */
(cov_2wc17ekoj().s[2]++, require("@prisma/client")); // ✅ 標準的なインポートに変更
// PrismaClient is attached to the `global` object in development to prevent
// exhausting your database connection limit.
// Learn more: https://pris.ly/d/help/next-js-best-practices
const globalForPrisma =
/* istanbul ignore next */
(cov_2wc17ekoj().s[3]++, global);
/* istanbul ignore next */
cov_2wc17ekoj().s[4]++;
exports.prisma =
/* istanbul ignore next */
(cov_2wc17ekoj().b[0][0]++, globalForPrisma.prisma) ||
/* istanbul ignore next */
(cov_2wc17ekoj().b[0][1]++, new client_1.PrismaClient());
/* istanbul ignore next */
cov_2wc17ekoj().s[5]++;
if (process.env.NODE_ENV !== 'production') {
  /* istanbul ignore next */
  cov_2wc17ekoj().b[1][0]++;
  cov_2wc17ekoj().s[6]++;
  globalForPrisma.prisma = exports.prisma;
} else
/* istanbul ignore next */
{
  cov_2wc17ekoj().b[1][1]++;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjbGllbnRfMSIsImNvdl8yd2MxN2Vrb2oiLCJzIiwicmVxdWlyZSIsImdsb2JhbEZvclByaXNtYSIsImdsb2JhbCIsImV4cG9ydHMiLCJwcmlzbWEiLCJiIiwiUHJpc21hQ2xpZW50IiwicHJvY2VzcyIsImVudiIsIk5PREVfRU5WIl0sInNvdXJjZXMiOlsiL1VzZXJzL3l1c3VrZXlvc2hpb2thL3Byb2plY3RzL3lvdXR1YmUvYWktY2hhdC9haS1jaGF0LWFwaS9zcmMvbGliL3ByaXNtYS50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBzcmMvbGliL3ByaXNtYS50c1xuaW1wb3J0IHsgUHJpc21hQ2xpZW50IH0gZnJvbSAnQHByaXNtYS9jbGllbnQnOyAvLyDinIUg5qiZ5rqW55qE44Gq44Kk44Oz44Od44O844OI44Gr5aSJ5pu0XG5cbi8vIFByaXNtYUNsaWVudCBpcyBhdHRhY2hlZCB0byB0aGUgYGdsb2JhbGAgb2JqZWN0IGluIGRldmVsb3BtZW50IHRvIHByZXZlbnRcbi8vIGV4aGF1c3RpbmcgeW91ciBkYXRhYmFzZSBjb25uZWN0aW9uIGxpbWl0LlxuLy8gTGVhcm4gbW9yZTogaHR0cHM6Ly9wcmlzLmx5L2QvaGVscC9uZXh0LWpzLWJlc3QtcHJhY3RpY2VzXG5cbmNvbnN0IGdsb2JhbEZvclByaXNtYSA9IGdsb2JhbCBhcyB1bmtub3duIGFzIHtcbiAgcHJpc21hOiBQcmlzbWFDbGllbnQgfCB1bmRlZmluZWQ7XG59O1xuXG5leHBvcnQgY29uc3QgcHJpc21hID0gZ2xvYmFsRm9yUHJpc21hLnByaXNtYSB8fCBuZXcgUHJpc21hQ2xpZW50KCk7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIGdsb2JhbEZvclByaXNtYS5wcmlzbWEgPSBwcmlzbWE7XG59XG4iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7QUFDQSxNQUFBQSxRQUFBO0FBQUE7QUFBQSxDQUFBQyxhQUFBLEdBQUFDLENBQUEsT0FBQUMsT0FBQSxvQkFBOEMsQ0FBQztBQUUvQztBQUNBO0FBQ0E7QUFFQSxNQUFNQyxlQUFlO0FBQUE7QUFBQSxDQUFBSCxhQUFBLEdBQUFDLENBQUEsT0FBR0csTUFFdkI7QUFBQztBQUFBSixhQUFBLEdBQUFDLENBQUE7QUFFV0ksT0FBQSxDQUFBQyxNQUFNO0FBQUc7QUFBQSxDQUFBTixhQUFBLEdBQUFPLENBQUEsVUFBQUosZUFBZSxDQUFDRyxNQUFNO0FBQUE7QUFBQSxDQUFBTixhQUFBLEdBQUFPLENBQUEsVUFBSSxJQUFJUixRQUFBLENBQUFTLFlBQVksRUFBRTtBQUFDO0FBQUFSLGFBQUEsR0FBQUMsQ0FBQTtBQUVuRSxJQUFJUSxPQUFPLENBQUNDLEdBQUcsQ0FBQ0MsUUFBUSxLQUFLLFlBQVksRUFBRTtFQUFBO0VBQUFYLGFBQUEsR0FBQU8sQ0FBQTtFQUFBUCxhQUFBLEdBQUFDLENBQUE7RUFDekNFLGVBQWUsQ0FBQ0csTUFBTSxHQUFHRCxPQUFBLENBQUFDLE1BQU07QUFDakMsQ0FBQztBQUFBO0FBQUE7RUFBQU4sYUFBQSxHQUFBTyxDQUFBO0FBQUEiLCJpZ25vcmVMaXN0IjpbXX0=