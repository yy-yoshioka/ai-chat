{"version":3,"names":["cov_1s4ro3jz52","actualCoverage","ioredis_1","s","__importDefault","require","RateLimiter","constructor","f","redis","memoryStore","Map","process","env","REDIS_URL","b","default","maxRetriesPerRequest","lazyConnect","on","console","log","error","warn","message","incrementAndCheck","options","widgetId","limit","period","key","now","Math","floor","Date","resetTime","incrementRedis","incrementMemory","multi","incr","expire","results","exec","count","_a","allowed","existing","get","delete","current","has","set","disconnect","exports","rateLimiter"],"sources":["/Users/yusukeyoshioka/projects/youtube/ai-chat/ai-chat-api/src/utils/rateLimiter.ts"],"sourcesContent":["import Redis from 'ioredis';\n\ninterface RateLimitOptions {\n  widgetId: string;\n  limit: number;\n  period: number; // in seconds\n}\n\ninterface RateLimitResult {\n  allowed: boolean;\n  count: number;\n  resetTime: number;\n}\n\nclass RateLimiter {\n  private redis: Redis | null = null;\n  private memoryStore: Map<string, { count: number; resetTime: number }> =\n    new Map();\n\n  constructor() {\n    // Only try to connect to Redis if URL is provided\n    if (process.env.REDIS_URL) {\n      try {\n        this.redis = new Redis(process.env.REDIS_URL, {\n          maxRetriesPerRequest: 3,\n          lazyConnect: true, // Don't connect immediately\n        });\n\n        this.redis.on('connect', () => {\n          console.log('✅ Connected to Redis for rate limiting');\n        });\n\n        this.redis.on('error', (error) => {\n          console.warn(\n            '⚠️ Redis connection error, falling back to memory store:',\n            error.message\n          );\n          this.redis = null; // Fallback to memory store\n        });\n      } catch (error) {\n        console.warn(\n          '⚠️ Failed to initialize Redis, using in-memory store:',\n          error\n        );\n        this.redis = null;\n      }\n    } else {\n      console.log('ℹ️ No Redis URL provided, using in-memory rate limiter');\n    }\n  }\n\n  async incrementAndCheck(options: RateLimitOptions): Promise<RateLimitResult> {\n    const { widgetId, limit, period } = options;\n    const key = `rate_limit:${widgetId}`;\n    const now = Math.floor(Date.now() / 1000);\n    const resetTime = now + period;\n\n    if (this.redis) {\n      return this.incrementRedis(key, limit, period, resetTime);\n    } else {\n      return this.incrementMemory(key, limit, period, resetTime);\n    }\n  }\n\n  private async incrementRedis(\n    key: string,\n    limit: number,\n    period: number,\n    resetTime: number\n  ): Promise<RateLimitResult> {\n    const multi = this.redis!.multi();\n    multi.incr(key);\n    multi.expire(key, period);\n\n    const results = await multi.exec();\n    const count = (results?.[0]?.[1] as number) || 0;\n\n    return {\n      allowed: count <= limit,\n      count,\n      resetTime,\n    };\n  }\n\n  private incrementMemory(\n    key: string,\n    limit: number,\n    period: number,\n    resetTime: number\n  ): RateLimitResult {\n    const now = Math.floor(Date.now() / 1000);\n    const existing = this.memoryStore.get(key);\n\n    // Clean up expired entries\n    if (existing && existing.resetTime <= now) {\n      this.memoryStore.delete(key);\n    }\n\n    const current = this.memoryStore.get(key) || { count: 0, resetTime };\n    current.count += 1;\n\n    if (!this.memoryStore.has(key)) {\n      current.resetTime = resetTime;\n    }\n\n    this.memoryStore.set(key, current);\n\n    return {\n      allowed: current.count <= limit,\n      count: current.count,\n      resetTime: current.resetTime,\n    };\n  }\n\n  async disconnect(): Promise<void> {\n    if (this.redis) {\n      await this.redis.disconnect();\n    }\n  }\n}\n\n// Export singleton instance\nexport const rateLimiter = new RateLimiter();\nexport { RateLimitOptions, RateLimitResult };\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;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","ignoreList":[]}