bc7127b98cab740d55f5caa570997081
"use strict";

/* istanbul ignore next */
function cov_1s4ro3jz52() {
  var path = "/Users/yusukeyoshioka/projects/youtube/ai-chat/ai-chat-api/src/utils/rateLimiter.ts";
  var hash = "ce5900236292f2622316aca692b7fea9ae972495";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/yusukeyoshioka/projects/youtube/ai-chat/ai-chat-api/src/utils/rateLimiter.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 16
        },
        end: {
          line: 10,
          column: 1
        }
      },
      "1": {
        start: {
          line: 3,
          column: 28
        },
        end: {
          line: 3,
          column: 110
        }
      },
      "2": {
        start: {
          line: 3,
          column: 91
        },
        end: {
          line: 3,
          column: 106
        }
      },
      "3": {
        start: {
          line: 4,
          column: 4
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "4": {
        start: {
          line: 5,
          column: 36
        },
        end: {
          line: 5,
          column: 97
        }
      },
      "5": {
        start: {
          line: 5,
          column: 42
        },
        end: {
          line: 5,
          column: 70
        }
      },
      "6": {
        start: {
          line: 5,
          column: 85
        },
        end: {
          line: 5,
          column: 95
        }
      },
      "7": {
        start: {
          line: 6,
          column: 35
        },
        end: {
          line: 6,
          column: 100
        }
      },
      "8": {
        start: {
          line: 6,
          column: 41
        },
        end: {
          line: 6,
          column: 73
        }
      },
      "9": {
        start: {
          line: 6,
          column: 88
        },
        end: {
          line: 6,
          column: 98
        }
      },
      "10": {
        start: {
          line: 7,
          column: 32
        },
        end: {
          line: 7,
          column: 116
        }
      },
      "11": {
        start: {
          line: 8,
          column: 8
        },
        end: {
          line: 8,
          column: 78
        }
      },
      "12": {
        start: {
          line: 11,
          column: 22
        },
        end: {
          line: 13,
          column: 1
        }
      },
      "13": {
        start: {
          line: 12,
          column: 4
        },
        end: {
          line: 12,
          column: 62
        }
      },
      "14": {
        start: {
          line: 14,
          column: 0
        },
        end: {
          line: 14,
          column: 62
        }
      },
      "15": {
        start: {
          line: 15,
          column: 0
        },
        end: {
          line: 15,
          column: 29
        }
      },
      "16": {
        start: {
          line: 16,
          column: 18
        },
        end: {
          line: 16,
          column: 53
        }
      },
      "17": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 19,
          column: 26
        }
      },
      "18": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 37
        }
      },
      "19": {
        start: {
          line: 22,
          column: 8
        },
        end: {
          line: 43,
          column: 9
        }
      },
      "20": {
        start: {
          line: 23,
          column: 12
        },
        end: {
          line: 39,
          column: 13
        }
      },
      "21": {
        start: {
          line: 24,
          column: 16
        },
        end: {
          line: 27,
          column: 19
        }
      },
      "22": {
        start: {
          line: 28,
          column: 16
        },
        end: {
          line: 30,
          column: 19
        }
      },
      "23": {
        start: {
          line: 29,
          column: 20
        },
        end: {
          line: 29,
          column: 74
        }
      },
      "24": {
        start: {
          line: 31,
          column: 16
        },
        end: {
          line: 34,
          column: 19
        }
      },
      "25": {
        start: {
          line: 32,
          column: 20
        },
        end: {
          line: 32,
          column: 108
        }
      },
      "26": {
        start: {
          line: 33,
          column: 20
        },
        end: {
          line: 33,
          column: 38
        }
      },
      "27": {
        start: {
          line: 37,
          column: 16
        },
        end: {
          line: 37,
          column: 93
        }
      },
      "28": {
        start: {
          line: 38,
          column: 16
        },
        end: {
          line: 38,
          column: 34
        }
      },
      "29": {
        start: {
          line: 42,
          column: 12
        },
        end: {
          line: 42,
          column: 82
        }
      },
      "30": {
        start: {
          line: 46,
          column: 8
        },
        end: {
          line: 57,
          column: 11
        }
      },
      "31": {
        start: {
          line: 47,
          column: 48
        },
        end: {
          line: 47,
          column: 55
        }
      },
      "32": {
        start: {
          line: 48,
          column: 24
        },
        end: {
          line: 48,
          column: 48
        }
      },
      "33": {
        start: {
          line: 49,
          column: 24
        },
        end: {
          line: 49,
          column: 53
        }
      },
      "34": {
        start: {
          line: 50,
          column: 30
        },
        end: {
          line: 50,
          column: 42
        }
      },
      "35": {
        start: {
          line: 51,
          column: 12
        },
        end: {
          line: 56,
          column: 13
        }
      },
      "36": {
        start: {
          line: 52,
          column: 16
        },
        end: {
          line: 52,
          column: 74
        }
      },
      "37": {
        start: {
          line: 55,
          column: 16
        },
        end: {
          line: 55,
          column: 75
        }
      },
      "38": {
        start: {
          line: 61,
          column: 8
        },
        end: {
          line: 72,
          column: 11
        }
      },
      "39": {
        start: {
          line: 62,
          column: 26
        },
        end: {
          line: 62,
          column: 44
        }
      },
      "40": {
        start: {
          line: 63,
          column: 12
        },
        end: {
          line: 63,
          column: 28
        }
      },
      "41": {
        start: {
          line: 64,
          column: 12
        },
        end: {
          line: 64,
          column: 38
        }
      },
      "42": {
        start: {
          line: 65,
          column: 28
        },
        end: {
          line: 65,
          column: 46
        }
      },
      "43": {
        start: {
          line: 66,
          column: 26
        },
        end: {
          line: 66,
          column: 143
        }
      },
      "44": {
        start: {
          line: 67,
          column: 12
        },
        end: {
          line: 71,
          column: 14
        }
      },
      "45": {
        start: {
          line: 75,
          column: 20
        },
        end: {
          line: 75,
          column: 49
        }
      },
      "46": {
        start: {
          line: 76,
          column: 25
        },
        end: {
          line: 76,
          column: 50
        }
      },
      "47": {
        start: {
          line: 78,
          column: 8
        },
        end: {
          line: 80,
          column: 9
        }
      },
      "48": {
        start: {
          line: 79,
          column: 12
        },
        end: {
          line: 79,
          column: 41
        }
      },
      "49": {
        start: {
          line: 81,
          column: 24
        },
        end: {
          line: 81,
          column: 76
        }
      },
      "50": {
        start: {
          line: 82,
          column: 8
        },
        end: {
          line: 82,
          column: 27
        }
      },
      "51": {
        start: {
          line: 83,
          column: 8
        },
        end: {
          line: 85,
          column: 9
        }
      },
      "52": {
        start: {
          line: 84,
          column: 12
        },
        end: {
          line: 84,
          column: 42
        }
      },
      "53": {
        start: {
          line: 86,
          column: 8
        },
        end: {
          line: 86,
          column: 43
        }
      },
      "54": {
        start: {
          line: 87,
          column: 8
        },
        end: {
          line: 91,
          column: 10
        }
      },
      "55": {
        start: {
          line: 94,
          column: 8
        },
        end: {
          line: 98,
          column: 11
        }
      },
      "56": {
        start: {
          line: 95,
          column: 12
        },
        end: {
          line: 97,
          column: 13
        }
      },
      "57": {
        start: {
          line: 96,
          column: 16
        },
        end: {
          line: 96,
          column: 46
        }
      },
      "58": {
        start: {
          line: 102,
          column: 0
        },
        end: {
          line: 102,
          column: 40
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 44
          },
          end: {
            line: 2,
            column: 45
          }
        },
        loc: {
          start: {
            line: 2,
            column: 89
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "adopt",
        decl: {
          start: {
            line: 3,
            column: 13
          },
          end: {
            line: 3,
            column: 18
          }
        },
        loc: {
          start: {
            line: 3,
            column: 26
          },
          end: {
            line: 3,
            column: 112
          }
        },
        line: 3
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 3,
            column: 70
          },
          end: {
            line: 3,
            column: 71
          }
        },
        loc: {
          start: {
            line: 3,
            column: 89
          },
          end: {
            line: 3,
            column: 108
          }
        },
        line: 3
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 4,
            column: 36
          },
          end: {
            line: 4,
            column: 37
          }
        },
        loc: {
          start: {
            line: 4,
            column: 63
          },
          end: {
            line: 9,
            column: 5
          }
        },
        line: 4
      },
      "4": {
        name: "fulfilled",
        decl: {
          start: {
            line: 5,
            column: 17
          },
          end: {
            line: 5,
            column: 26
          }
        },
        loc: {
          start: {
            line: 5,
            column: 34
          },
          end: {
            line: 5,
            column: 99
          }
        },
        line: 5
      },
      "5": {
        name: "rejected",
        decl: {
          start: {
            line: 6,
            column: 17
          },
          end: {
            line: 6,
            column: 25
          }
        },
        loc: {
          start: {
            line: 6,
            column: 33
          },
          end: {
            line: 6,
            column: 102
          }
        },
        line: 6
      },
      "6": {
        name: "step",
        decl: {
          start: {
            line: 7,
            column: 17
          },
          end: {
            line: 7,
            column: 21
          }
        },
        loc: {
          start: {
            line: 7,
            column: 30
          },
          end: {
            line: 7,
            column: 118
          }
        },
        line: 7
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 11,
            column: 56
          },
          end: {
            line: 11,
            column: 57
          }
        },
        loc: {
          start: {
            line: 11,
            column: 71
          },
          end: {
            line: 13,
            column: 1
          }
        },
        line: 11
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 18,
            column: 4
          },
          end: {
            line: 18,
            column: 5
          }
        },
        loc: {
          start: {
            line: 18,
            column: 18
          },
          end: {
            line: 44,
            column: 5
          }
        },
        line: 18
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 28,
            column: 41
          },
          end: {
            line: 28,
            column: 42
          }
        },
        loc: {
          start: {
            line: 28,
            column: 47
          },
          end: {
            line: 30,
            column: 17
          }
        },
        line: 28
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 31,
            column: 39
          },
          end: {
            line: 31,
            column: 40
          }
        },
        loc: {
          start: {
            line: 31,
            column: 50
          },
          end: {
            line: 34,
            column: 17
          }
        },
        line: 31
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 45,
            column: 4
          },
          end: {
            line: 45,
            column: 5
          }
        },
        loc: {
          start: {
            line: 45,
            column: 31
          },
          end: {
            line: 58,
            column: 5
          }
        },
        line: 45
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 46,
            column: 47
          },
          end: {
            line: 46,
            column: 48
          }
        },
        loc: {
          start: {
            line: 46,
            column: 60
          },
          end: {
            line: 57,
            column: 9
          }
        },
        line: 46
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 59,
            column: 4
          },
          end: {
            line: 59,
            column: 5
          }
        },
        loc: {
          start: {
            line: 59,
            column: 50
          },
          end: {
            line: 73,
            column: 5
          }
        },
        line: 59
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 61,
            column: 47
          },
          end: {
            line: 61,
            column: 48
          }
        },
        loc: {
          start: {
            line: 61,
            column: 60
          },
          end: {
            line: 72,
            column: 9
          }
        },
        line: 61
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 74,
            column: 4
          },
          end: {
            line: 74,
            column: 5
          }
        },
        loc: {
          start: {
            line: 74,
            column: 51
          },
          end: {
            line: 92,
            column: 5
          }
        },
        line: 74
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 93,
            column: 4
          },
          end: {
            line: 93,
            column: 5
          }
        },
        loc: {
          start: {
            line: 93,
            column: 17
          },
          end: {
            line: 99,
            column: 5
          }
        },
        line: 93
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 94,
            column: 47
          },
          end: {
            line: 94,
            column: 48
          }
        },
        loc: {
          start: {
            line: 94,
            column: 60
          },
          end: {
            line: 98,
            column: 9
          }
        },
        line: 94
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 16
          },
          end: {
            line: 10,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 17
          },
          end: {
            line: 2,
            column: 21
          }
        }, {
          start: {
            line: 2,
            column: 25
          },
          end: {
            line: 2,
            column: 39
          }
        }, {
          start: {
            line: 2,
            column: 44
          },
          end: {
            line: 10,
            column: 1
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 3,
            column: 35
          },
          end: {
            line: 3,
            column: 109
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 3,
            column: 56
          },
          end: {
            line: 3,
            column: 61
          }
        }, {
          start: {
            line: 3,
            column: 64
          },
          end: {
            line: 3,
            column: 109
          }
        }],
        line: 3
      },
      "2": {
        loc: {
          start: {
            line: 4,
            column: 16
          },
          end: {
            line: 4,
            column: 34
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 4,
            column: 16
          },
          end: {
            line: 4,
            column: 17
          }
        }, {
          start: {
            line: 4,
            column: 22
          },
          end: {
            line: 4,
            column: 33
          }
        }],
        line: 4
      },
      "3": {
        loc: {
          start: {
            line: 7,
            column: 32
          },
          end: {
            line: 7,
            column: 115
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 7,
            column: 46
          },
          end: {
            line: 7,
            column: 67
          }
        }, {
          start: {
            line: 7,
            column: 70
          },
          end: {
            line: 7,
            column: 115
          }
        }],
        line: 7
      },
      "4": {
        loc: {
          start: {
            line: 8,
            column: 51
          },
          end: {
            line: 8,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 8,
            column: 51
          },
          end: {
            line: 8,
            column: 61
          }
        }, {
          start: {
            line: 8,
            column: 65
          },
          end: {
            line: 8,
            column: 67
          }
        }],
        line: 8
      },
      "5": {
        loc: {
          start: {
            line: 11,
            column: 22
          },
          end: {
            line: 13,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 11,
            column: 23
          },
          end: {
            line: 11,
            column: 27
          }
        }, {
          start: {
            line: 11,
            column: 31
          },
          end: {
            line: 11,
            column: 51
          }
        }, {
          start: {
            line: 11,
            column: 56
          },
          end: {
            line: 13,
            column: 1
          }
        }],
        line: 11
      },
      "6": {
        loc: {
          start: {
            line: 12,
            column: 11
          },
          end: {
            line: 12,
            column: 61
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 12,
            column: 37
          },
          end: {
            line: 12,
            column: 40
          }
        }, {
          start: {
            line: 12,
            column: 43
          },
          end: {
            line: 12,
            column: 61
          }
        }],
        line: 12
      },
      "7": {
        loc: {
          start: {
            line: 12,
            column: 12
          },
          end: {
            line: 12,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 12,
            column: 12
          },
          end: {
            line: 12,
            column: 15
          }
        }, {
          start: {
            line: 12,
            column: 19
          },
          end: {
            line: 12,
            column: 33
          }
        }],
        line: 12
      },
      "8": {
        loc: {
          start: {
            line: 22,
            column: 8
          },
          end: {
            line: 43,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 22,
            column: 8
          },
          end: {
            line: 43,
            column: 9
          }
        }, {
          start: {
            line: 41,
            column: 13
          },
          end: {
            line: 43,
            column: 9
          }
        }],
        line: 22
      },
      "9": {
        loc: {
          start: {
            line: 51,
            column: 12
          },
          end: {
            line: 56,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 51,
            column: 12
          },
          end: {
            line: 56,
            column: 13
          }
        }, {
          start: {
            line: 54,
            column: 17
          },
          end: {
            line: 56,
            column: 13
          }
        }],
        line: 51
      },
      "10": {
        loc: {
          start: {
            line: 66,
            column: 26
          },
          end: {
            line: 66,
            column: 143
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 66,
            column: 27
          },
          end: {
            line: 66,
            column: 137
          }
        }, {
          start: {
            line: 66,
            column: 142
          },
          end: {
            line: 66,
            column: 143
          }
        }],
        line: 66
      },
      "11": {
        loc: {
          start: {
            line: 66,
            column: 27
          },
          end: {
            line: 66,
            column: 137
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 66,
            column: 123
          },
          end: {
            line: 66,
            column: 129
          }
        }, {
          start: {
            line: 66,
            column: 132
          },
          end: {
            line: 66,
            column: 137
          }
        }],
        line: 66
      },
      "12": {
        loc: {
          start: {
            line: 66,
            column: 27
          },
          end: {
            line: 66,
            column: 120
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 66,
            column: 27
          },
          end: {
            line: 66,
            column: 103
          }
        }, {
          start: {
            line: 66,
            column: 107
          },
          end: {
            line: 66,
            column: 120
          }
        }],
        line: 66
      },
      "13": {
        loc: {
          start: {
            line: 66,
            column: 33
          },
          end: {
            line: 66,
            column: 93
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 66,
            column: 74
          },
          end: {
            line: 66,
            column: 80
          }
        }, {
          start: {
            line: 66,
            column: 83
          },
          end: {
            line: 66,
            column: 93
          }
        }],
        line: 66
      },
      "14": {
        loc: {
          start: {
            line: 66,
            column: 33
          },
          end: {
            line: 66,
            column: 71
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 66,
            column: 33
          },
          end: {
            line: 66,
            column: 49
          }
        }, {
          start: {
            line: 66,
            column: 53
          },
          end: {
            line: 66,
            column: 71
          }
        }],
        line: 66
      },
      "15": {
        loc: {
          start: {
            line: 78,
            column: 8
          },
          end: {
            line: 80,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 78,
            column: 8
          },
          end: {
            line: 80,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 78
      },
      "16": {
        loc: {
          start: {
            line: 78,
            column: 12
          },
          end: {
            line: 78,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 78,
            column: 12
          },
          end: {
            line: 78,
            column: 20
          }
        }, {
          start: {
            line: 78,
            column: 24
          },
          end: {
            line: 78,
            column: 49
          }
        }],
        line: 78
      },
      "17": {
        loc: {
          start: {
            line: 81,
            column: 24
          },
          end: {
            line: 81,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 81,
            column: 24
          },
          end: {
            line: 81,
            column: 49
          }
        }, {
          start: {
            line: 81,
            column: 53
          },
          end: {
            line: 81,
            column: 76
          }
        }],
        line: 81
      },
      "18": {
        loc: {
          start: {
            line: 83,
            column: 8
          },
          end: {
            line: 85,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 83,
            column: 8
          },
          end: {
            line: 85,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 83
      },
      "19": {
        loc: {
          start: {
            line: 95,
            column: 12
          },
          end: {
            line: 97,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 95,
            column: 12
          },
          end: {
            line: 97,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 95
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/yusukeyoshioka/projects/youtube/ai-chat/ai-chat-api/src/utils/rateLimiter.ts",
      mappings: "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",
      names: [],
      sources: ["/Users/yusukeyoshioka/projects/youtube/ai-chat/ai-chat-api/src/utils/rateLimiter.ts"],
      sourcesContent: ["import Redis from 'ioredis';\n\ninterface RateLimitOptions {\n  widgetId: string;\n  limit: number;\n  period: number; // in seconds\n}\n\ninterface RateLimitResult {\n  allowed: boolean;\n  count: number;\n  resetTime: number;\n}\n\nclass RateLimiter {\n  private redis: Redis | null = null;\n  private memoryStore: Map<string, { count: number; resetTime: number }> =\n    new Map();\n\n  constructor() {\n    // Only try to connect to Redis if URL is provided\n    if (process.env.REDIS_URL) {\n      try {\n        this.redis = new Redis(process.env.REDIS_URL, {\n          maxRetriesPerRequest: 3,\n          lazyConnect: true, // Don't connect immediately\n        });\n\n        this.redis.on('connect', () => {\n          console.log('\u2705 Connected to Redis for rate limiting');\n        });\n\n        this.redis.on('error', (error) => {\n          console.warn(\n            '\u26A0\uFE0F Redis connection error, falling back to memory store:',\n            error.message\n          );\n          this.redis = null; // Fallback to memory store\n        });\n      } catch (error) {\n        console.warn(\n          '\u26A0\uFE0F Failed to initialize Redis, using in-memory store:',\n          error\n        );\n        this.redis = null;\n      }\n    } else {\n      console.log('\u2139\uFE0F No Redis URL provided, using in-memory rate limiter');\n    }\n  }\n\n  async incrementAndCheck(options: RateLimitOptions): Promise<RateLimitResult> {\n    const { widgetId, limit, period } = options;\n    const key = `rate_limit:${widgetId}`;\n    const now = Math.floor(Date.now() / 1000);\n    const resetTime = now + period;\n\n    if (this.redis) {\n      return this.incrementRedis(key, limit, period, resetTime);\n    } else {\n      return this.incrementMemory(key, limit, period, resetTime);\n    }\n  }\n\n  private async incrementRedis(\n    key: string,\n    limit: number,\n    period: number,\n    resetTime: number\n  ): Promise<RateLimitResult> {\n    const multi = this.redis!.multi();\n    multi.incr(key);\n    multi.expire(key, period);\n\n    const results = await multi.exec();\n    const count = (results?.[0]?.[1] as number) || 0;\n\n    return {\n      allowed: count <= limit,\n      count,\n      resetTime,\n    };\n  }\n\n  private incrementMemory(\n    key: string,\n    limit: number,\n    period: number,\n    resetTime: number\n  ): RateLimitResult {\n    const now = Math.floor(Date.now() / 1000);\n    const existing = this.memoryStore.get(key);\n\n    // Clean up expired entries\n    if (existing && existing.resetTime <= now) {\n      this.memoryStore.delete(key);\n    }\n\n    const current = this.memoryStore.get(key) || { count: 0, resetTime };\n    current.count += 1;\n\n    if (!this.memoryStore.has(key)) {\n      current.resetTime = resetTime;\n    }\n\n    this.memoryStore.set(key, current);\n\n    return {\n      allowed: current.count <= limit,\n      count: current.count,\n      resetTime: current.resetTime,\n    };\n  }\n\n  async disconnect(): Promise<void> {\n    if (this.redis) {\n      await this.redis.disconnect();\n    }\n  }\n}\n\n// Export singleton instance\nexport const rateLimiter = new RateLimiter();\nexport { RateLimitOptions, RateLimitResult };\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "ce5900236292f2622316aca692b7fea9ae972495"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1s4ro3jz52 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1s4ro3jz52();
var __awaiter =
/* istanbul ignore next */
(cov_1s4ro3jz52().s[0]++,
/* istanbul ignore next */
(cov_1s4ro3jz52().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_1s4ro3jz52().b[0][1]++, this.__awaiter) ||
/* istanbul ignore next */
(cov_1s4ro3jz52().b[0][2]++, function (thisArg, _arguments, P, generator) {
  /* istanbul ignore next */
  cov_1s4ro3jz52().f[0]++;
  function adopt(value) {
    /* istanbul ignore next */
    cov_1s4ro3jz52().f[1]++;
    cov_1s4ro3jz52().s[1]++;
    return value instanceof P ?
    /* istanbul ignore next */
    (cov_1s4ro3jz52().b[1][0]++, value) :
    /* istanbul ignore next */
    (cov_1s4ro3jz52().b[1][1]++, new P(function (resolve) {
      /* istanbul ignore next */
      cov_1s4ro3jz52().f[2]++;
      cov_1s4ro3jz52().s[2]++;
      resolve(value);
    }));
  }
  /* istanbul ignore next */
  cov_1s4ro3jz52().s[3]++;
  return new (
  /* istanbul ignore next */
  (cov_1s4ro3jz52().b[2][0]++, P) ||
  /* istanbul ignore next */
  (cov_1s4ro3jz52().b[2][1]++, P = Promise))(function (resolve, reject) {
    /* istanbul ignore next */
    cov_1s4ro3jz52().f[3]++;
    function fulfilled(value) {
      /* istanbul ignore next */
      cov_1s4ro3jz52().f[4]++;
      cov_1s4ro3jz52().s[4]++;
      try {
        /* istanbul ignore next */
        cov_1s4ro3jz52().s[5]++;
        step(generator.next(value));
      } catch (e) {
        /* istanbul ignore next */
        cov_1s4ro3jz52().s[6]++;
        reject(e);
      }
    }
    function rejected(value) {
      /* istanbul ignore next */
      cov_1s4ro3jz52().f[5]++;
      cov_1s4ro3jz52().s[7]++;
      try {
        /* istanbul ignore next */
        cov_1s4ro3jz52().s[8]++;
        step(generator["throw"](value));
      } catch (e) {
        /* istanbul ignore next */
        cov_1s4ro3jz52().s[9]++;
        reject(e);
      }
    }
    function step(result) {
      /* istanbul ignore next */
      cov_1s4ro3jz52().f[6]++;
      cov_1s4ro3jz52().s[10]++;
      result.done ?
      /* istanbul ignore next */
      (cov_1s4ro3jz52().b[3][0]++, resolve(result.value)) :
      /* istanbul ignore next */
      (cov_1s4ro3jz52().b[3][1]++, adopt(result.value).then(fulfilled, rejected));
    }
    /* istanbul ignore next */
    cov_1s4ro3jz52().s[11]++;
    step((generator = generator.apply(thisArg,
    /* istanbul ignore next */
    (cov_1s4ro3jz52().b[4][0]++, _arguments) ||
    /* istanbul ignore next */
    (cov_1s4ro3jz52().b[4][1]++, []))).next());
  });
}));
var __importDefault =
/* istanbul ignore next */
(cov_1s4ro3jz52().s[12]++,
/* istanbul ignore next */
(cov_1s4ro3jz52().b[5][0]++, this) &&
/* istanbul ignore next */
(cov_1s4ro3jz52().b[5][1]++, this.__importDefault) ||
/* istanbul ignore next */
(cov_1s4ro3jz52().b[5][2]++, function (mod) {
  /* istanbul ignore next */
  cov_1s4ro3jz52().f[7]++;
  cov_1s4ro3jz52().s[13]++;
  return /* istanbul ignore next */(cov_1s4ro3jz52().b[7][0]++, mod) &&
  /* istanbul ignore next */
  (cov_1s4ro3jz52().b[7][1]++, mod.__esModule) ?
  /* istanbul ignore next */
  (cov_1s4ro3jz52().b[6][0]++, mod) :
  /* istanbul ignore next */
  (cov_1s4ro3jz52().b[6][1]++, {
    "default": mod
  });
}));
/* istanbul ignore next */
cov_1s4ro3jz52().s[14]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1s4ro3jz52().s[15]++;
exports.rateLimiter = void 0;
const ioredis_1 =
/* istanbul ignore next */
(cov_1s4ro3jz52().s[16]++, __importDefault(require("ioredis")));
class RateLimiter {
  constructor() {
    /* istanbul ignore next */
    cov_1s4ro3jz52().f[8]++;
    cov_1s4ro3jz52().s[17]++;
    this.redis = null;
    /* istanbul ignore next */
    cov_1s4ro3jz52().s[18]++;
    this.memoryStore = new Map();
    // Only try to connect to Redis if URL is provided
    /* istanbul ignore next */
    cov_1s4ro3jz52().s[19]++;
    if (process.env.REDIS_URL) {
      /* istanbul ignore next */
      cov_1s4ro3jz52().b[8][0]++;
      cov_1s4ro3jz52().s[20]++;
      try {
        /* istanbul ignore next */
        cov_1s4ro3jz52().s[21]++;
        this.redis = new ioredis_1.default(process.env.REDIS_URL, {
          maxRetriesPerRequest: 3,
          lazyConnect: true // Don't connect immediately
        });
        /* istanbul ignore next */
        cov_1s4ro3jz52().s[22]++;
        this.redis.on('connect', () => {
          /* istanbul ignore next */
          cov_1s4ro3jz52().f[9]++;
          cov_1s4ro3jz52().s[23]++;
          console.log('✅ Connected to Redis for rate limiting');
        });
        /* istanbul ignore next */
        cov_1s4ro3jz52().s[24]++;
        this.redis.on('error', error => {
          /* istanbul ignore next */
          cov_1s4ro3jz52().f[10]++;
          cov_1s4ro3jz52().s[25]++;
          console.warn('⚠️ Redis connection error, falling back to memory store:', error.message);
          /* istanbul ignore next */
          cov_1s4ro3jz52().s[26]++;
          this.redis = null; // Fallback to memory store
        });
      } catch (error) {
        /* istanbul ignore next */
        cov_1s4ro3jz52().s[27]++;
        console.warn('⚠️ Failed to initialize Redis, using in-memory store:', error);
        /* istanbul ignore next */
        cov_1s4ro3jz52().s[28]++;
        this.redis = null;
      }
    } else {
      /* istanbul ignore next */
      cov_1s4ro3jz52().b[8][1]++;
      cov_1s4ro3jz52().s[29]++;
      console.log('ℹ️ No Redis URL provided, using in-memory rate limiter');
    }
  }
  incrementAndCheck(options) {
    /* istanbul ignore next */
    cov_1s4ro3jz52().f[11]++;
    cov_1s4ro3jz52().s[30]++;
    return __awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_1s4ro3jz52().f[12]++;
      const {
        widgetId,
        limit,
        period
      } =
      /* istanbul ignore next */
      (cov_1s4ro3jz52().s[31]++, options);
      const key =
      /* istanbul ignore next */
      (cov_1s4ro3jz52().s[32]++, `rate_limit:${widgetId}`);
      const now =
      /* istanbul ignore next */
      (cov_1s4ro3jz52().s[33]++, Math.floor(Date.now() / 1000));
      const resetTime =
      /* istanbul ignore next */
      (cov_1s4ro3jz52().s[34]++, now + period);
      /* istanbul ignore next */
      cov_1s4ro3jz52().s[35]++;
      if (this.redis) {
        /* istanbul ignore next */
        cov_1s4ro3jz52().b[9][0]++;
        cov_1s4ro3jz52().s[36]++;
        return this.incrementRedis(key, limit, period, resetTime);
      } else {
        /* istanbul ignore next */
        cov_1s4ro3jz52().b[9][1]++;
        cov_1s4ro3jz52().s[37]++;
        return this.incrementMemory(key, limit, period, resetTime);
      }
    });
  }
  incrementRedis(key, limit, period, resetTime) {
    /* istanbul ignore next */
    cov_1s4ro3jz52().f[13]++;
    var _a;
    /* istanbul ignore next */
    cov_1s4ro3jz52().s[38]++;
    return __awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_1s4ro3jz52().f[14]++;
      const multi =
      /* istanbul ignore next */
      (cov_1s4ro3jz52().s[39]++, this.redis.multi());
      /* istanbul ignore next */
      cov_1s4ro3jz52().s[40]++;
      multi.incr(key);
      /* istanbul ignore next */
      cov_1s4ro3jz52().s[41]++;
      multi.expire(key, period);
      const results =
      /* istanbul ignore next */
      (cov_1s4ro3jz52().s[42]++, yield multi.exec());
      const count =
      /* istanbul ignore next */
      (cov_1s4ro3jz52().s[43]++,
      /* istanbul ignore next */
      (cov_1s4ro3jz52().b[10][0]++,
      /* istanbul ignore next */
      (cov_1s4ro3jz52().b[12][0]++, (_a =
      /* istanbul ignore next */
      (cov_1s4ro3jz52().b[14][0]++, results === null) ||
      /* istanbul ignore next */
      (cov_1s4ro3jz52().b[14][1]++, results === void 0) ?
      /* istanbul ignore next */
      (cov_1s4ro3jz52().b[13][0]++, void 0) :
      /* istanbul ignore next */
      (cov_1s4ro3jz52().b[13][1]++, results[0])) === null) ||
      /* istanbul ignore next */
      (cov_1s4ro3jz52().b[12][1]++, _a === void 0) ?
      /* istanbul ignore next */
      (cov_1s4ro3jz52().b[11][0]++, void 0) :
      /* istanbul ignore next */
      (cov_1s4ro3jz52().b[11][1]++, _a[1])) ||
      /* istanbul ignore next */
      (cov_1s4ro3jz52().b[10][1]++, 0));
      /* istanbul ignore next */
      cov_1s4ro3jz52().s[44]++;
      return {
        allowed: count <= limit,
        count,
        resetTime
      };
    });
  }
  incrementMemory(key, limit, period, resetTime) {
    /* istanbul ignore next */
    cov_1s4ro3jz52().f[15]++;
    const now =
    /* istanbul ignore next */
    (cov_1s4ro3jz52().s[45]++, Math.floor(Date.now() / 1000));
    const existing =
    /* istanbul ignore next */
    (cov_1s4ro3jz52().s[46]++, this.memoryStore.get(key));
    // Clean up expired entries
    /* istanbul ignore next */
    cov_1s4ro3jz52().s[47]++;
    if (
    /* istanbul ignore next */
    (cov_1s4ro3jz52().b[16][0]++, existing) &&
    /* istanbul ignore next */
    (cov_1s4ro3jz52().b[16][1]++, existing.resetTime <= now)) {
      /* istanbul ignore next */
      cov_1s4ro3jz52().b[15][0]++;
      cov_1s4ro3jz52().s[48]++;
      this.memoryStore.delete(key);
    } else
    /* istanbul ignore next */
    {
      cov_1s4ro3jz52().b[15][1]++;
    }
    const current =
    /* istanbul ignore next */
    (cov_1s4ro3jz52().s[49]++,
    /* istanbul ignore next */
    (cov_1s4ro3jz52().b[17][0]++, this.memoryStore.get(key)) ||
    /* istanbul ignore next */
    (cov_1s4ro3jz52().b[17][1]++, {
      count: 0,
      resetTime
    }));
    /* istanbul ignore next */
    cov_1s4ro3jz52().s[50]++;
    current.count += 1;
    /* istanbul ignore next */
    cov_1s4ro3jz52().s[51]++;
    if (!this.memoryStore.has(key)) {
      /* istanbul ignore next */
      cov_1s4ro3jz52().b[18][0]++;
      cov_1s4ro3jz52().s[52]++;
      current.resetTime = resetTime;
    } else
    /* istanbul ignore next */
    {
      cov_1s4ro3jz52().b[18][1]++;
    }
    cov_1s4ro3jz52().s[53]++;
    this.memoryStore.set(key, current);
    /* istanbul ignore next */
    cov_1s4ro3jz52().s[54]++;
    return {
      allowed: current.count <= limit,
      count: current.count,
      resetTime: current.resetTime
    };
  }
  disconnect() {
    /* istanbul ignore next */
    cov_1s4ro3jz52().f[16]++;
    cov_1s4ro3jz52().s[55]++;
    return __awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_1s4ro3jz52().f[17]++;
      cov_1s4ro3jz52().s[56]++;
      if (this.redis) {
        /* istanbul ignore next */
        cov_1s4ro3jz52().b[19][0]++;
        cov_1s4ro3jz52().s[57]++;
        yield this.redis.disconnect();
      } else
      /* istanbul ignore next */
      {
        cov_1s4ro3jz52().b[19][1]++;
      }
    });
  }
}
// Export singleton instance
/* istanbul ignore next */
cov_1s4ro3jz52().s[58]++;
exports.rateLimiter = new RateLimiter();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,