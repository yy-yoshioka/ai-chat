{"version":3,"names":["express_1","cov_tek5pzldb","s","__importDefault","require","auth_1","organizationService","__importStar","router","default","Router","get","authMiddleware","req","res","f","__awaiter","organizations","getUserOrganizations","user","id","enhancedOrgs","map","org","Object","assign","userCount","_count","users","widgetCount","companies","reduce","sum","company","widgets","plan","b","_a","json","error","status","organization","getOrganizationById","params","message","Error","includes","put","updateOrganization","body","stats","getOrganizationStats","exports"],"sources":["/Users/yusukeyoshioka/projects/youtube/ai-chat/ai-chat-api/src/routes/organizations.ts"],"sourcesContent":["import express from 'express';\nimport { authMiddleware as requireAuth } from '../middleware/auth';\nimport * as organizationService from '../services/organizationService';\n\nconst router = express.Router();\n\n// Get user's organizations\nrouter.get('/', requireAuth, async (req, res) => {\n  try {\n    const organizations = await organizationService.getUserOrganizations(\n      req.user!.id\n    );\n\n    // Add computed fields\n    const enhancedOrgs = organizations.map((org) => ({\n      ...org,\n      userCount: org._count.users,\n      widgetCount: org.companies.reduce(\n        (sum, company) => sum + company._count.widgets,\n        0\n      ),\n      plan: org.companies[0]?.plan || 'free', // Use first company's plan as org plan\n    }));\n\n    res.json(enhancedOrgs);\n  } catch (error) {\n    res.status(500).json({ error: 'Failed to fetch organizations' });\n  }\n});\n\n// Get organization by ID\nrouter.get('/:id', requireAuth, async (req, res) => {\n  try {\n    const organization = await organizationService.getOrganizationById(\n      req.params.id,\n      req.user!.id\n    );\n    res.json(organization);\n  } catch (error) {\n    const message =\n      error instanceof Error ? error.message : 'Failed to fetch organization';\n    const status =\n      message.includes('not found') || message.includes('access denied')\n        ? 404\n        : 500;\n    res.status(status).json({ error: message });\n  }\n});\n\n// Update organization\nrouter.put('/:id', requireAuth, async (req, res) => {\n  try {\n    const organization = await organizationService.updateOrganization(\n      req.params.id,\n      req.user!.id,\n      req.body\n    );\n    res.json(organization);\n  } catch (error) {\n    const message =\n      error instanceof Error ? error.message : 'Failed to update organization';\n    const status =\n      message.includes('not found') || message.includes('insufficient')\n        ? 403\n        : 500;\n    res.status(status).json({ error: message });\n  }\n});\n\n// Get organization stats\nrouter.get('/:id/stats', requireAuth, async (req, res) => {\n  try {\n    const stats = await organizationService.getOrganizationStats(req.params.id);\n    res.json(stats);\n  } catch (error) {\n    res.status(500).json({ error: 'Failed to fetch organization stats' });\n  }\n});\n\nexport default router;\n"],"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","ignoreList":[]}