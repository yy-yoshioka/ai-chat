{"file":"/Users/yusukeyoshioka/projects/youtube/ai-chat/ai-chat-api/src/middleware/security.ts","mappings":"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","names":[],"sources":["/Users/yusukeyoshioka/projects/youtube/ai-chat/ai-chat-api/src/middleware/security.ts"],"sourcesContent":["import { Request, Response, NextFunction } from 'express';\nimport { Permission } from '@prisma/client';\nimport { hasPermission, hasAnyPermission } from '../services/rbacService';\nimport {\n  logSecurityEvent,\n  logDataAccess as logDataAccessService,\n} from '../services/securityService';\nimport rateLimit from 'express-rate-limit';\nimport { prisma } from '../lib/prisma';\nimport crypto from 'crypto';\n\n// Enhanced auth middleware with RBAC\nexport const requirePermission = (permission: Permission) => {\n  return async (req: Request, res: Response, next: NextFunction) => {\n    try {\n      if (!req.user?.id || !req.organizationId) {\n        await logSecurityEvent({\n          action: 'unauthorized_access_attempt',\n          resource: req.path,\n          success: false,\n          ipAddress: req.ip,\n          userAgent: req.get('User-Agent'),\n          risk_level: 'medium',\n        });\n\n        return res.status(401).json({ error: 'Authentication required' });\n      }\n\n      const hasRequiredPermission = await hasPermission(\n        req.user.id,\n        req.organizationId,\n        permission\n      );\n\n      if (!hasRequiredPermission) {\n        await logSecurityEvent({\n          userId: req.user.id,\n          organizationId: req.organizationId,\n          action: 'permission_denied',\n          resource: req.path,\n          success: false,\n          ipAddress: req.ip,\n          userAgent: req.get('User-Agent'),\n          details: { required_permission: permission },\n          risk_level: 'medium',\n        });\n\n        return res.status(403).json({ error: 'Insufficient permissions' });\n      }\n\n      await logSecurityEvent({\n        userId: req.user.id,\n        organizationId: req.organizationId,\n        action: 'permission_granted',\n        resource: req.path,\n        success: true,\n        ipAddress: req.ip,\n        userAgent: req.get('User-Agent'),\n        details: { granted_permission: permission },\n        risk_level: 'low',\n      });\n\n      next();\n    } catch (error) {\n      await logSecurityEvent({\n        userId: req.user?.id,\n        organizationId: req.organizationId,\n        action: 'permission_check_error',\n        resource: req.path,\n        success: false,\n        ipAddress: req.ip,\n        userAgent: req.get('User-Agent'),\n        details: {\n          error: error instanceof Error ? error.message : 'Unknown error',\n        },\n        risk_level: 'high',\n      });\n\n      res.status(500).json({ error: 'Permission check failed' });\n    }\n  };\n};\n\nexport const requireAnyPermission = (permissions: Permission[]) => {\n  return async (req: Request, res: Response, next: NextFunction) => {\n    try {\n      if (!req.user?.id || !req.organizationId) {\n        return res.status(401).json({ error: 'Authentication required' });\n      }\n\n      const hasRequiredPermissions = await hasAnyPermission(\n        req.user.id,\n        req.organizationId,\n        permissions\n      );\n\n      if (!hasRequiredPermissions) {\n        await logSecurityEvent({\n          userId: req.user.id,\n          organizationId: req.organizationId,\n          action: 'permission_denied',\n          resource: req.path,\n          success: false,\n          ipAddress: req.ip,\n          userAgent: req.get('User-Agent'),\n          details: { required_permissions: permissions },\n          risk_level: 'medium',\n        });\n\n        return res.status(403).json({ error: 'Insufficient permissions' });\n      }\n\n      next();\n    } catch (error) {\n      res.status(500).json({ error: 'Permission check failed' });\n    }\n  };\n};\n\n// Data access logging middleware\nexport const logDataAccess = (tableName: string, operation: string) => {\n  return async (req: Request, res: Response, next: NextFunction) => {\n    const originalSend = res.send;\n\n    res.send = function (data) {\n      // Log the data access\n      if (req.user?.id && req.organizationId) {\n        logDataAccessService({\n          organizationId: req.organizationId,\n          userId: req.user.id,\n          table_name: tableName,\n          operation,\n          record_ids: extractRecordIds(req, data),\n          query_hash: generateQueryHash(req),\n        }).catch((error) => {\n          console.error('Failed to log data access:', error);\n        });\n      }\n\n      return originalSend.call(this, data);\n    };\n\n    next();\n  };\n};\n\n// Rate limiting with organization-specific limits\nexport const createOrgRateLimit = (\n  windowMs: number,\n  maxRequests: number,\n  message?: string\n) => {\n  return rateLimit({\n    windowMs,\n    max: maxRequests,\n    message: message || 'Too many requests',\n    keyGenerator: (req) => {\n      return `${req.organizationId || 'anonymous'}:${req.ip}`;\n    },\n    skip: (req) => {\n      // Skip rate limiting for system admins\n      return req.user?.roles?.includes('owner') || false;\n    },\n  });\n};\n\n// IP allowlist middleware\nexport const requireIPAllowlist = async (\n  req: Request,\n  res: Response,\n  next: NextFunction\n) => {\n  try {\n    if (!req.organizationId) {\n      return next();\n    }\n\n    const org = await prisma.organization.findUnique({\n      where: { id: req.organizationId },\n      select: { settings: true },\n    });\n\n    const ipAllowlist = (org?.settings as any)?.ipAllowlist as string[] | undefined;\n\n    if (ipAllowlist && ipAllowlist.length > 0) {\n      const clientIP = req.ip;\n      const isAllowed = ipAllowlist.some((allowedIP) => {\n        return clientIP && (clientIP === allowedIP || clientIP.startsWith(allowedIP));\n      });\n\n      if (!isAllowed) {\n        await logSecurityEvent({\n          userId: req.user?.id,\n          organizationId: req.organizationId,\n          action: 'ip_blocked',\n          resource: req.path,\n          success: false,\n          ipAddress: clientIP,\n          userAgent: req.get('User-Agent'),\n          details: { allowlist: ipAllowlist },\n          risk_level: 'high',\n        });\n\n        return res.status(403).json({ error: 'IP address not allowed' });\n      }\n    }\n\n    next();\n  } catch (error) {\n    next(error);\n  }\n};\n\nconst extractRecordIds = (req: Request, responseData: any): string[] => {\n  // Extract record IDs from request params, body, or response\n  const ids: string[] = [];\n\n  if (req.params.id) ids.push(req.params.id);\n  if (req.body?.id) ids.push(req.body.id);\n\n  try {\n    const data =\n      typeof responseData === 'string'\n        ? JSON.parse(responseData)\n        : responseData;\n    if (data?.id) ids.push(data.id);\n    if (Array.isArray(data)) {\n      data.forEach((item) => {\n        if (item?.id) ids.push(item.id);\n      });\n    }\n  } catch (error) {\n    // Ignore JSON parse errors\n  }\n\n  return ids;\n};\n\nconst generateQueryHash = (req: Request): string => {\n  const queryString = `${req.method}:${req.path}:${JSON.stringify(req.query)}`;\n  return crypto.createHash('sha256').update(queryString).digest('hex');\n};\n"],"version":3}