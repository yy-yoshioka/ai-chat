{"version":3,"names":["cov_1rpiiwdka4","actualCoverage","prisma_1","s","require","getUserOrganizations","userId","f","__awaiter","prisma","organization","findMany","where","users","some","id","include","_count","select","companies","widgets","orderBy","createdAt","exports","getOrganizationById","findFirst","email","name","roles","isActive","b","Error","updateOrganization","data","hasSome","update","settings","updatedAt","Date","getOrganizationStats","organizationId","userCount","widgetCount","activeWidgetCount","totalChats","monthlyChats","Promise","all","user","count","widget","company","chatLog","gte","now"],"sources":["/Users/yusukeyoshioka/projects/youtube/ai-chat/ai-chat-api/src/services/organizationService.ts"],"sourcesContent":["import { prisma } from '../lib/prisma';\n\nexport const getUserOrganizations = async (userId: string) => {\n  return prisma.organization.findMany({\n    where: {\n      users: {\n        some: {\n          id: userId,\n        },\n      },\n    },\n    include: {\n      _count: {\n        select: {\n          users: true,\n          companies: {\n            where: {\n              widgets: {\n                some: {},\n              },\n            },\n          },\n        },\n      },\n      companies: {\n        include: {\n          _count: {\n            select: {\n              widgets: true,\n            },\n          },\n        },\n      },\n    },\n    orderBy: { createdAt: 'desc' },\n  });\n};\n\nexport const getOrganizationById = async (id: string, userId: string) => {\n  const organization = await prisma.organization.findFirst({\n    where: {\n      id,\n      users: {\n        some: {\n          id: userId,\n        },\n      },\n    },\n    include: {\n      users: {\n        select: {\n          id: true,\n          email: true,\n          name: true,\n          roles: true,\n        },\n      },\n      companies: {\n        include: {\n          widgets: {\n            select: {\n              id: true,\n              name: true,\n              isActive: true,\n              createdAt: true,\n            },\n          },\n          _count: {\n            select: {\n              widgets: true,\n              users: true,\n            },\n          },\n        },\n      },\n      _count: {\n        select: {\n          users: true,\n        },\n      },\n    },\n  });\n\n  if (!organization) {\n    throw new Error('Organization not found or access denied');\n  }\n\n  return organization;\n};\n\nexport const updateOrganization = async (\n  id: string,\n  userId: string,\n  data: {\n    name?: string;\n    settings?: Record<string, unknown>;\n  }\n) => {\n  // Check if user has permission to update\n  const organization = await prisma.organization.findFirst({\n    where: {\n      id,\n      users: {\n        some: {\n          id: userId,\n          roles: {\n            hasSome: ['owner', 'org_admin'],\n          },\n        },\n      },\n    },\n  });\n\n  if (!organization) {\n    throw new Error('Organization not found or insufficient permissions');\n  }\n\n  return prisma.organization.update({\n    where: { id },\n    data: {\n      name: data.name,\n      settings: data.settings as any,\n      updatedAt: new Date(),\n    },\n  });\n};\n\nexport const getOrganizationStats = async (organizationId: string) => {\n  const [userCount, widgetCount, activeWidgetCount, totalChats, monthlyChats] =\n    await Promise.all([\n      prisma.user.count({\n        where: { organizationId },\n      }),\n      prisma.widget.count({\n        where: {\n          company: {\n            organizationId,\n          },\n        },\n      }),\n      prisma.widget.count({\n        where: {\n          company: {\n            organizationId,\n          },\n          isActive: true,\n        },\n      }),\n      prisma.chatLog.count({\n        where: {\n          widget: {\n            company: {\n              organizationId,\n            },\n          },\n        },\n      }),\n      prisma.chatLog.count({\n        where: {\n          widget: {\n            company: {\n              organizationId,\n            },\n          },\n          createdAt: {\n            gte: new Date(Date.now() - 30 * 24 * 60 * 60 * 1000), // Last 30 days\n          },\n        },\n      }),\n    ]);\n\n  return {\n    userCount,\n    widgetCount,\n    activeWidgetCount,\n    totalChats,\n    monthlyChats,\n  };\n};\n"],"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","ignoreList":[]}