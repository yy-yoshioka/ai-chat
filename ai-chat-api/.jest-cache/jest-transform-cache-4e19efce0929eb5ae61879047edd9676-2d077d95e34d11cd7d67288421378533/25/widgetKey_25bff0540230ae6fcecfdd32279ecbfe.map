{"version":3,"names":["crypto","cov_17dzusyrui","s","__importStar","require","generateWidgetKey","f","randomBytes","toString","exports","isValidWidgetKey","key","newFormat","test","legacyFormat","b"],"sources":["/Users/yusukeyoshioka/projects/youtube/ai-chat/ai-chat-api/src/utils/widgetKey.ts"],"sourcesContent":["import * as crypto from 'crypto';\n\n/**\n * Generate a cryptographically secure widget key\n * @returns A 64-character hexadecimal string\n */\nexport function generateWidgetKey(): string {\n  return crypto.randomBytes(32).toString('hex');\n}\n\n/**\n * Validate widget key format\n * @param key The widget key to validate\n * @returns True if the key is valid format\n */\nexport function isValidWidgetKey(key: string): boolean {\n  // Allow both new format (64 hex characters) and legacy format (for development)\n  const newFormat = /^[0-9a-f]{64}$/.test(key);\n  const legacyFormat = /^[a-zA-Z0-9\\-_]{3,50}$/.test(key); // Allow alphanumeric, hyphens, underscores, 3-50 chars\n\n  return newFormat || legacyFormat;\n}\n"],"mappingscAAA,GAAAC,CAAA,QAAAC,YAAA,CAAAC,OAAA;AAEA;;;;AAIA,SAAgBC,iBAAiBA,CAAA;EAAA;EAAAJ,cAAA,GAAAK,CAAA;EAAAL,cAAA,GAAAC,CAAA;EAC/B,OAAOF,MAAM,CAACO,WAAW,CAAC,EAAE,CAAC,CAACC,QAAQ,CAAC,KAAK,CAAC;AAC/C;AAAC;AAAAP,cAAA,GAAAC,CAAA;AAFDO,OAAA,CAAAJ,iBAAA,GAAAA,iBAAA;AAIA;;;;;AAKA,SAAgBK,gBAAgBA,CAACC,GAAW;EAAA;EAAAV,cAAA,GAAAK,CAAA;EAC1C;EACA,MAAMM,SAAS;EAAA;EAAA,CAAAX,cAAA,GAAAC,CAAA,QAAG,gBAAgB,CAACW,IAAI,CAACF,GAAG,CAAC;EAC5C,MAAMG,YAAY;EAAA;EAAA,CAAAb,cAAA,GAAAC,CAAA,QAAG,wBAAwB,CAACW,IAAI,CAACF,GAAG,CAAC,EAAC,CAAC;EAAA;EAAAV,cAAA,GAAAC,CAAA;EAEzD,OAAO,2BAAAD,cAAA,GAAAc,CAAA,WAAAH,SAAS;EAAA;EAAA,CAAAX,cAAA,GAAAc,CAAA,WAAID,YAAY;AAClC;AAAC;AAAAb,cAAA,GAAAC,CAAA;AANDO,OAAA,CAAAC,gBAAA,GAAAA,gBAAA","ignoreList":[]}