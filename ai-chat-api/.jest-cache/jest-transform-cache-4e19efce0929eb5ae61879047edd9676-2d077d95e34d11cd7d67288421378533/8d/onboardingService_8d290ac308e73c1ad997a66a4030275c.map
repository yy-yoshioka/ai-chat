{"version":3,"names":["cov_2p2m9rjrc4","actualCoverage","emailTemplates_1","s","require","OnboardingService","constructor","f","schedules","Map","createOnboardingSchedule","userData","schedule","Object","assign","signupDate","Date","emailsSent","welcome","guide","success","set","userId","sendWelcomeEmail","setTimeout","sendUsageGuideEmail","sendSuccessStoriesEmail","console","log","get","b","onboardingData","firstName","company","email","setupUrl","process","env","NEXT_PUBLIC_UI_URL","dashboardUrl","supportUrl","emailTemplate","getWelcomeEmailTemplate","sendEmail","trackEmailEvent","error","getUsageGuideEmailTemplate","getSuccessStoriesEmailTemplate","to","template","NODE_ENV","subject","text","substring","eventType","eventData","timestamp","toISOString","source","getOnboardingStatus","resendEmail","emailType","Error","exports","onboardingService","initializeUserOnboarding","getUserOnboardingStatus"],"sources":["/Users/yusukeyoshioka/projects/youtube/ai-chat/ai-chat-api/src/lib/onboardingService.ts"],"sourcesContent":["import {\n  getWelcomeEmailTemplate,\n  getUsageGuideEmailTemplate,\n  getSuccessStoriesEmailTemplate,\n  type OnboardingData,\n  type EmailTemplate,\n} from './emailTemplates';\n\ninterface OnboardingSchedule {\n  userId: string;\n  email: string;\n  firstName: string;\n  company: string;\n  signupDate: Date;\n  emailsSent: {\n    welcome: boolean;\n    guide: boolean;\n    success: boolean;\n  };\n}\n\nclass OnboardingService {\n  private schedules: Map<string, OnboardingSchedule> = new Map();\n\n  async createOnboardingSchedule(userData: {\n    userId: string;\n    email: string;\n    firstName: string;\n    company: string;\n  }): Promise<void> {\n    const schedule: OnboardingSchedule = {\n      ...userData,\n      signupDate: new Date(),\n      emailsSent: {\n        welcome: false,\n        guide: false,\n        success: false,\n      },\n    };\n\n    this.schedules.set(userData.userId, schedule);\n    await this.sendWelcomeEmail(userData.userId);\n\n    setTimeout(\n      () => {\n        this.sendUsageGuideEmail(userData.userId);\n      },\n      3 * 24 * 60 * 60 * 1000\n    );\n\n    setTimeout(\n      () => {\n        this.sendSuccessStoriesEmail(userData.userId);\n      },\n      7 * 24 * 60 * 60 * 1000\n    );\n\n    console.log(`Onboarding schedule created for user ${userData.userId}`);\n  }\n\n  private async sendWelcomeEmail(userId: string): Promise<void> {\n    const schedule = this.schedules.get(userId);\n    if (!schedule || schedule.emailsSent.welcome) return;\n\n    const onboardingData: OnboardingData = {\n      firstName: schedule.firstName,\n      company: schedule.company,\n      email: schedule.email,\n      setupUrl: `${process.env.NEXT_PUBLIC_UI_URL}/widgets/setup`,\n      dashboardUrl: `${process.env.NEXT_PUBLIC_UI_URL}/admin`,\n      supportUrl: `${process.env.NEXT_PUBLIC_UI_URL}/faq`,\n    };\n\n    const emailTemplate = getWelcomeEmailTemplate(onboardingData);\n\n    try {\n      await this.sendEmail(schedule.email, emailTemplate);\n      schedule.emailsSent.welcome = true;\n      await this.trackEmailEvent(userId, 'welcome_email_sent');\n      console.log(`Welcome email sent to ${schedule.email}`);\n    } catch (error) {\n      console.error(\n        `Failed to send welcome email to ${schedule.email}:`,\n        error\n      );\n    }\n  }\n\n  private async sendUsageGuideEmail(userId: string): Promise<void> {\n    const schedule = this.schedules.get(userId);\n    if (!schedule || schedule.emailsSent.guide) return;\n\n    const onboardingData: OnboardingData = {\n      firstName: schedule.firstName,\n      company: schedule.company,\n      email: schedule.email,\n      setupUrl: `${process.env.NEXT_PUBLIC_UI_URL}/widgets/setup`,\n      dashboardUrl: `${process.env.NEXT_PUBLIC_UI_URL}/admin`,\n      supportUrl: `${process.env.NEXT_PUBLIC_UI_URL}/faq`,\n    };\n\n    const emailTemplate = getUsageGuideEmailTemplate(onboardingData);\n\n    try {\n      await this.sendEmail(schedule.email, emailTemplate);\n      schedule.emailsSent.guide = true;\n      await this.trackEmailEvent(userId, 'guide_email_sent');\n      console.log(`Usage guide email sent to ${schedule.email}`);\n    } catch (error) {\n      console.error(\n        `Failed to send usage guide email to ${schedule.email}:`,\n        error\n      );\n    }\n  }\n\n  private async sendSuccessStoriesEmail(userId: string): Promise<void> {\n    const schedule = this.schedules.get(userId);\n    if (!schedule || schedule.emailsSent.success) return;\n\n    const onboardingData: OnboardingData = {\n      firstName: schedule.firstName,\n      company: schedule.company,\n      email: schedule.email,\n      setupUrl: `${process.env.NEXT_PUBLIC_UI_URL}/widgets/setup`,\n      dashboardUrl: `${process.env.NEXT_PUBLIC_UI_URL}/admin`,\n      supportUrl: `${process.env.NEXT_PUBLIC_UI_URL}/faq`,\n    };\n\n    const emailTemplate = getSuccessStoriesEmailTemplate(onboardingData);\n\n    try {\n      await this.sendEmail(schedule.email, emailTemplate);\n      schedule.emailsSent.success = true;\n      await this.trackEmailEvent(userId, 'success_email_sent');\n      console.log(`Success stories email sent to ${schedule.email}`);\n    } catch (error) {\n      console.error(\n        `Failed to send success stories email to ${schedule.email}:`,\n        error\n      );\n    }\n  }\n\n  private async sendEmail(to: string, template: EmailTemplate): Promise<void> {\n    if (process.env.NODE_ENV === 'development') {\n      console.log('=== EMAIL PREVIEW ===');\n      console.log(`To: ${to}`);\n      console.log(`Subject: ${template.subject}`);\n      console.log(`Text: ${template.text.substring(0, 200)}...`);\n      console.log('===================');\n      return;\n    }\n  }\n\n  private async trackEmailEvent(\n    userId: string,\n    eventType: string\n  ): Promise<void> {\n    try {\n      const eventData = {\n        userId,\n        eventType,\n        timestamp: new Date().toISOString(),\n        source: 'onboarding_emails',\n      };\n      console.log('Email event tracked:', eventData);\n    } catch (error) {\n      console.error('Failed to track email event:', error);\n    }\n  }\n\n  getOnboardingStatus(userId: string): OnboardingSchedule | null {\n    return this.schedules.get(userId) || null;\n  }\n\n  async resendEmail(\n    userId: string,\n    emailType: 'welcome' | 'guide' | 'success'\n  ): Promise<void> {\n    const schedule = this.schedules.get(userId);\n    if (!schedule) {\n      throw new Error('User not found in onboarding schedule');\n    }\n\n    switch (emailType) {\n      case 'welcome':\n        schedule.emailsSent.welcome = false;\n        await this.sendWelcomeEmail(userId);\n        break;\n      case 'guide':\n        schedule.emailsSent.guide = false;\n        await this.sendUsageGuideEmail(userId);\n        break;\n      case 'success':\n        schedule.emailsSent.success = false;\n        await this.sendSuccessStoriesEmail(userId);\n        break;\n      default:\n        throw new Error('Invalid email type');\n    }\n  }\n}\n\nexport const onboardingService = new OnboardingService();\n\nexport async function initializeUserOnboarding(userData: {\n  userId: string;\n  email: string;\n  firstName: string;\n  company: string;\n}): Promise<void> {\n  await onboardingService.createOnboardingSchedule(userData);\n}\n\nexport function getUserOnboardingStatus(userId: string) {\n  return onboardingService.getOnboardingStatus(userId);\n}\n"],"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","ignoreList":[]}