{"file":"/Users/yusukeyoshioka/projects/youtube/ai-chat/ai-chat-api/src/utils/password.ts","mappings":";;;;;;;;;;;;;;;AAAA,oDAA4B;AAE5B,MAAM,WAAW,GAAG,EAAE,CAAC;AAEvB,kBAAkB;AACX,MAAM,YAAY,GAAG,CAAO,QAAgB,EAAmB,EAAE;IACtE,OAAO,gBAAM,CAAC,IAAI,CAAC,QAAQ,EAAE,WAAW,CAAC,CAAC;AAC5C,CAAC,CAAA,CAAC;AAFW,QAAA,YAAY,gBAEvB;AAEF,mCAAmC;AAC5B,MAAM,cAAc,GAAG,CAC5B,QAAgB,EAChB,cAAsB,EACJ,EAAE;IACpB,OAAO,gBAAM,CAAC,OAAO,CAAC,QAAQ,EAAE,cAAc,CAAC,CAAC;AAClD,CAAC,CAAA,CAAC;AALW,QAAA,cAAc,kBAKzB","names":[],"sources":["/Users/yusukeyoshioka/projects/youtube/ai-chat/ai-chat-api/src/utils/password.ts"],"sourcesContent":["import bcrypt from 'bcrypt';\n\nconst SALT_ROUNDS = 10;\n\n// Hash a password\nexport const hashPassword = async (password: string): Promise<string> => {\n  return bcrypt.hash(password, SALT_ROUNDS);\n};\n\n// Verify a password against a hash\nexport const verifyPassword = async (\n  password: string,\n  hashedPassword: string\n): Promise<boolean> => {\n  return bcrypt.compare(password, hashedPassword);\n};\n"],"version":3}