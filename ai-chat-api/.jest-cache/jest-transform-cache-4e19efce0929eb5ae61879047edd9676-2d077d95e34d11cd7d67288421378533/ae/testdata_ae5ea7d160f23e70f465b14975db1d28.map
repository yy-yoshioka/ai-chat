{"file":"/Users/yusukeyoshioka/projects/youtube/ai-chat/ai-chat-api/tests/fixtures/test-data.ts","mappings":"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","names":[],"sources":["/Users/yusukeyoshioka/projects/youtube/ai-chat/ai-chat-api/tests/fixtures/test-data.ts"],"sourcesContent":["import {\n  PlanType,\n  Role,\n  DocumentStatus,\n  DocumentSourceType,\n} from '@prisma/client';\nimport bcrypt from 'bcrypt';\nimport * as jwt from 'jsonwebtoken';\n\n// Generate a test password hash\nexport const testPasswordHash = bcrypt.hashSync('password123', 10);\n\nexport const testUser = {\n  id: 'user-test-123',\n  email: 'test@example.com',\n  name: 'Test User',\n  password: testPasswordHash,\n  roles: [Role.owner],\n  organizationId: 'org-test-123',\n  emailVerified: true,\n  emailVerificationToken: null,\n  resetPasswordToken: null,\n  resetPasswordExpires: null,\n  lastLoginAt: new Date('2024-01-01'),\n  createdAt: new Date('2024-01-01'),\n  updatedAt: new Date('2024-01-01'),\n};\n\nexport const testOrganization = {\n  id: 'org-test-123',\n  name: 'Test Organization',\n  slug: 'test-org',\n  plan: PlanType.pro,\n  stripeCustomerId: 'cus_test_123',\n  stripeSubscriptionId: 'sub_test_123',\n  trialEndsAt: null,\n  settings: {},\n  createdAt: new Date('2024-01-01'),\n  updatedAt: new Date('2024-01-01'),\n};\n\nexport const testCompany = {\n  id: 'company-test-123',\n  name: 'Test Company',\n  organizationId: 'org-test-123',\n  createdAt: new Date('2024-01-01'),\n  updatedAt: new Date('2024-01-01'),\n};\n\nexport const testWidget = {\n  id: 'widget-test-123',\n  name: 'Test Widget',\n  widgetKey: 'wk_test_123',\n  themeColor: '#3B82F6',\n  welcomeMessage: 'Welcome to our support!',\n  placeholderText: 'Type your question here...',\n  status: 'active',\n  settings: {},\n  companyId: 'company-test-123',\n  createdAt: new Date('2024-01-01'),\n  updatedAt: new Date('2024-01-01'),\n};\n\nexport const testChatLog = {\n  id: 'chat-test-123',\n  widgetId: 'widget-test-123',\n  sessionId: 'session-test-123',\n  userMessage: 'Hello, I need help',\n  aiResponse: 'Hello! How can I assist you today?',\n  feedback: null,\n  metadata: {},\n  createdAt: new Date('2024-01-01'),\n  updatedAt: new Date('2024-01-01'),\n};\n\nexport const testFAQ = {\n  id: 'faq-test-123',\n  question: 'How do I reset my password?',\n  answer:\n    'You can reset your password by clicking the \"Forgot Password\" link on the login page.',\n  category: 'Account',\n  isPublished: true,\n  organizationId: 'org-test-123',\n  createdAt: new Date('2024-01-01'),\n  updatedAt: new Date('2024-01-01'),\n};\n\nexport const testKnowledgeBase = {\n  id: 'kb-test-123',\n  title: 'Test Document',\n  content: 'This is test content for knowledge base',\n  url: 'https://example.com/test.pdf',\n  metadata: {},\n  widgetId: 'widget-test-123',\n  createdAt: new Date('2024-01-01'),\n  updatedAt: new Date('2024-01-01'),\n};\n\nexport const testWebhook = {\n  id: 'webhook-test-123',\n  name: 'Test Webhook',\n  url: 'https://example.com/webhook',\n  events: ['chat.message', 'chat.feedback'],\n  isActive: true,\n  secret: 'webhook-secret-123',\n  metadata: {},\n  organizationId: 'org-test-123',\n  createdAt: new Date('2024-01-01'),\n  updatedAt: new Date('2024-01-01'),\n};\n\nexport const testIncident = {\n  id: 'incident-test-123',\n  title: 'Test Service Outage',\n  description: 'Testing incident management',\n  severity: 'medium',\n  status: 'investigating',\n  affectedServices: ['chat', 'api'],\n  startedAt: new Date('2024-01-01'),\n  resolvedAt: null,\n  createdAt: new Date('2024-01-01'),\n  updatedAt: new Date('2024-01-01'),\n};\n\nexport const testDataRetentionPolicy = {\n  id: 'retention-test-123',\n  name: 'Test Retention Policy',\n  dataType: 'chat_logs',\n  retentionDays: 90,\n  isActive: true,\n  organizationId: 'org-test-123',\n  createdAt: new Date('2024-01-01'),\n  updatedAt: new Date('2024-01-01'),\n};\n\nexport const testSecurityAuditLog = {\n  id: 'audit-test-123',\n  userId: 'user-test-123',\n  action: 'user.login',\n  resourceType: 'user',\n  resourceId: 'user-test-123',\n  metadata: {\n    ip: '192.168.1.1',\n    userAgent: 'Mozilla/5.0',\n  },\n  organizationId: 'org-test-123',\n  createdAt: new Date('2024-01-01'),\n};\n\nexport const testAPIKey = {\n  id: 'apikey-test-123',\n  name: 'Test API Key',\n  key: 'ak_test_123456789',\n  hashedKey: bcrypt.hashSync('ak_test_123456789', 10),\n  permissions: ['read:widgets', 'write:widgets'],\n  expiresAt: new Date('2025-01-01'),\n  lastUsedAt: null,\n  createdAt: new Date('2024-01-01'),\n  updatedAt: new Date('2024-01-01'),\n};\n\n// JWT test tokens\nexport const generateTestToken = (\n  userId: string,\n  organizationId: string,\n  expiresIn: string | number = '1h'\n) => {\n  return jwt.sign(\n    { id: userId, organizationId },\n    process.env.JWT_SECRET || 'test-secret',\n    { expiresIn } as jwt.SignOptions\n  );\n};\n\nexport const generateExpiredToken = (\n  userId: string,\n  organizationId: string\n) => {\n  return jwt.sign(\n    { id: userId, organizationId },\n    process.env.JWT_SECRET || 'test-secret',\n    { expiresIn: '-1h' } as jwt.SignOptions\n  );\n};\n\n// Mock authentication header\nexport const mockAuthHeader = (\n  userId = 'user-test-123',\n  organizationId = 'org-test-123'\n) => ({\n  authorization: `Bearer ${generateTestToken(userId, organizationId)}`,\n});\n\n// Mock file for upload tests\nexport const mockFile = {\n  fieldname: 'file',\n  originalname: 'test.pdf',\n  encoding: '7bit',\n  mimetype: 'application/pdf',\n  destination: '/tmp',\n  filename: 'test-123.pdf',\n  path: '/tmp/test-123.pdf',\n  size: 1024 * 1024, // 1MB\n  buffer: Buffer.from('test file content'),\n  stream: null as any,\n};\n\n// Mock request and response objects\nexport const createMockRequest = (overrides = {}) => ({\n  headers: {},\n  params: {},\n  query: {},\n  body: {},\n  user: null,\n  file: null,\n  files: [],\n  ...overrides,\n});\n\nexport const createMockResponse = () => {\n  const res: any = {};\n  res.status = jest.fn().mockReturnValue(res);\n  res.json = jest.fn().mockReturnValue(res);\n  res.send = jest.fn().mockReturnValue(res);\n  res.setHeader = jest.fn().mockReturnValue(res);\n  res.cookie = jest.fn().mockReturnValue(res);\n  res.clearCookie = jest.fn().mockReturnValue(res);\n  res.redirect = jest.fn().mockReturnValue(res);\n  res.end = jest.fn().mockReturnValue(res);\n  return res;\n};\n\nexport const createMockNext = () => jest.fn();\n\n// Mock WebSocket connection\nexport const createMockSocket = (id = 'socket-test-123') => ({\n  id,\n  emit: jest.fn(),\n  on: jest.fn(),\n  join: jest.fn(),\n  leave: jest.fn(),\n  disconnect: jest.fn(),\n  rooms: new Set([id]),\n  data: {},\n});\n\n// Mock Prisma transaction\nexport const mockPrismaTransaction = (prisma: any) => {\n  return jest.fn((callback) => {\n    if (typeof callback === 'function') {\n      return callback(prisma);\n    }\n    return Promise.all(callback);\n  });\n};\n"],"version":3}