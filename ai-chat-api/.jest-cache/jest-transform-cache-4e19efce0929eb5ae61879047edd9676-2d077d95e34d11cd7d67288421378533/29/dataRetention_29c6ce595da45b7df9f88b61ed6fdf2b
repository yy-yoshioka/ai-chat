7272423090386c7be10e46283311605c
"use strict";

/* istanbul ignore next */
function cov_23sfehjr2() {
  var path = "/Users/yusukeyoshioka/projects/youtube/ai-chat/ai-chat-api/src/lib/dataRetention.ts";
  var hash = "a38e423807641b4063e496b6ccd0a5cf71807dac";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/yusukeyoshioka/projects/youtube/ai-chat/ai-chat-api/src/lib/dataRetention.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 22
        },
        end: {
          line: 12,
          column: 3
        }
      },
      "1": {
        start: {
          line: 3,
          column: 4
        },
        end: {
          line: 3,
          column: 33
        }
      },
      "2": {
        start: {
          line: 3,
          column: 26
        },
        end: {
          line: 3,
          column: 33
        }
      },
      "3": {
        start: {
          line: 4,
          column: 15
        },
        end: {
          line: 4,
          column: 52
        }
      },
      "4": {
        start: {
          line: 5,
          column: 4
        },
        end: {
          line: 7,
          column: 5
        }
      },
      "5": {
        start: {
          line: 6,
          column: 6
        },
        end: {
          line: 6,
          column: 68
        }
      },
      "6": {
        start: {
          line: 6,
          column: 51
        },
        end: {
          line: 6,
          column: 63
        }
      },
      "7": {
        start: {
          line: 8,
          column: 4
        },
        end: {
          line: 8,
          column: 39
        }
      },
      "8": {
        start: {
          line: 10,
          column: 4
        },
        end: {
          line: 10,
          column: 33
        }
      },
      "9": {
        start: {
          line: 10,
          column: 26
        },
        end: {
          line: 10,
          column: 33
        }
      },
      "10": {
        start: {
          line: 11,
          column: 4
        },
        end: {
          line: 11,
          column: 17
        }
      },
      "11": {
        start: {
          line: 13,
          column: 25
        },
        end: {
          line: 17,
          column: 2
        }
      },
      "12": {
        start: {
          line: 14,
          column: 4
        },
        end: {
          line: 14,
          column: 72
        }
      },
      "13": {
        start: {
          line: 16,
          column: 4
        },
        end: {
          line: 16,
          column: 21
        }
      },
      "14": {
        start: {
          line: 18,
          column: 19
        },
        end: {
          line: 24,
          column: 1
        }
      },
      "15": {
        start: {
          line: 19,
          column: 4
        },
        end: {
          line: 19,
          column: 42
        }
      },
      "16": {
        start: {
          line: 19,
          column: 31
        },
        end: {
          line: 19,
          column: 42
        }
      },
      "17": {
        start: {
          line: 20,
          column: 17
        },
        end: {
          line: 20,
          column: 19
        }
      },
      "18": {
        start: {
          line: 21,
          column: 4
        },
        end: {
          line: 21,
          column: 141
        }
      },
      "19": {
        start: {
          line: 21,
          column: 21
        },
        end: {
          line: 21,
          column: 141
        }
      },
      "20": {
        start: {
          line: 21,
          column: 40
        },
        end: {
          line: 21,
          column: 141
        }
      },
      "21": {
        start: {
          line: 21,
          column: 109
        },
        end: {
          line: 21,
          column: 141
        }
      },
      "22": {
        start: {
          line: 22,
          column: 4
        },
        end: {
          line: 22,
          column: 36
        }
      },
      "23": {
        start: {
          line: 23,
          column: 4
        },
        end: {
          line: 23,
          column: 18
        }
      },
      "24": {
        start: {
          line: 25,
          column: 16
        },
        end: {
          line: 33,
          column: 1
        }
      },
      "25": {
        start: {
          line: 26,
          column: 28
        },
        end: {
          line: 26,
          column: 110
        }
      },
      "26": {
        start: {
          line: 26,
          column: 91
        },
        end: {
          line: 26,
          column: 106
        }
      },
      "27": {
        start: {
          line: 27,
          column: 4
        },
        end: {
          line: 32,
          column: 7
        }
      },
      "28": {
        start: {
          line: 28,
          column: 36
        },
        end: {
          line: 28,
          column: 97
        }
      },
      "29": {
        start: {
          line: 28,
          column: 42
        },
        end: {
          line: 28,
          column: 70
        }
      },
      "30": {
        start: {
          line: 28,
          column: 85
        },
        end: {
          line: 28,
          column: 95
        }
      },
      "31": {
        start: {
          line: 29,
          column: 35
        },
        end: {
          line: 29,
          column: 100
        }
      },
      "32": {
        start: {
          line: 29,
          column: 41
        },
        end: {
          line: 29,
          column: 73
        }
      },
      "33": {
        start: {
          line: 29,
          column: 88
        },
        end: {
          line: 29,
          column: 98
        }
      },
      "34": {
        start: {
          line: 30,
          column: 32
        },
        end: {
          line: 30,
          column: 116
        }
      },
      "35": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 31,
          column: 78
        }
      },
      "36": {
        start: {
          line: 34,
          column: 0
        },
        end: {
          line: 34,
          column: 62
        }
      },
      "37": {
        start: {
          line: 35,
          column: 0
        },
        end: {
          line: 35,
          column: 69
        }
      },
      "38": {
        start: {
          line: 36,
          column: 17
        },
        end: {
          line: 36,
          column: 36
        }
      },
      "39": {
        start: {
          line: 37,
          column: 15
        },
        end: {
          line: 37,
          column: 52
        }
      },
      "40": {
        start: {
          line: 40,
          column: 8
        },
        end: {
          line: 42,
          column: 9
        }
      },
      "41": {
        start: {
          line: 41,
          column: 12
        },
        end: {
          line: 41,
          column: 71
        }
      },
      "42": {
        start: {
          line: 43,
          column: 8
        },
        end: {
          line: 43,
          column: 45
        }
      },
      "43": {
        start: {
          line: 46,
          column: 8
        },
        end: {
          line: 73,
          column: 11
        }
      },
      "44": {
        start: {
          line: 47,
          column: 12
        },
        end: {
          line: 47,
          column: 71
        }
      },
      "45": {
        start: {
          line: 48,
          column: 12
        },
        end: {
          line: 72,
          column: 13
        }
      },
      "46": {
        start: {
          line: 49,
          column: 32
        },
        end: {
          line: 54,
          column: 18
        }
      },
      "47": {
        start: {
          line: 56,
          column: 16
        },
        end: {
          line: 65,
          column: 19
        }
      },
      "48": {
        start: {
          line: 57,
          column: 39
        },
        end: {
          line: 57,
          column: 84
        }
      },
      "49": {
        start: {
          line: 58,
          column: 20
        },
        end: {
          line: 64,
          column: 21
        }
      },
      "50": {
        start: {
          line: 59,
          column: 24
        },
        end: {
          line: 59,
          column: 115
        }
      },
      "51": {
        start: {
          line: 62,
          column: 24
        },
        end: {
          line: 62,
          column: 95
        }
      },
      "52": {
        start: {
          line: 63,
          column: 24
        },
        end: {
          line: 63,
          column: 63
        }
      },
      "53": {
        start: {
          line: 66,
          column: 16
        },
        end: {
          line: 66,
          column: 73
        }
      },
      "54": {
        start: {
          line: 69,
          column: 16
        },
        end: {
          line: 69,
          column: 80
        }
      },
      "55": {
        start: {
          line: 70,
          column: 16
        },
        end: {
          line: 70,
          column: 47
        }
      },
      "56": {
        start: {
          line: 71,
          column: 16
        },
        end: {
          line: 71,
          column: 28
        }
      },
      "57": {
        start: {
          line: 76,
          column: 8
        },
        end: {
          line: 105,
          column: 11
        }
      },
      "58": {
        start: {
          line: 77,
          column: 32
        },
        end: {
          line: 77,
          column: 42
        }
      },
      "59": {
        start: {
          line: 78,
          column: 12
        },
        end: {
          line: 78,
          column: 67
        }
      },
      "60": {
        start: {
          line: 80,
          column: 33
        },
        end: {
          line: 87,
          column: 14
        }
      },
      "61": {
        start: {
          line: 88,
          column: 12
        },
        end: {
          line: 90,
          column: 13
        }
      },
      "62": {
        start: {
          line: 89,
          column: 16
        },
        end: {
          line: 89,
          column: 25
        }
      },
      "63": {
        start: {
          line: 91,
          column: 27
        },
        end: {
          line: 91,
          column: 60
        }
      },
      "64": {
        start: {
          line: 91,
          column: 53
        },
        end: {
          line: 91,
          column: 59
        }
      },
      "65": {
        start: {
          line: 93,
          column: 36
        },
        end: {
          line: 103,
          column: 14
        }
      },
      "66": {
        start: {
          line: 104,
          column: 12
        },
        end: {
          line: 104,
          column: 41
        }
      },
      "67": {
        start: {
          line: 108,
          column: 8
        },
        end: {
          line: 126,
          column: 11
        }
      },
      "68": {
        start: {
          line: 109,
          column: 31
        },
        end: {
          line: 109,
          column: 41
        }
      },
      "69": {
        start: {
          line: 110,
          column: 12
        },
        end: {
          line: 110,
          column: 65
        }
      },
      "70": {
        start: {
          line: 113,
          column: 12
        },
        end: {
          line: 125,
          column: 13
        }
      },
      "71": {
        start: {
          line: 114,
          column: 41
        },
        end: {
          line: 118,
          column: 7
        }
      },
      "72": {
        start: {
          line: 119,
          column: 16
        },
        end: {
          line: 119,
          column: 48
        }
      },
      "73": {
        start: {
          line: 123,
          column: 16
        },
        end: {
          line: 123,
          column: 86
        }
      },
      "74": {
        start: {
          line: 124,
          column: 16
        },
        end: {
          line: 124,
          column: 25
        }
      },
      "75": {
        start: {
          line: 129,
          column: 8
        },
        end: {
          line: 193,
          column: 11
        }
      },
      "76": {
        start: {
          line: 130,
          column: 34
        },
        end: {
          line: 130,
          column: 44
        }
      },
      "77": {
        start: {
          line: 131,
          column: 12
        },
        end: {
          line: 131,
          column: 64
        }
      },
      "78": {
        start: {
          line: 134,
          column: 41
        },
        end: {
          line: 147,
          column: 14
        }
      },
      "79": {
        start: {
          line: 148,
          column: 12
        },
        end: {
          line: 150,
          column: 13
        }
      },
      "80": {
        start: {
          line: 149,
          column: 16
        },
        end: {
          line: 149,
          column: 25
        }
      },
      "81": {
        start: {
          line: 151,
          column: 31
        },
        end: {
          line: 151,
          column: 68
        }
      },
      "82": {
        start: {
          line: 151,
          column: 63
        },
        end: {
          line: 151,
          column: 67
        }
      },
      "83": {
        start: {
          line: 153,
          column: 36
        },
        end: {
          line: 190,
          column: 15
        }
      },
      "84": {
        start: {
          line: 153,
          column: 79
        },
        end: {
          line: 190,
          column: 14
        }
      },
      "85": {
        start: {
          line: 155,
          column: 40
        },
        end: {
          line: 163,
          column: 18
        }
      },
      "86": {
        start: {
          line: 165,
          column: 39
        },
        end: {
          line: 171,
          column: 18
        }
      },
      "87": {
        start: {
          line: 173,
          column: 37
        },
        end: {
          line: 177,
          column: 18
        }
      },
      "88": {
        start: {
          line: 179,
          column: 41
        },
        end: {
          line: 183,
          column: 18
        }
      },
      "89": {
        start: {
          line: 184,
          column: 16
        },
        end: {
          line: 189,
          column: 18
        }
      },
      "90": {
        start: {
          line: 191,
          column: 12
        },
        end: {
          line: 191,
          column: 71
        }
      },
      "91": {
        start: {
          line: 192,
          column: 12
        },
        end: {
          line: 192,
          column: 45
        }
      },
      "92": {
        start: {
          line: 196,
          column: 8
        },
        end: {
          line: 213,
          column: 11
        }
      },
      "93": {
        start: {
          line: 197,
          column: 34
        },
        end: {
          line: 197,
          column: 44
        }
      },
      "94": {
        start: {
          line: 198,
          column: 12
        },
        end: {
          line: 198,
          column: 64
        }
      },
      "95": {
        start: {
          line: 201,
          column: 12
        },
        end: {
          line: 212,
          column: 13
        }
      },
      "96": {
        start: {
          line: 202,
          column: 36
        },
        end: {
          line: 205,
          column: 7
        }
      },
      "97": {
        start: {
          line: 206,
          column: 16
        },
        end: {
          line: 206,
          column: 43
        }
      },
      "98": {
        start: {
          line: 210,
          column: 16
        },
        end: {
          line: 210,
          column: 72
        }
      },
      "99": {
        start: {
          line: 211,
          column: 16
        },
        end: {
          line: 211,
          column: 25
        }
      },
      "100": {
        start: {
          line: 216,
          column: 8
        },
        end: {
          line: 234,
          column: 11
        }
      },
      "101": {
        start: {
          line: 218,
          column: 29
        },
        end: {
          line: 232,
          column: 13
        }
      },
      "102": {
        start: {
          line: 219,
          column: 28
        },
        end: {
          line: 219,
          column: 38
        }
      },
      "103": {
        start: {
          line: 220,
          column: 32
        },
        end: {
          line: 220,
          column: 42
        }
      },
      "104": {
        start: {
          line: 221,
          column: 16
        },
        end: {
          line: 221,
          column: 45
        }
      },
      "105": {
        start: {
          line: 223,
          column: 16
        },
        end: {
          line: 225,
          column: 17
        }
      },
      "106": {
        start: {
          line: 224,
          column: 20
        },
        end: {
          line: 224,
          column: 59
        }
      },
      "107": {
        start: {
          line: 226,
          column: 36
        },
        end: {
          line: 226,
          column: 69
        }
      },
      "108": {
        start: {
          line: 227,
          column: 16
        },
        end: {
          line: 230,
          column: 33
        }
      },
      "109": {
        start: {
          line: 227,
          column: 33
        },
        end: {
          line: 230,
          column: 18
        }
      },
      "110": {
        start: {
          line: 228,
          column: 20
        },
        end: {
          line: 228,
          column: 56
        }
      },
      "111": {
        start: {
          line: 229,
          column: 20
        },
        end: {
          line: 229,
          column: 90
        }
      },
      "112": {
        start: {
          line: 229,
          column: 38
        },
        end: {
          line: 229,
          column: 67
        }
      },
      "113": {
        start: {
          line: 231,
          column: 16
        },
        end: {
          line: 231,
          column: 93
        }
      },
      "114": {
        start: {
          line: 233,
          column: 12
        },
        end: {
          line: 233,
          column: 23
        }
      },
      "115": {
        start: {
          line: 237,
          column: 8
        },
        end: {
          line: 272,
          column: 11
        }
      },
      "116": {
        start: {
          line: 238,
          column: 28
        },
        end: {
          line: 238,
          column: 38
        }
      },
      "117": {
        start: {
          line: 239,
          column: 12
        },
        end: {
          line: 239,
          column: 41
        }
      },
      "118": {
        start: {
          line: 240,
          column: 12
        },
        end: {
          line: 242,
          column: 13
        }
      },
      "119": {
        start: {
          line: 241,
          column: 16
        },
        end: {
          line: 241,
          column: 55
        }
      },
      "120": {
        start: {
          line: 243,
          column: 12
        },
        end: {
          line: 271,
          column: 14
        }
      },
      "121": {
        start: {
          line: 275,
          column: 0
        },
        end: {
          line: 275,
          column: 52
        }
      },
      "122": {
        start: {
          line: 276,
          column: 0
        },
        end: {
          line: 276,
          column: 66
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 74
          },
          end: {
            line: 2,
            column: 75
          }
        },
        loc: {
          start: {
            line: 2,
            column: 96
          },
          end: {
            line: 9,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 6,
            column: 38
          },
          end: {
            line: 6,
            column: 39
          }
        },
        loc: {
          start: {
            line: 6,
            column: 49
          },
          end: {
            line: 6,
            column: 65
          }
        },
        line: 6
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 9,
            column: 6
          },
          end: {
            line: 9,
            column: 7
          }
        },
        loc: {
          start: {
            line: 9,
            column: 28
          },
          end: {
            line: 12,
            column: 1
          }
        },
        line: 9
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 13,
            column: 80
          },
          end: {
            line: 13,
            column: 81
          }
        },
        loc: {
          start: {
            line: 13,
            column: 95
          },
          end: {
            line: 15,
            column: 1
          }
        },
        line: 13
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 15,
            column: 5
          },
          end: {
            line: 15,
            column: 6
          }
        },
        loc: {
          start: {
            line: 15,
            column: 20
          },
          end: {
            line: 17,
            column: 1
          }
        },
        line: 15
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 18,
            column: 50
          },
          end: {
            line: 18,
            column: 51
          }
        },
        loc: {
          start: {
            line: 18,
            column: 65
          },
          end: {
            line: 24,
            column: 1
          }
        },
        line: 18
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 25,
            column: 44
          },
          end: {
            line: 25,
            column: 45
          }
        },
        loc: {
          start: {
            line: 25,
            column: 89
          },
          end: {
            line: 33,
            column: 1
          }
        },
        line: 25
      },
      "7": {
        name: "adopt",
        decl: {
          start: {
            line: 26,
            column: 13
          },
          end: {
            line: 26,
            column: 18
          }
        },
        loc: {
          start: {
            line: 26,
            column: 26
          },
          end: {
            line: 26,
            column: 112
          }
        },
        line: 26
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 26,
            column: 70
          },
          end: {
            line: 26,
            column: 71
          }
        },
        loc: {
          start: {
            line: 26,
            column: 89
          },
          end: {
            line: 26,
            column: 108
          }
        },
        line: 26
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 27,
            column: 36
          },
          end: {
            line: 27,
            column: 37
          }
        },
        loc: {
          start: {
            line: 27,
            column: 63
          },
          end: {
            line: 32,
            column: 5
          }
        },
        line: 27
      },
      "10": {
        name: "fulfilled",
        decl: {
          start: {
            line: 28,
            column: 17
          },
          end: {
            line: 28,
            column: 26
          }
        },
        loc: {
          start: {
            line: 28,
            column: 34
          },
          end: {
            line: 28,
            column: 99
          }
        },
        line: 28
      },
      "11": {
        name: "rejected",
        decl: {
          start: {
            line: 29,
            column: 17
          },
          end: {
            line: 29,
            column: 25
          }
        },
        loc: {
          start: {
            line: 29,
            column: 33
          },
          end: {
            line: 29,
            column: 102
          }
        },
        line: 29
      },
      "12": {
        name: "step",
        decl: {
          start: {
            line: 30,
            column: 17
          },
          end: {
            line: 30,
            column: 21
          }
        },
        loc: {
          start: {
            line: 30,
            column: 30
          },
          end: {
            line: 30,
            column: 118
          }
        },
        line: 30
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 39,
            column: 4
          },
          end: {
            line: 39,
            column: 5
          }
        },
        loc: {
          start: {
            line: 39,
            column: 25
          },
          end: {
            line: 44,
            column: 5
          }
        },
        line: 39
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 45,
            column: 4
          },
          end: {
            line: 45,
            column: 5
          }
        },
        loc: {
          start: {
            line: 45,
            column: 29
          },
          end: {
            line: 74,
            column: 5
          }
        },
        line: 45
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 46,
            column: 47
          },
          end: {
            line: 46,
            column: 48
          }
        },
        loc: {
          start: {
            line: 46,
            column: 60
          },
          end: {
            line: 73,
            column: 9
          }
        },
        line: 46
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 56,
            column: 32
          },
          end: {
            line: 56,
            column: 33
          }
        },
        loc: {
          start: {
            line: 56,
            column: 51
          },
          end: {
            line: 65,
            column: 17
          }
        },
        line: 56
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 75,
            column: 4
          },
          end: {
            line: 75,
            column: 5
          }
        },
        loc: {
          start: {
            line: 75,
            column: 25
          },
          end: {
            line: 106,
            column: 5
          }
        },
        line: 75
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 76,
            column: 47
          },
          end: {
            line: 76,
            column: 48
          }
        },
        loc: {
          start: {
            line: 76,
            column: 60
          },
          end: {
            line: 105,
            column: 9
          }
        },
        line: 76
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 91,
            column: 44
          },
          end: {
            line: 91,
            column: 45
          }
        },
        loc: {
          start: {
            line: 91,
            column: 53
          },
          end: {
            line: 91,
            column: 59
          }
        },
        line: 91
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 107,
            column: 4
          },
          end: {
            line: 107,
            column: 5
          }
        },
        loc: {
          start: {
            line: 107,
            column: 31
          },
          end: {
            line: 127,
            column: 5
          }
        },
        line: 107
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 108,
            column: 47
          },
          end: {
            line: 108,
            column: 48
          }
        },
        loc: {
          start: {
            line: 108,
            column: 60
          },
          end: {
            line: 126,
            column: 9
          }
        },
        line: 108
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 128,
            column: 4
          },
          end: {
            line: 128,
            column: 5
          }
        },
        loc: {
          start: {
            line: 128,
            column: 29
          },
          end: {
            line: 194,
            column: 5
          }
        },
        line: 128
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 129,
            column: 47
          },
          end: {
            line: 129,
            column: 48
          }
        },
        loc: {
          start: {
            line: 129,
            column: 60
          },
          end: {
            line: 193,
            column: 9
          }
        },
        line: 129
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 151,
            column: 56
          },
          end: {
            line: 151,
            column: 57
          }
        },
        loc: {
          start: {
            line: 151,
            column: 63
          },
          end: {
            line: 151,
            column: 67
          }
        },
        line: 151
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 153,
            column: 71
          },
          end: {
            line: 153,
            column: 72
          }
        },
        loc: {
          start: {
            line: 153,
            column: 79
          },
          end: {
            line: 190,
            column: 14
          }
        },
        line: 153
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 153,
            column: 111
          },
          end: {
            line: 153,
            column: 112
          }
        },
        loc: {
          start: {
            line: 153,
            column: 124
          },
          end: {
            line: 190,
            column: 13
          }
        },
        line: 153
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 195,
            column: 4
          },
          end: {
            line: 195,
            column: 5
          }
        },
        loc: {
          start: {
            line: 195,
            column: 24
          },
          end: {
            line: 214,
            column: 5
          }
        },
        line: 195
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 196,
            column: 47
          },
          end: {
            line: 196,
            column: 48
          }
        },
        loc: {
          start: {
            line: 196,
            column: 60
          },
          end: {
            line: 213,
            column: 9
          }
        },
        line: 196
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 215,
            column: 4
          },
          end: {
            line: 215,
            column: 5
          }
        },
        loc: {
          start: {
            line: 215,
            column: 30
          },
          end: {
            line: 235,
            column: 5
          }
        },
        line: 215
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 216,
            column: 47
          },
          end: {
            line: 216,
            column: 48
          }
        },
        loc: {
          start: {
            line: 216,
            column: 60
          },
          end: {
            line: 234,
            column: 9
          }
        },
        line: 216
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 218,
            column: 29
          },
          end: {
            line: 218,
            column: 30
          }
        },
        loc: {
          start: {
            line: 218,
            column: 35
          },
          end: {
            line: 232,
            column: 13
          }
        },
        line: 218
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 227,
            column: 27
          },
          end: {
            line: 227,
            column: 28
          }
        },
        loc: {
          start: {
            line: 227,
            column: 33
          },
          end: {
            line: 230,
            column: 18
          }
        },
        line: 227
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 227,
            column: 65
          },
          end: {
            line: 227,
            column: 66
          }
        },
        loc: {
          start: {
            line: 227,
            column: 78
          },
          end: {
            line: 230,
            column: 17
          }
        },
        line: 227
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 229,
            column: 32
          },
          end: {
            line: 229,
            column: 33
          }
        },
        loc: {
          start: {
            line: 229,
            column: 38
          },
          end: {
            line: 229,
            column: 67
          }
        },
        line: 229
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 236,
            column: 4
          },
          end: {
            line: 236,
            column: 5
          }
        },
        loc: {
          start: {
            line: 236,
            column: 25
          },
          end: {
            line: 273,
            column: 5
          }
        },
        line: 236
      },
      "36": {
        name: "(anonymous_36)",
        decl: {
          start: {
            line: 237,
            column: 47
          },
          end: {
            line: 237,
            column: 48
          }
        },
        loc: {
          start: {
            line: 237,
            column: 60
          },
          end: {
            line: 272,
            column: 9
          }
        },
        line: 237
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 22
          },
          end: {
            line: 12,
            column: 3
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 23
          },
          end: {
            line: 2,
            column: 27
          }
        }, {
          start: {
            line: 2,
            column: 31
          },
          end: {
            line: 2,
            column: 51
          }
        }, {
          start: {
            line: 2,
            column: 57
          },
          end: {
            line: 12,
            column: 2
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 2,
            column: 57
          },
          end: {
            line: 12,
            column: 2
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 2,
            column: 74
          },
          end: {
            line: 9,
            column: 1
          }
        }, {
          start: {
            line: 9,
            column: 6
          },
          end: {
            line: 12,
            column: 1
          }
        }],
        line: 2
      },
      "2": {
        loc: {
          start: {
            line: 3,
            column: 4
          },
          end: {
            line: 3,
            column: 33
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 3,
            column: 4
          },
          end: {
            line: 3,
            column: 33
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 3
      },
      "3": {
        loc: {
          start: {
            line: 5,
            column: 4
          },
          end: {
            line: 7,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 5,
            column: 4
          },
          end: {
            line: 7,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 5
      },
      "4": {
        loc: {
          start: {
            line: 5,
            column: 8
          },
          end: {
            line: 5,
            column: 85
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 5,
            column: 8
          },
          end: {
            line: 5,
            column: 13
          }
        }, {
          start: {
            line: 5,
            column: 18
          },
          end: {
            line: 5,
            column: 84
          }
        }],
        line: 5
      },
      "5": {
        loc: {
          start: {
            line: 5,
            column: 18
          },
          end: {
            line: 5,
            column: 84
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 5,
            column: 34
          },
          end: {
            line: 5,
            column: 47
          }
        }, {
          start: {
            line: 5,
            column: 50
          },
          end: {
            line: 5,
            column: 84
          }
        }],
        line: 5
      },
      "6": {
        loc: {
          start: {
            line: 5,
            column: 50
          },
          end: {
            line: 5,
            column: 84
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 5,
            column: 50
          },
          end: {
            line: 5,
            column: 63
          }
        }, {
          start: {
            line: 5,
            column: 67
          },
          end: {
            line: 5,
            column: 84
          }
        }],
        line: 5
      },
      "7": {
        loc: {
          start: {
            line: 10,
            column: 4
          },
          end: {
            line: 10,
            column: 33
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 10,
            column: 4
          },
          end: {
            line: 10,
            column: 33
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 10
      },
      "8": {
        loc: {
          start: {
            line: 13,
            column: 25
          },
          end: {
            line: 17,
            column: 2
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 13,
            column: 26
          },
          end: {
            line: 13,
            column: 30
          }
        }, {
          start: {
            line: 13,
            column: 34
          },
          end: {
            line: 13,
            column: 57
          }
        }, {
          start: {
            line: 13,
            column: 63
          },
          end: {
            line: 17,
            column: 1
          }
        }],
        line: 13
      },
      "9": {
        loc: {
          start: {
            line: 13,
            column: 63
          },
          end: {
            line: 17,
            column: 1
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 13,
            column: 80
          },
          end: {
            line: 15,
            column: 1
          }
        }, {
          start: {
            line: 15,
            column: 5
          },
          end: {
            line: 17,
            column: 1
          }
        }],
        line: 13
      },
      "10": {
        loc: {
          start: {
            line: 18,
            column: 19
          },
          end: {
            line: 24,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 18,
            column: 20
          },
          end: {
            line: 18,
            column: 24
          }
        }, {
          start: {
            line: 18,
            column: 28
          },
          end: {
            line: 18,
            column: 45
          }
        }, {
          start: {
            line: 18,
            column: 50
          },
          end: {
            line: 24,
            column: 1
          }
        }],
        line: 18
      },
      "11": {
        loc: {
          start: {
            line: 19,
            column: 4
          },
          end: {
            line: 19,
            column: 42
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 19,
            column: 4
          },
          end: {
            line: 19,
            column: 42
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 19
      },
      "12": {
        loc: {
          start: {
            line: 19,
            column: 8
          },
          end: {
            line: 19,
            column: 29
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 19,
            column: 8
          },
          end: {
            line: 19,
            column: 11
          }
        }, {
          start: {
            line: 19,
            column: 15
          },
          end: {
            line: 19,
            column: 29
          }
        }],
        line: 19
      },
      "13": {
        loc: {
          start: {
            line: 21,
            column: 4
          },
          end: {
            line: 21,
            column: 141
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 21,
            column: 4
          },
          end: {
            line: 21,
            column: 141
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 21
      },
      "14": {
        loc: {
          start: {
            line: 21,
            column: 40
          },
          end: {
            line: 21,
            column: 141
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 21,
            column: 40
          },
          end: {
            line: 21,
            column: 141
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 21
      },
      "15": {
        loc: {
          start: {
            line: 21,
            column: 44
          },
          end: {
            line: 21,
            column: 107
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 21,
            column: 44
          },
          end: {
            line: 21,
            column: 59
          }
        }, {
          start: {
            line: 21,
            column: 63
          },
          end: {
            line: 21,
            column: 107
          }
        }],
        line: 21
      },
      "16": {
        loc: {
          start: {
            line: 25,
            column: 16
          },
          end: {
            line: 33,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 25,
            column: 17
          },
          end: {
            line: 25,
            column: 21
          }
        }, {
          start: {
            line: 25,
            column: 25
          },
          end: {
            line: 25,
            column: 39
          }
        }, {
          start: {
            line: 25,
            column: 44
          },
          end: {
            line: 33,
            column: 1
          }
        }],
        line: 25
      },
      "17": {
        loc: {
          start: {
            line: 26,
            column: 35
          },
          end: {
            line: 26,
            column: 109
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 26,
            column: 56
          },
          end: {
            line: 26,
            column: 61
          }
        }, {
          start: {
            line: 26,
            column: 64
          },
          end: {
            line: 26,
            column: 109
          }
        }],
        line: 26
      },
      "18": {
        loc: {
          start: {
            line: 27,
            column: 16
          },
          end: {
            line: 27,
            column: 34
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 27,
            column: 16
          },
          end: {
            line: 27,
            column: 17
          }
        }, {
          start: {
            line: 27,
            column: 22
          },
          end: {
            line: 27,
            column: 33
          }
        }],
        line: 27
      },
      "19": {
        loc: {
          start: {
            line: 30,
            column: 32
          },
          end: {
            line: 30,
            column: 115
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 30,
            column: 46
          },
          end: {
            line: 30,
            column: 67
          }
        }, {
          start: {
            line: 30,
            column: 70
          },
          end: {
            line: 30,
            column: 115
          }
        }],
        line: 30
      },
      "20": {
        loc: {
          start: {
            line: 31,
            column: 51
          },
          end: {
            line: 31,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 31,
            column: 51
          },
          end: {
            line: 31,
            column: 61
          }
        }, {
          start: {
            line: 31,
            column: 65
          },
          end: {
            line: 31,
            column: 67
          }
        }],
        line: 31
      },
      "21": {
        loc: {
          start: {
            line: 40,
            column: 8
          },
          end: {
            line: 42,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 40,
            column: 8
          },
          end: {
            line: 42,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 40
      },
      "22": {
        loc: {
          start: {
            line: 58,
            column: 20
          },
          end: {
            line: 64,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 58,
            column: 20
          },
          end: {
            line: 64,
            column: 21
          }
        }, {
          start: {
            line: 61,
            column: 25
          },
          end: {
            line: 64,
            column: 21
          }
        }],
        line: 58
      },
      "23": {
        loc: {
          start: {
            line: 88,
            column: 12
          },
          end: {
            line: 90,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 88,
            column: 12
          },
          end: {
            line: 90,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 88
      },
      "24": {
        loc: {
          start: {
            line: 148,
            column: 12
          },
          end: {
            line: 150,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 148,
            column: 12
          },
          end: {
            line: 150,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 148
      },
      "25": {
        loc: {
          start: {
            line: 223,
            column: 16
          },
          end: {
            line: 225,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 223,
            column: 16
          },
          end: {
            line: 225,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 223
      },
      "26": {
        loc: {
          start: {
            line: 240,
            column: 12
          },
          end: {
            line: 242,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 240,
            column: 12
          },
          end: {
            line: 242,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 240
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0, 0],
      "9": [0, 0],
      "10": [0, 0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/yusukeyoshioka/projects/youtube/ai-chat/ai-chat-api/src/lib/dataRetention.ts",
      mappings: "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",
      names: [],
      sources: ["/Users/yusukeyoshioka/projects/youtube/ai-chat/ai-chat-api/src/lib/dataRetention.ts"],
      sourcesContent: ["import { prisma } from './prisma';\nimport * as Sentry from '@sentry/node';\n\nexport class DataRetentionService {\n  private static instance: DataRetentionService;\n\n  static getInstance(): DataRetentionService {\n    if (!DataRetentionService.instance) {\n      DataRetentionService.instance = new DataRetentionService();\n    }\n    return DataRetentionService.instance;\n  }\n\n  async executeRetentionPolicy(): Promise<void> {\n    console.log('Starting data retention policy execution...');\n\n    try {\n      const results = await Promise.allSettled([\n        this.cleanupOldMessages(),\n        this.cleanupInactiveAnalytics(),\n        this.cleanupDeletedAccounts(),\n        this.cleanupServerLogs(),\n      ]);\n\n      // Log results\n      results.forEach((result, index) => {\n        const operations = ['messages', 'analytics', 'accounts', 'logs'];\n        if (result.status === 'fulfilled') {\n          console.log(\n            `\u2705 ${operations[index]} cleanup completed: ${result.value} records processed`\n          );\n        } else {\n          console.error(\n            `\u274C ${operations[index]} cleanup failed:`,\n            result.reason\n          );\n          Sentry.captureException(result.reason);\n        }\n      });\n\n      console.log('Data retention policy execution completed');\n    } catch (error) {\n      console.error('Data retention policy execution failed:', error);\n      Sentry.captureException(error);\n      throw error;\n    }\n  }\n\n  private async cleanupOldMessages(): Promise<number> {\n    const twoYearsAgo = new Date();\n    twoYearsAgo.setFullYear(twoYearsAgo.getFullYear() - 2);\n\n    // Delete messages from inactive organizations (no activity in 2 years)\n    const inactiveOrgs = await prisma.company.findMany({\n      where: {\n        updatedAt: {\n          lt: twoYearsAgo,\n        },\n      },\n      select: { id: true },\n    });\n\n    if (inactiveOrgs.length === 0) {\n      return 0;\n    }\n\n    const orgIds = inactiveOrgs.map((org) => org.id);\n\n    // Delete messages from inactive organizations\n    const deletedMessages = await prisma.chatLog.deleteMany({\n      where: {\n        widget: {\n          company: {\n            id: {\n              in: orgIds,\n            },\n          },\n        },\n      },\n    });\n\n    return deletedMessages.count;\n  }\n\n  private async cleanupInactiveAnalytics(): Promise<number> {\n    const oneYearAgo = new Date();\n    oneYearAgo.setFullYear(oneYearAgo.getFullYear() - 1);\n\n    // This would be specific to your analytics table structure\n    // For now, we'll assume there's an analytics table\n    try {\n      const deletedAnalytics = await prisma.$executeRaw`\n        DELETE FROM analytics \n        WHERE created_at < ${oneYearAgo} \n        AND aggregated = false\n      `;\n\n      return Number(deletedAnalytics);\n    } catch (error) {\n      // If analytics table doesn't exist, return 0\n      console.log('Analytics table not found or query failed, skipping...');\n      return 0;\n    }\n  }\n\n  private async cleanupDeletedAccounts(): Promise<number> {\n    const thirtyDaysAgo = new Date();\n    thirtyDaysAgo.setDate(thirtyDaysAgo.getDate() - 30);\n\n    // Find companies that have been inactive for more than 30 days\n    // Since there's no deletedAt field, we'll use updatedAt\n    const companiesForDeletion = await prisma.company.findMany({\n      where: {\n        updatedAt: {\n          lt: thirtyDaysAgo,\n        },\n        // Additional check for inactive companies\n        widgets: {\n          none: {\n            isActive: true,\n          },\n        },\n      },\n      select: { id: true },\n    });\n\n    if (companiesForDeletion.length === 0) {\n      return 0;\n    }\n\n    const companyIds = companiesForDeletion.map((c) => c.id);\n\n    // Delete all related data in correct order (respecting foreign key constraints)\n    const deletionResults = await prisma.$transaction(async (tx) => {\n      // Delete messages first\n      const messagesDeleted = await tx.chatLog.deleteMany({\n        where: {\n          widget: {\n            company: {\n              id: { in: companyIds },\n            },\n          },\n        },\n      });\n\n      // Delete widgets\n      const widgetsDeleted = await tx.widget.deleteMany({\n        where: {\n          company: {\n            id: { in: companyIds },\n          },\n        },\n      });\n\n      // Delete users\n      const usersDeleted = await tx.user.deleteMany({\n        where: {\n          companyId: { in: companyIds },\n        },\n      });\n\n      // Finally delete companies\n      const companiesDeleted = await tx.company.deleteMany({\n        where: {\n          id: { in: companyIds },\n        },\n      });\n\n      return {\n        messages: messagesDeleted.count,\n        widgets: widgetsDeleted.count,\n        users: usersDeleted.count,\n        companies: companiesDeleted.count,\n      };\n    });\n\n    console.log('Account cleanup completed:', deletionResults);\n    return deletionResults.companies;\n  }\n\n  private async cleanupServerLogs(): Promise<number> {\n    const ninetyDaysAgo = new Date();\n    ninetyDaysAgo.setDate(ninetyDaysAgo.getDate() - 90);\n\n    // This would typically be handled by log rotation or external log management\n    // For demonstration, we'll assume there's a logs table\n    try {\n      const deletedLogs = await prisma.$executeRaw`\n        DELETE FROM server_logs \n        WHERE created_at < ${ninetyDaysAgo}\n      `;\n\n      return Number(deletedLogs);\n    } catch (error) {\n      // If logs table doesn't exist, return 0\n      console.log('Server logs table not found, skipping...');\n      return 0;\n    }\n  }\n\n  async scheduleRetentionPolicy(): Promise<void> {\n    // Run retention policy daily at 2 AM\n    const runDaily = () => {\n      const now = new Date();\n      const nextRun = new Date();\n      nextRun.setHours(2, 0, 0, 0);\n\n      // If it's already past 2 AM today, schedule for tomorrow\n      if (now > nextRun) {\n        nextRun.setDate(nextRun.getDate() + 1);\n      }\n\n      const msUntilNext = nextRun.getTime() - now.getTime();\n\n      setTimeout(async () => {\n        await this.executeRetentionPolicy();\n        setInterval(() => this.executeRetentionPolicy(), 24 * 60 * 60 * 1000); // 24 hours\n      }, msUntilNext);\n\n      console.log(\n        `Data retention policy scheduled for: ${nextRun.toISOString()}`\n      );\n    };\n\n    runDaily();\n  }\n\n  async getRetentionStatus(): Promise<{\n    lastRun?: Date;\n    nextRun: Date;\n    policies: {\n      name: string;\n      description: string;\n      retentionPeriod: string;\n      status: 'active' | 'inactive';\n    }[];\n  }> {\n    const nextRun = new Date();\n    nextRun.setHours(2, 0, 0, 0);\n    if (new Date() > nextRun) {\n      nextRun.setDate(nextRun.getDate() + 1);\n    }\n\n    return {\n      nextRun,\n      policies: [\n        {\n          name: 'Chat Messages',\n          description: 'Delete messages from inactive organizations',\n          retentionPeriod: '2 years',\n          status: 'active',\n        },\n        {\n          name: 'Analytics Data',\n          description: 'Delete raw analytics data after aggregation',\n          retentionPeriod: '1 year',\n          status: 'active',\n        },\n        {\n          name: 'Deleted Accounts',\n          description: 'Permanently delete account data after grace period',\n          retentionPeriod: '30 days',\n          status: 'active',\n        },\n        {\n          name: 'Server Logs',\n          description: 'Delete old server logs and access logs',\n          retentionPeriod: '90 days',\n          status: 'active',\n        },\n      ],\n    };\n  }\n}\n\nexport const dataRetentionService = DataRetentionService.getInstance();\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "a38e423807641b4063e496b6ccd0a5cf71807dac"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_23sfehjr2 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_23sfehjr2();
var __createBinding =
/* istanbul ignore next */
(cov_23sfehjr2().s[0]++,
/* istanbul ignore next */
(cov_23sfehjr2().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_23sfehjr2().b[0][1]++, this.__createBinding) ||
/* istanbul ignore next */
(cov_23sfehjr2().b[0][2]++, Object.create ?
/* istanbul ignore next */
(cov_23sfehjr2().b[1][0]++, function (o, m, k, k2) {
  /* istanbul ignore next */
  cov_23sfehjr2().f[0]++;
  cov_23sfehjr2().s[1]++;
  if (k2 === undefined) {
    /* istanbul ignore next */
    cov_23sfehjr2().b[2][0]++;
    cov_23sfehjr2().s[2]++;
    k2 = k;
  } else
  /* istanbul ignore next */
  {
    cov_23sfehjr2().b[2][1]++;
  }
  var desc =
  /* istanbul ignore next */
  (cov_23sfehjr2().s[3]++, Object.getOwnPropertyDescriptor(m, k));
  /* istanbul ignore next */
  cov_23sfehjr2().s[4]++;
  if (
  /* istanbul ignore next */
  (cov_23sfehjr2().b[4][0]++, !desc) ||
  /* istanbul ignore next */
  (cov_23sfehjr2().b[4][1]++, "get" in desc ?
  /* istanbul ignore next */
  (cov_23sfehjr2().b[5][0]++, !m.__esModule) :
  /* istanbul ignore next */
  (cov_23sfehjr2().b[5][1]++,
  /* istanbul ignore next */
  (cov_23sfehjr2().b[6][0]++, desc.writable) ||
  /* istanbul ignore next */
  (cov_23sfehjr2().b[6][1]++, desc.configurable)))) {
    /* istanbul ignore next */
    cov_23sfehjr2().b[3][0]++;
    cov_23sfehjr2().s[5]++;
    desc = {
      enumerable: true,
      get: function () {
        /* istanbul ignore next */
        cov_23sfehjr2().f[1]++;
        cov_23sfehjr2().s[6]++;
        return m[k];
      }
    };
  } else
  /* istanbul ignore next */
  {
    cov_23sfehjr2().b[3][1]++;
  }
  cov_23sfehjr2().s[7]++;
  Object.defineProperty(o, k2, desc);
}) :
/* istanbul ignore next */
(cov_23sfehjr2().b[1][1]++, function (o, m, k, k2) {
  /* istanbul ignore next */
  cov_23sfehjr2().f[2]++;
  cov_23sfehjr2().s[8]++;
  if (k2 === undefined) {
    /* istanbul ignore next */
    cov_23sfehjr2().b[7][0]++;
    cov_23sfehjr2().s[9]++;
    k2 = k;
  } else
  /* istanbul ignore next */
  {
    cov_23sfehjr2().b[7][1]++;
  }
  cov_23sfehjr2().s[10]++;
  o[k2] = m[k];
})));
var __setModuleDefault =
/* istanbul ignore next */
(cov_23sfehjr2().s[11]++,
/* istanbul ignore next */
(cov_23sfehjr2().b[8][0]++, this) &&
/* istanbul ignore next */
(cov_23sfehjr2().b[8][1]++, this.__setModuleDefault) ||
/* istanbul ignore next */
(cov_23sfehjr2().b[8][2]++, Object.create ?
/* istanbul ignore next */
(cov_23sfehjr2().b[9][0]++, function (o, v) {
  /* istanbul ignore next */
  cov_23sfehjr2().f[3]++;
  cov_23sfehjr2().s[12]++;
  Object.defineProperty(o, "default", {
    enumerable: true,
    value: v
  });
}) :
/* istanbul ignore next */
(cov_23sfehjr2().b[9][1]++, function (o, v) {
  /* istanbul ignore next */
  cov_23sfehjr2().f[4]++;
  cov_23sfehjr2().s[13]++;
  o["default"] = v;
})));
var __importStar =
/* istanbul ignore next */
(cov_23sfehjr2().s[14]++,
/* istanbul ignore next */
(cov_23sfehjr2().b[10][0]++, this) &&
/* istanbul ignore next */
(cov_23sfehjr2().b[10][1]++, this.__importStar) ||
/* istanbul ignore next */
(cov_23sfehjr2().b[10][2]++, function (mod) {
  /* istanbul ignore next */
  cov_23sfehjr2().f[5]++;
  cov_23sfehjr2().s[15]++;
  if (
  /* istanbul ignore next */
  (cov_23sfehjr2().b[12][0]++, mod) &&
  /* istanbul ignore next */
  (cov_23sfehjr2().b[12][1]++, mod.__esModule)) {
    /* istanbul ignore next */
    cov_23sfehjr2().b[11][0]++;
    cov_23sfehjr2().s[16]++;
    return mod;
  } else
  /* istanbul ignore next */
  {
    cov_23sfehjr2().b[11][1]++;
  }
  var result =
  /* istanbul ignore next */
  (cov_23sfehjr2().s[17]++, {});
  /* istanbul ignore next */
  cov_23sfehjr2().s[18]++;
  if (mod != null) {
    /* istanbul ignore next */
    cov_23sfehjr2().b[13][0]++;
    cov_23sfehjr2().s[19]++;
    for (var k in mod) {
      /* istanbul ignore next */
      cov_23sfehjr2().s[20]++;
      if (
      /* istanbul ignore next */
      (cov_23sfehjr2().b[15][0]++, k !== "default") &&
      /* istanbul ignore next */
      (cov_23sfehjr2().b[15][1]++, Object.prototype.hasOwnProperty.call(mod, k))) {
        /* istanbul ignore next */
        cov_23sfehjr2().b[14][0]++;
        cov_23sfehjr2().s[21]++;
        __createBinding(result, mod, k);
      } else
      /* istanbul ignore next */
      {
        cov_23sfehjr2().b[14][1]++;
      }
    }
  } else
  /* istanbul ignore next */
  {
    cov_23sfehjr2().b[13][1]++;
  }
  cov_23sfehjr2().s[22]++;
  __setModuleDefault(result, mod);
  /* istanbul ignore next */
  cov_23sfehjr2().s[23]++;
  return result;
}));
var __awaiter =
/* istanbul ignore next */
(cov_23sfehjr2().s[24]++,
/* istanbul ignore next */
(cov_23sfehjr2().b[16][0]++, this) &&
/* istanbul ignore next */
(cov_23sfehjr2().b[16][1]++, this.__awaiter) ||
/* istanbul ignore next */
(cov_23sfehjr2().b[16][2]++, function (thisArg, _arguments, P, generator) {
  /* istanbul ignore next */
  cov_23sfehjr2().f[6]++;
  function adopt(value) {
    /* istanbul ignore next */
    cov_23sfehjr2().f[7]++;
    cov_23sfehjr2().s[25]++;
    return value instanceof P ?
    /* istanbul ignore next */
    (cov_23sfehjr2().b[17][0]++, value) :
    /* istanbul ignore next */
    (cov_23sfehjr2().b[17][1]++, new P(function (resolve) {
      /* istanbul ignore next */
      cov_23sfehjr2().f[8]++;
      cov_23sfehjr2().s[26]++;
      resolve(value);
    }));
  }
  /* istanbul ignore next */
  cov_23sfehjr2().s[27]++;
  return new (
  /* istanbul ignore next */
  (cov_23sfehjr2().b[18][0]++, P) ||
  /* istanbul ignore next */
  (cov_23sfehjr2().b[18][1]++, P = Promise))(function (resolve, reject) {
    /* istanbul ignore next */
    cov_23sfehjr2().f[9]++;
    function fulfilled(value) {
      /* istanbul ignore next */
      cov_23sfehjr2().f[10]++;
      cov_23sfehjr2().s[28]++;
      try {
        /* istanbul ignore next */
        cov_23sfehjr2().s[29]++;
        step(generator.next(value));
      } catch (e) {
        /* istanbul ignore next */
        cov_23sfehjr2().s[30]++;
        reject(e);
      }
    }
    function rejected(value) {
      /* istanbul ignore next */
      cov_23sfehjr2().f[11]++;
      cov_23sfehjr2().s[31]++;
      try {
        /* istanbul ignore next */
        cov_23sfehjr2().s[32]++;
        step(generator["throw"](value));
      } catch (e) {
        /* istanbul ignore next */
        cov_23sfehjr2().s[33]++;
        reject(e);
      }
    }
    function step(result) {
      /* istanbul ignore next */
      cov_23sfehjr2().f[12]++;
      cov_23sfehjr2().s[34]++;
      result.done ?
      /* istanbul ignore next */
      (cov_23sfehjr2().b[19][0]++, resolve(result.value)) :
      /* istanbul ignore next */
      (cov_23sfehjr2().b[19][1]++, adopt(result.value).then(fulfilled, rejected));
    }
    /* istanbul ignore next */
    cov_23sfehjr2().s[35]++;
    step((generator = generator.apply(thisArg,
    /* istanbul ignore next */
    (cov_23sfehjr2().b[20][0]++, _arguments) ||
    /* istanbul ignore next */
    (cov_23sfehjr2().b[20][1]++, []))).next());
  });
}));
/* istanbul ignore next */
cov_23sfehjr2().s[36]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_23sfehjr2().s[37]++;
exports.dataRetentionService = exports.DataRetentionService = void 0;
const prisma_1 =
/* istanbul ignore next */
(cov_23sfehjr2().s[38]++, require("./prisma"));
const Sentry =
/* istanbul ignore next */
(cov_23sfehjr2().s[39]++, __importStar(require("@sentry/node")));
class DataRetentionService {
  static getInstance() {
    /* istanbul ignore next */
    cov_23sfehjr2().f[13]++;
    cov_23sfehjr2().s[40]++;
    if (!DataRetentionService.instance) {
      /* istanbul ignore next */
      cov_23sfehjr2().b[21][0]++;
      cov_23sfehjr2().s[41]++;
      DataRetentionService.instance = new DataRetentionService();
    } else
    /* istanbul ignore next */
    {
      cov_23sfehjr2().b[21][1]++;
    }
    cov_23sfehjr2().s[42]++;
    return DataRetentionService.instance;
  }
  executeRetentionPolicy() {
    /* istanbul ignore next */
    cov_23sfehjr2().f[14]++;
    cov_23sfehjr2().s[43]++;
    return __awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_23sfehjr2().f[15]++;
      cov_23sfehjr2().s[44]++;
      console.log('Starting data retention policy execution...');
      /* istanbul ignore next */
      cov_23sfehjr2().s[45]++;
      try {
        const results =
        /* istanbul ignore next */
        (cov_23sfehjr2().s[46]++, yield Promise.allSettled([this.cleanupOldMessages(), this.cleanupInactiveAnalytics(), this.cleanupDeletedAccounts(), this.cleanupServerLogs()]));
        // Log results
        /* istanbul ignore next */
        cov_23sfehjr2().s[47]++;
        results.forEach((result, index) => {
          /* istanbul ignore next */
          cov_23sfehjr2().f[16]++;
          const operations =
          /* istanbul ignore next */
          (cov_23sfehjr2().s[48]++, ['messages', 'analytics', 'accounts', 'logs']);
          /* istanbul ignore next */
          cov_23sfehjr2().s[49]++;
          if (result.status === 'fulfilled') {
            /* istanbul ignore next */
            cov_23sfehjr2().b[22][0]++;
            cov_23sfehjr2().s[50]++;
            console.log(`✅ ${operations[index]} cleanup completed: ${result.value} records processed`);
          } else {
            /* istanbul ignore next */
            cov_23sfehjr2().b[22][1]++;
            cov_23sfehjr2().s[51]++;
            console.error(`❌ ${operations[index]} cleanup failed:`, result.reason);
            /* istanbul ignore next */
            cov_23sfehjr2().s[52]++;
            Sentry.captureException(result.reason);
          }
        });
        /* istanbul ignore next */
        cov_23sfehjr2().s[53]++;
        console.log('Data retention policy execution completed');
      } catch (error) {
        /* istanbul ignore next */
        cov_23sfehjr2().s[54]++;
        console.error('Data retention policy execution failed:', error);
        /* istanbul ignore next */
        cov_23sfehjr2().s[55]++;
        Sentry.captureException(error);
        /* istanbul ignore next */
        cov_23sfehjr2().s[56]++;
        throw error;
      }
    });
  }
  cleanupOldMessages() {
    /* istanbul ignore next */
    cov_23sfehjr2().f[17]++;
    cov_23sfehjr2().s[57]++;
    return __awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_23sfehjr2().f[18]++;
      const twoYearsAgo =
      /* istanbul ignore next */
      (cov_23sfehjr2().s[58]++, new Date());
      /* istanbul ignore next */
      cov_23sfehjr2().s[59]++;
      twoYearsAgo.setFullYear(twoYearsAgo.getFullYear() - 2);
      // Delete messages from inactive organizations (no activity in 2 years)
      const inactiveOrgs =
      /* istanbul ignore next */
      (cov_23sfehjr2().s[60]++, yield prisma_1.prisma.company.findMany({
        where: {
          updatedAt: {
            lt: twoYearsAgo
          }
        },
        select: {
          id: true
        }
      }));
      /* istanbul ignore next */
      cov_23sfehjr2().s[61]++;
      if (inactiveOrgs.length === 0) {
        /* istanbul ignore next */
        cov_23sfehjr2().b[23][0]++;
        cov_23sfehjr2().s[62]++;
        return 0;
      } else
      /* istanbul ignore next */
      {
        cov_23sfehjr2().b[23][1]++;
      }
      const orgIds =
      /* istanbul ignore next */
      (cov_23sfehjr2().s[63]++, inactiveOrgs.map(org => {
        /* istanbul ignore next */
        cov_23sfehjr2().f[19]++;
        cov_23sfehjr2().s[64]++;
        return org.id;
      }));
      // Delete messages from inactive organizations
      const deletedMessages =
      /* istanbul ignore next */
      (cov_23sfehjr2().s[65]++, yield prisma_1.prisma.chatLog.deleteMany({
        where: {
          widget: {
            company: {
              id: {
                in: orgIds
              }
            }
          }
        }
      }));
      /* istanbul ignore next */
      cov_23sfehjr2().s[66]++;
      return deletedMessages.count;
    });
  }
  cleanupInactiveAnalytics() {
    /* istanbul ignore next */
    cov_23sfehjr2().f[20]++;
    cov_23sfehjr2().s[67]++;
    return __awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_23sfehjr2().f[21]++;
      const oneYearAgo =
      /* istanbul ignore next */
      (cov_23sfehjr2().s[68]++, new Date());
      /* istanbul ignore next */
      cov_23sfehjr2().s[69]++;
      oneYearAgo.setFullYear(oneYearAgo.getFullYear() - 1);
      // This would be specific to your analytics table structure
      // For now, we'll assume there's an analytics table
      /* istanbul ignore next */
      cov_23sfehjr2().s[70]++;
      try {
        const deletedAnalytics =
        /* istanbul ignore next */
        (cov_23sfehjr2().s[71]++, yield prisma_1.prisma.$executeRaw`
        DELETE FROM analytics 
        WHERE created_at < ${oneYearAgo} 
        AND aggregated = false
      `);
        /* istanbul ignore next */
        cov_23sfehjr2().s[72]++;
        return Number(deletedAnalytics);
      } catch (error) {
        /* istanbul ignore next */
        cov_23sfehjr2().s[73]++;
        // If analytics table doesn't exist, return 0
        console.log('Analytics table not found or query failed, skipping...');
        /* istanbul ignore next */
        cov_23sfehjr2().s[74]++;
        return 0;
      }
    });
  }
  cleanupDeletedAccounts() {
    /* istanbul ignore next */
    cov_23sfehjr2().f[22]++;
    cov_23sfehjr2().s[75]++;
    return __awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_23sfehjr2().f[23]++;
      const thirtyDaysAgo =
      /* istanbul ignore next */
      (cov_23sfehjr2().s[76]++, new Date());
      /* istanbul ignore next */
      cov_23sfehjr2().s[77]++;
      thirtyDaysAgo.setDate(thirtyDaysAgo.getDate() - 30);
      // Find companies that have been inactive for more than 30 days
      // Since there's no deletedAt field, we'll use updatedAt
      const companiesForDeletion =
      /* istanbul ignore next */
      (cov_23sfehjr2().s[78]++, yield prisma_1.prisma.company.findMany({
        where: {
          updatedAt: {
            lt: thirtyDaysAgo
          },
          // Additional check for inactive companies
          widgets: {
            none: {
              isActive: true
            }
          }
        },
        select: {
          id: true
        }
      }));
      /* istanbul ignore next */
      cov_23sfehjr2().s[79]++;
      if (companiesForDeletion.length === 0) {
        /* istanbul ignore next */
        cov_23sfehjr2().b[24][0]++;
        cov_23sfehjr2().s[80]++;
        return 0;
      } else
      /* istanbul ignore next */
      {
        cov_23sfehjr2().b[24][1]++;
      }
      const companyIds =
      /* istanbul ignore next */
      (cov_23sfehjr2().s[81]++, companiesForDeletion.map(c => {
        /* istanbul ignore next */
        cov_23sfehjr2().f[24]++;
        cov_23sfehjr2().s[82]++;
        return c.id;
      }));
      // Delete all related data in correct order (respecting foreign key constraints)
      const deletionResults =
      /* istanbul ignore next */
      (cov_23sfehjr2().s[83]++, yield prisma_1.prisma.$transaction(tx => {
        /* istanbul ignore next */
        cov_23sfehjr2().f[25]++;
        cov_23sfehjr2().s[84]++;
        return __awaiter(this, void 0, void 0, function* () {
          /* istanbul ignore next */
          cov_23sfehjr2().f[26]++;
          // Delete messages first
          const messagesDeleted =
          /* istanbul ignore next */
          (cov_23sfehjr2().s[85]++, yield tx.chatLog.deleteMany({
            where: {
              widget: {
                company: {
                  id: {
                    in: companyIds
                  }
                }
              }
            }
          }));
          // Delete widgets
          const widgetsDeleted =
          /* istanbul ignore next */
          (cov_23sfehjr2().s[86]++, yield tx.widget.deleteMany({
            where: {
              company: {
                id: {
                  in: companyIds
                }
              }
            }
          }));
          // Delete users
          const usersDeleted =
          /* istanbul ignore next */
          (cov_23sfehjr2().s[87]++, yield tx.user.deleteMany({
            where: {
              companyId: {
                in: companyIds
              }
            }
          }));
          // Finally delete companies
          const companiesDeleted =
          /* istanbul ignore next */
          (cov_23sfehjr2().s[88]++, yield tx.company.deleteMany({
            where: {
              id: {
                in: companyIds
              }
            }
          }));
          /* istanbul ignore next */
          cov_23sfehjr2().s[89]++;
          return {
            messages: messagesDeleted.count,
            widgets: widgetsDeleted.count,
            users: usersDeleted.count,
            companies: companiesDeleted.count
          };
        });
      }));
      /* istanbul ignore next */
      cov_23sfehjr2().s[90]++;
      console.log('Account cleanup completed:', deletionResults);
      /* istanbul ignore next */
      cov_23sfehjr2().s[91]++;
      return deletionResults.companies;
    });
  }
  cleanupServerLogs() {
    /* istanbul ignore next */
    cov_23sfehjr2().f[27]++;
    cov_23sfehjr2().s[92]++;
    return __awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_23sfehjr2().f[28]++;
      const ninetyDaysAgo =
      /* istanbul ignore next */
      (cov_23sfehjr2().s[93]++, new Date());
      /* istanbul ignore next */
      cov_23sfehjr2().s[94]++;
      ninetyDaysAgo.setDate(ninetyDaysAgo.getDate() - 90);
      // This would typically be handled by log rotation or external log management
      // For demonstration, we'll assume there's a logs table
      /* istanbul ignore next */
      cov_23sfehjr2().s[95]++;
      try {
        const deletedLogs =
        /* istanbul ignore next */
        (cov_23sfehjr2().s[96]++, yield prisma_1.prisma.$executeRaw`
        DELETE FROM server_logs 
        WHERE created_at < ${ninetyDaysAgo}
      `);
        /* istanbul ignore next */
        cov_23sfehjr2().s[97]++;
        return Number(deletedLogs);
      } catch (error) {
        /* istanbul ignore next */
        cov_23sfehjr2().s[98]++;
        // If logs table doesn't exist, return 0
        console.log('Server logs table not found, skipping...');
        /* istanbul ignore next */
        cov_23sfehjr2().s[99]++;
        return 0;
      }
    });
  }
  scheduleRetentionPolicy() {
    /* istanbul ignore next */
    cov_23sfehjr2().f[29]++;
    cov_23sfehjr2().s[100]++;
    return __awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_23sfehjr2().f[30]++;
      cov_23sfehjr2().s[101]++;
      // Run retention policy daily at 2 AM
      const runDaily = () => {
        /* istanbul ignore next */
        cov_23sfehjr2().f[31]++;
        const now =
        /* istanbul ignore next */
        (cov_23sfehjr2().s[102]++, new Date());
        const nextRun =
        /* istanbul ignore next */
        (cov_23sfehjr2().s[103]++, new Date());
        /* istanbul ignore next */
        cov_23sfehjr2().s[104]++;
        nextRun.setHours(2, 0, 0, 0);
        // If it's already past 2 AM today, schedule for tomorrow
        /* istanbul ignore next */
        cov_23sfehjr2().s[105]++;
        if (now > nextRun) {
          /* istanbul ignore next */
          cov_23sfehjr2().b[25][0]++;
          cov_23sfehjr2().s[106]++;
          nextRun.setDate(nextRun.getDate() + 1);
        } else
        /* istanbul ignore next */
        {
          cov_23sfehjr2().b[25][1]++;
        }
        const msUntilNext =
        /* istanbul ignore next */
        (cov_23sfehjr2().s[107]++, nextRun.getTime() - now.getTime());
        /* istanbul ignore next */
        cov_23sfehjr2().s[108]++;
        setTimeout(() => {
          /* istanbul ignore next */
          cov_23sfehjr2().f[32]++;
          cov_23sfehjr2().s[109]++;
          return __awaiter(this, void 0, void 0, function* () {
            /* istanbul ignore next */
            cov_23sfehjr2().f[33]++;
            cov_23sfehjr2().s[110]++;
            yield this.executeRetentionPolicy();
            /* istanbul ignore next */
            cov_23sfehjr2().s[111]++;
            setInterval(() => {
              /* istanbul ignore next */
              cov_23sfehjr2().f[34]++;
              cov_23sfehjr2().s[112]++;
              return this.executeRetentionPolicy();
            }, 24 * 60 * 60 * 1000); // 24 hours
          });
        }, msUntilNext);
        /* istanbul ignore next */
        cov_23sfehjr2().s[113]++;
        console.log(`Data retention policy scheduled for: ${nextRun.toISOString()}`);
      };
      /* istanbul ignore next */
      cov_23sfehjr2().s[114]++;
      runDaily();
    });
  }
  getRetentionStatus() {
    /* istanbul ignore next */
    cov_23sfehjr2().f[35]++;
    cov_23sfehjr2().s[115]++;
    return __awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_23sfehjr2().f[36]++;
      const nextRun =
      /* istanbul ignore next */
      (cov_23sfehjr2().s[116]++, new Date());
      /* istanbul ignore next */
      cov_23sfehjr2().s[117]++;
      nextRun.setHours(2, 0, 0, 0);
      /* istanbul ignore next */
      cov_23sfehjr2().s[118]++;
      if (new Date() > nextRun) {
        /* istanbul ignore next */
        cov_23sfehjr2().b[26][0]++;
        cov_23sfehjr2().s[119]++;
        nextRun.setDate(nextRun.getDate() + 1);
      } else
      /* istanbul ignore next */
      {
        cov_23sfehjr2().b[26][1]++;
      }
      cov_23sfehjr2().s[120]++;
      return {
        nextRun,
        policies: [{
          name: 'Chat Messages',
          description: 'Delete messages from inactive organizations',
          retentionPeriod: '2 years',
          status: 'active'
        }, {
          name: 'Analytics Data',
          description: 'Delete raw analytics data after aggregation',
          retentionPeriod: '1 year',
          status: 'active'
        }, {
          name: 'Deleted Accounts',
          description: 'Permanently delete account data after grace period',
          retentionPeriod: '30 days',
          status: 'active'
        }, {
          name: 'Server Logs',
          description: 'Delete old server logs and access logs',
          retentionPeriod: '90 days',
          status: 'active'
        }]
      };
    });
  }
}
/* istanbul ignore next */
cov_23sfehjr2().s[121]++;
exports.DataRetentionService = DataRetentionService;
/* istanbul ignore next */
cov_23sfehjr2().s[122]++;
exports.dataRetentionService = DataRetentionService.getInstance();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,