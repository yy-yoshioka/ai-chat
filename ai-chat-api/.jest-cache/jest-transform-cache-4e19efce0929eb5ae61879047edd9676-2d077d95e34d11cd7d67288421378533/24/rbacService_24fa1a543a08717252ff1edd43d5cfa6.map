{"file":"/Users/yusukeyoshioka/projects/youtube/ai-chat/ai-chat-api/src/services/rbacService.ts","mappings":"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","names":[],"sources":["/Users/yusukeyoshioka/projects/youtube/ai-chat/ai-chat-api/src/services/rbacService.ts"],"sourcesContent":["import { prisma } from '../lib/prisma';\nimport { Role, Permission } from '@prisma/client';\n\n// Default role permissions mapping\nconst DEFAULT_ROLE_PERMISSIONS: Record<Role, Permission[]> = {\n  owner: [\n    'ORG_READ',\n    'ORG_WRITE',\n    'ORG_DELETE',\n    'ORG_INVITE_USERS',\n    'WIDGET_READ',\n    'WIDGET_WRITE',\n    'WIDGET_DELETE',\n    'WIDGET_CONFIGURE',\n    'CHAT_READ',\n    'CHAT_MODERATE',\n    'CHAT_EXPORT',\n    'KB_READ',\n    'KB_WRITE',\n    'KB_DELETE',\n    'KB_TRAIN',\n    'ANALYTICS_READ',\n    'ANALYTICS_EXPORT',\n    'SETTINGS_READ',\n    'SETTINGS_WRITE',\n    'BILLING_READ',\n    'BILLING_WRITE',\n  ] as Permission[],\n\n  org_admin: [\n    'ORG_READ',\n    'ORG_WRITE',\n    'ORG_INVITE_USERS',\n    'WIDGET_READ',\n    'WIDGET_WRITE',\n    'WIDGET_DELETE',\n    'WIDGET_CONFIGURE',\n    'CHAT_READ',\n    'CHAT_MODERATE',\n    'CHAT_EXPORT',\n    'KB_READ',\n    'KB_WRITE',\n    'KB_DELETE',\n    'KB_TRAIN',\n    'ANALYTICS_READ',\n    'ANALYTICS_EXPORT',\n    'SETTINGS_READ',\n    'SETTINGS_WRITE',\n  ] as Permission[],\n\n  editor: [\n    'ORG_READ',\n    'WIDGET_READ',\n    'WIDGET_WRITE',\n    'WIDGET_CONFIGURE',\n    'CHAT_READ',\n    'CHAT_MODERATE',\n    'KB_READ',\n    'KB_WRITE',\n    'KB_TRAIN',\n    'ANALYTICS_READ',\n    'SETTINGS_READ',\n  ] as Permission[],\n\n  viewer: [\n    'ORG_READ',\n    'WIDGET_READ',\n    'CHAT_READ',\n    'KB_READ',\n    'ANALYTICS_READ',\n    'SETTINGS_READ',\n  ] as Permission[],\n\n  api_user: [\n    'WIDGET_READ',\n    'WIDGET_CONFIGURE',\n    'CHAT_READ',\n    'KB_READ',\n  ] as Permission[],\n\n  read_only: [\n    'ORG_READ',\n    'WIDGET_READ',\n    'CHAT_READ',\n    'KB_READ',\n    'ANALYTICS_READ',\n  ] as Permission[],\n};\n\nexport const initializeRolePermissions = async () => {\n  for (const [role, permissions] of Object.entries(DEFAULT_ROLE_PERMISSIONS)) {\n    for (const permission of permissions) {\n      await prisma.rolePermission.upsert({\n        where: {\n          role_permission: {\n            role: role as Role,\n            permission: permission as Permission,\n          },\n        },\n        update: {},\n        create: {\n          role: role as Role,\n          permission: permission as Permission,\n        },\n      });\n    }\n  }\n};\n\nexport const getUserPermissions = async (\n  userId: string,\n  organizationId: string\n): Promise<Permission[]> => {\n  const user = await prisma.user.findUnique({\n    where: { id: userId },\n    include: {\n      permissionOverrides: {\n        where: { organizationId },\n      },\n    },\n  });\n\n  if (!user) {\n    return [];\n  }\n\n  // Get base permissions from roles\n  const rolePermissions = await prisma.rolePermission.findMany({\n    where: {\n      role: {\n        in: user.roles,\n      },\n    },\n    select: { permission: true },\n  });\n\n  const permissions = new Set(rolePermissions.map((rp) => rp.permission));\n\n  // Apply permission overrides\n  for (const override of user.permissionOverrides) {\n    if (override.granted) {\n      permissions.add(override.permission);\n    } else {\n      permissions.delete(override.permission);\n    }\n  }\n\n  return Array.from(permissions);\n};\n\nexport const hasPermission = async (\n  userId: string,\n  organizationId: string,\n  permission: Permission\n): Promise<boolean> => {\n  const permissions = await getUserPermissions(userId, organizationId);\n  return permissions.includes(permission);\n};\n\nexport const hasAnyPermission = async (\n  userId: string,\n  organizationId: string,\n  permissions: Permission[]\n): Promise<boolean> => {\n  const userPermissions = await getUserPermissions(userId, organizationId);\n  return permissions.some((p) => userPermissions.includes(p));\n};\n\nexport const grantPermission = async (\n  userId: string,\n  organizationId: string,\n  permission: Permission,\n  grantedBy: string\n) => {\n  return prisma.userPermissionOverride.upsert({\n    where: {\n      userId_organizationId_permission: {\n        userId,\n        organizationId,\n        permission,\n      },\n    },\n    update: {\n      granted: true,\n      createdBy: grantedBy,\n    },\n    create: {\n      userId,\n      organizationId,\n      permission,\n      granted: true,\n      createdBy: grantedBy,\n    },\n  });\n};\n\nexport const revokePermission = async (\n  userId: string,\n  organizationId: string,\n  permission: Permission,\n  revokedBy: string\n) => {\n  return prisma.userPermissionOverride.upsert({\n    where: {\n      userId_organizationId_permission: {\n        userId,\n        organizationId,\n        permission,\n      },\n    },\n    update: {\n      granted: false,\n      createdBy: revokedBy,\n    },\n    create: {\n      userId,\n      organizationId,\n      permission,\n      granted: false,\n      createdBy: revokedBy,\n    },\n  });\n};\n\nexport const getOrganizationUsers = async (organizationId: string) => {\n  return prisma.user.findMany({\n    where: { organizationId },\n    select: {\n      id: true,\n      email: true,\n      name: true,\n      roles: true,\n      permissionOverrides: {\n        where: { organizationId },\n        select: {\n          permission: true,\n          granted: true,\n        },\n      },\n    },\n  });\n};\n"],"version":3}