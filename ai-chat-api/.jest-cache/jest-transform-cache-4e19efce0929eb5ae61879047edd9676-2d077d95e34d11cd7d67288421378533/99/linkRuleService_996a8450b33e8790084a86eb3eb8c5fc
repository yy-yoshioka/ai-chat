665d1db47d3c4bd9090ee4eeb09ff59e
"use strict";

/* istanbul ignore next */
function cov_d0hmlwo7e() {
  var path = "/Users/yusukeyoshioka/projects/youtube/ai-chat/ai-chat-api/src/services/linkRuleService.ts";
  var hash = "b7f7deb9dbb194b6735f6c3e21b9b7ef6db76e14";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/yusukeyoshioka/projects/youtube/ai-chat/ai-chat-api/src/services/linkRuleService.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 16
        },
        end: {
          line: 10,
          column: 1
        }
      },
      "1": {
        start: {
          line: 3,
          column: 28
        },
        end: {
          line: 3,
          column: 110
        }
      },
      "2": {
        start: {
          line: 3,
          column: 91
        },
        end: {
          line: 3,
          column: 106
        }
      },
      "3": {
        start: {
          line: 4,
          column: 4
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "4": {
        start: {
          line: 5,
          column: 36
        },
        end: {
          line: 5,
          column: 97
        }
      },
      "5": {
        start: {
          line: 5,
          column: 42
        },
        end: {
          line: 5,
          column: 70
        }
      },
      "6": {
        start: {
          line: 5,
          column: 85
        },
        end: {
          line: 5,
          column: 95
        }
      },
      "7": {
        start: {
          line: 6,
          column: 35
        },
        end: {
          line: 6,
          column: 100
        }
      },
      "8": {
        start: {
          line: 6,
          column: 41
        },
        end: {
          line: 6,
          column: 73
        }
      },
      "9": {
        start: {
          line: 6,
          column: 88
        },
        end: {
          line: 6,
          column: 98
        }
      },
      "10": {
        start: {
          line: 7,
          column: 32
        },
        end: {
          line: 7,
          column: 116
        }
      },
      "11": {
        start: {
          line: 8,
          column: 8
        },
        end: {
          line: 8,
          column: 78
        }
      },
      "12": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 11,
          column: 62
        }
      },
      "13": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 12,
          column: 232
        }
      },
      "14": {
        start: {
          line: 13,
          column: 17
        },
        end: {
          line: 13,
          column: 42
        }
      },
      "15": {
        start: {
          line: 14,
          column: 15
        },
        end: {
          line: 14,
          column: 42
        }
      },
      "16": {
        start: {
          line: 17,
          column: 4
        },
        end: {
          line: 68,
          column: 7
        }
      },
      "17": {
        start: {
          line: 18,
          column: 8
        },
        end: {
          line: 67,
          column: 9
        }
      },
      "18": {
        start: {
          line: 19,
          column: 27
        },
        end: {
          line: 22,
          column: 13
        }
      },
      "19": {
        start: {
          line: 24,
          column: 30
        },
        end: {
          line: 32,
          column: 14
        }
      },
      "20": {
        start: {
          line: 33,
          column: 12
        },
        end: {
          line: 33,
          column: 93
        }
      },
      "21": {
        start: {
          line: 35,
          column: 12
        },
        end: {
          line: 60,
          column: 13
        }
      },
      "22": {
        start: {
          line: 36,
          column: 16
        },
        end: {
          line: 59,
          column: 17
        }
      },
      "23": {
        start: {
          line: 37,
          column: 34
        },
        end: {
          line: 37,
          column: 68
        }
      },
      "24": {
        start: {
          line: 38,
          column: 20
        },
        end: {
          line: 53,
          column: 21
        }
      },
      "25": {
        start: {
          line: 39,
          column: 24
        },
        end: {
          line: 39,
          column: 94
        }
      },
      "26": {
        start: {
          line: 41,
          column: 45
        },
        end: {
          line: 41,
          column: 87
        }
      },
      "27": {
        start: {
          line: 42,
          column: 41
        },
        end: {
          line: 50,
          column: 25
        }
      },
      "28": {
        start: {
          line: 51,
          column: 24
        },
        end: {
          line: 51,
          column: 52
        }
      },
      "29": {
        start: {
          line: 52,
          column: 24
        },
        end: {
          line: 52,
          column: 46
        }
      },
      "30": {
        start: {
          line: 56,
          column: 20
        },
        end: {
          line: 56,
          column: 83
        }
      },
      "31": {
        start: {
          line: 58,
          column: 20
        },
        end: {
          line: 58,
          column: 29
        }
      },
      "32": {
        start: {
          line: 61,
          column: 12
        },
        end: {
          line: 61,
          column: 94
        }
      },
      "33": {
        start: {
          line: 62,
          column: 12
        },
        end: {
          line: 62,
          column: 26
        }
      },
      "34": {
        start: {
          line: 65,
          column: 12
        },
        end: {
          line: 65,
          column: 64
        }
      },
      "35": {
        start: {
          line: 66,
          column: 12
        },
        end: {
          line: 66,
          column: 49
        }
      },
      "36": {
        start: {
          line: 70,
          column: 0
        },
        end: {
          line: 70,
          column: 40
        }
      },
      "37": {
        start: {
          line: 73,
          column: 4
        },
        end: {
          line: 114,
          column: 7
        }
      },
      "38": {
        start: {
          line: 74,
          column: 8
        },
        end: {
          line: 113,
          column: 9
        }
      },
      "39": {
        start: {
          line: 76,
          column: 35
        },
        end: {
          line: 93,
          column: 13
        }
      },
      "40": {
        start: {
          line: 95,
          column: 12
        },
        end: {
          line: 97,
          column: 13
        }
      },
      "41": {
        start: {
          line: 96,
          column: 16
        },
        end: {
          line: 96,
          column: 85
        }
      },
      "42": {
        start: {
          line: 99,
          column: 12
        },
        end: {
          line: 108,
          column: 13
        }
      },
      "43": {
        start: {
          line: 100,
          column: 31
        },
        end: {
          line: 100,
          column: 52
        }
      },
      "44": {
        start: {
          line: 101,
          column: 16
        },
        end: {
          line: 104,
          column: 18
        }
      },
      "45": {
        start: {
          line: 107,
          column: 16
        },
        end: {
          line: 107,
          column: 62
        }
      },
      "46": {
        start: {
          line: 111,
          column: 12
        },
        end: {
          line: 111,
          column: 70
        }
      },
      "47": {
        start: {
          line: 112,
          column: 12
        },
        end: {
          line: 112,
          column: 58
        }
      },
      "48": {
        start: {
          line: 118,
          column: 4
        },
        end: {
          line: 152,
          column: 7
        }
      },
      "49": {
        start: {
          line: 119,
          column: 8
        },
        end: {
          line: 151,
          column: 9
        }
      },
      "50": {
        start: {
          line: 120,
          column: 12
        },
        end: {
          line: 120,
          column: 86
        }
      },
      "51": {
        start: {
          line: 122,
          column: 12
        },
        end: {
          line: 128,
          column: 15
        }
      },
      "52": {
        start: {
          line: 130,
          column: 12
        },
        end: {
          line: 145,
          column: 15
        }
      },
      "53": {
        start: {
          line: 146,
          column: 12
        },
        end: {
          line: 146,
          column: 80
        }
      },
      "54": {
        start: {
          line: 149,
          column: 12
        },
        end: {
          line: 149,
          column: 65
        }
      },
      "55": {
        start: {
          line: 154,
          column: 0
        },
        end: {
          line: 154,
          column: 42
        }
      },
      "56": {
        start: {
          line: 157,
          column: 4
        },
        end: {
          line: 206,
          column: 7
        }
      },
      "57": {
        start: {
          line: 158,
          column: 8
        },
        end: {
          line: 205,
          column: 9
        }
      },
      "58": {
        start: {
          line: 159,
          column: 29
        },
        end: {
          line: 159,
          column: 39
        }
      },
      "59": {
        start: {
          line: 160,
          column: 12
        },
        end: {
          line: 160,
          column: 56
        }
      },
      "60": {
        start: {
          line: 162,
          column: 30
        },
        end: {
          line: 165,
          column: 14
        }
      },
      "61": {
        start: {
          line: 167,
          column: 37
        },
        end: {
          line: 175,
          column: 14
        }
      },
      "62": {
        start: {
          line: 177,
          column: 26
        },
        end: {
          line: 199,
          column: 14
        }
      },
      "63": {
        start: {
          line: 178,
          column: 37
        },
        end: {
          line: 188,
          column: 66
        }
      },
      "64": {
        start: {
          line: 180,
          column: 20
        },
        end: {
          line: 186,
          column: 21
        }
      },
      "65": {
        start: {
          line: 181,
          column: 38
        },
        end: {
          line: 181,
          column: 54
        }
      },
      "66": {
        start: {
          line: 182,
          column: 24
        },
        end: {
          line: 182,
          column: 104
        }
      },
      "67": {
        start: {
          line: 185,
          column: 24
        },
        end: {
          line: 185,
          column: 37
        }
      },
      "68": {
        start: {
          line: 188,
          column: 44
        },
        end: {
          line: 188,
          column: 62
        }
      },
      "69": {
        start: {
          line: 189,
          column: 16
        },
        end: {
          line: 198,
          column: 18
        }
      },
      "70": {
        start: {
          line: 200,
          column: 12
        },
        end: {
          line: 200,
          column: 25
        }
      },
      "71": {
        start: {
          line: 203,
          column: 12
        },
        end: {
          line: 203,
          column: 67
        }
      },
      "72": {
        start: {
          line: 204,
          column: 12
        },
        end: {
          line: 204,
          column: 22
        }
      },
      "73": {
        start: {
          line: 208,
          column: 0
        },
        end: {
          line: 208,
          column: 44
        }
      },
      "74": {
        start: {
          line: 211,
          column: 4
        },
        end: {
          line: 213,
          column: 5
        }
      },
      "75": {
        start: {
          line: 212,
          column: 8
        },
        end: {
          line: 212,
          column: 23
        }
      },
      "76": {
        start: {
          line: 215,
          column: 26
        },
        end: {
          line: 234,
          column: 19
        }
      },
      "77": {
        start: {
          line: 216,
          column: 23
        },
        end: {
          line: 233,
          column: 3
        }
      },
      "78": {
        start: {
          line: 236,
          column: 4
        },
        end: {
          line: 236,
          column: 44
        }
      },
      "79": {
        start: {
          line: 238,
          column: 0
        },
        end: {
          line: 238,
          column: 42
        }
      },
      "80": {
        start: {
          line: 241,
          column: 16
        },
        end: {
          line: 247,
          column: 5
        }
      },
      "81": {
        start: {
          line: 248,
          column: 4
        },
        end: {
          line: 248,
          column: 51
        }
      },
      "82": {
        start: {
          line: 248,
          column: 43
        },
        end: {
          line: 248,
          column: 49
        }
      },
      "83": {
        start: {
          line: 252,
          column: 4
        },
        end: {
          line: 282,
          column: 7
        }
      },
      "84": {
        start: {
          line: 253,
          column: 8
        },
        end: {
          line: 281,
          column: 9
        }
      },
      "85": {
        start: {
          line: 254,
          column: 25
        },
        end: {
          line: 256,
          column: 14
        }
      },
      "86": {
        start: {
          line: 257,
          column: 12
        },
        end: {
          line: 259,
          column: 13
        }
      },
      "87": {
        start: {
          line: 258,
          column: 16
        },
        end: {
          line: 258,
          column: 55
        }
      },
      "88": {
        start: {
          line: 260,
          column: 28
        },
        end: {
          line: 275,
          column: 14
        }
      },
      "89": {
        start: {
          line: 261,
          column: 16
        },
        end: {
          line: 274,
          column: 17
        }
      },
      "90": {
        start: {
          line: 262,
          column: 34
        },
        end: {
          line: 262,
          column: 68
        }
      },
      "91": {
        start: {
          line: 263,
          column: 20
        },
        end: {
          line: 266,
          column: 22
        }
      },
      "92": {
        start: {
          line: 269,
          column: 20
        },
        end: {
          line: 273,
          column: 22
        }
      },
      "93": {
        start: {
          line: 276,
          column: 12
        },
        end: {
          line: 276,
          column: 27
        }
      },
      "94": {
        start: {
          line: 279,
          column: 12
        },
        end: {
          line: 279,
          column: 62
        }
      },
      "95": {
        start: {
          line: 280,
          column: 12
        },
        end: {
          line: 280,
          column: 24
        }
      },
      "96": {
        start: {
          line: 284,
          column: 0
        },
        end: {
          line: 284,
          column: 36
        }
      },
      "97": {
        start: {
          line: 287,
          column: 4
        },
        end: {
          line: 317,
          column: 7
        }
      },
      "98": {
        start: {
          line: 288,
          column: 8
        },
        end: {
          line: 316,
          column: 9
        }
      },
      "99": {
        start: {
          line: 289,
          column: 33
        },
        end: {
          line: 304,
          column: 14
        }
      },
      "100": {
        start: {
          line: 305,
          column: 12
        },
        end: {
          line: 311,
          column: 16
        }
      },
      "101": {
        start: {
          line: 305,
          column: 47
        },
        end: {
          line: 311,
          column: 13
        }
      },
      "102": {
        start: {
          line: 314,
          column: 12
        },
        end: {
          line: 314,
          column: 70
        }
      },
      "103": {
        start: {
          line: 315,
          column: 12
        },
        end: {
          line: 315,
          column: 22
        }
      },
      "104": {
        start: {
          line: 319,
          column: 0
        },
        end: {
          line: 319,
          column: 50
        }
      },
      "105": {
        start: {
          line: 322,
          column: 4
        },
        end: {
          line: 357,
          column: 7
        }
      },
      "106": {
        start: {
          line: 323,
          column: 8
        },
        end: {
          line: 356,
          column: 9
        }
      },
      "107": {
        start: {
          line: 324,
          column: 34
        },
        end: {
          line: 324,
          column: 44
        }
      },
      "108": {
        start: {
          line: 325,
          column: 12
        },
        end: {
          line: 325,
          column: 66
        }
      },
      "109": {
        start: {
          line: 326,
          column: 32
        },
        end: {
          line: 344,
          column: 14
        }
      },
      "110": {
        start: {
          line: 345,
          column: 12
        },
        end: {
          line: 351,
          column: 16
        }
      },
      "111": {
        start: {
          line: 345,
          column: 46
        },
        end: {
          line: 351,
          column: 13
        }
      },
      "112": {
        start: {
          line: 354,
          column: 12
        },
        end: {
          line: 354,
          column: 69
        }
      },
      "113": {
        start: {
          line: 355,
          column: 12
        },
        end: {
          line: 355,
          column: 22
        }
      },
      "114": {
        start: {
          line: 359,
          column: 0
        },
        end: {
          line: 359,
          column: 48
        }
      },
      "115": {
        start: {
          line: 362,
          column: 4
        },
        end: {
          line: 411,
          column: 7
        }
      },
      "116": {
        start: {
          line: 363,
          column: 8
        },
        end: {
          line: 410,
          column: 9
        }
      },
      "117": {
        start: {
          line: 364,
          column: 26
        },
        end: {
          line: 366,
          column: 14
        }
      },
      "118": {
        start: {
          line: 367,
          column: 32
        },
        end: {
          line: 367,
          column: 69
        }
      },
      "119": {
        start: {
          line: 367,
          column: 55
        },
        end: {
          line: 367,
          column: 68
        }
      },
      "120": {
        start: {
          line: 368,
          column: 32
        },
        end: {
          line: 368,
          column: 85
        }
      },
      "121": {
        start: {
          line: 368,
          column: 60
        },
        end: {
          line: 368,
          column: 81
        }
      },
      "122": {
        start: {
          line: 369,
          column: 41
        },
        end: {
          line: 369,
          column: 102
        }
      },
      "123": {
        start: {
          line: 370,
          column: 39
        },
        end: {
          line: 377,
          column: 15
        }
      },
      "124": {
        start: {
          line: 371,
          column: 34
        },
        end: {
          line: 371,
          column: 53
        }
      },
      "125": {
        start: {
          line: 372,
          column: 32
        },
        end: {
          line: 372,
          column: 59
        }
      },
      "126": {
        start: {
          line: 374,
          column: 32
        },
        end: {
          line: 377,
          column: 13
        }
      },
      "127": {
        start: {
          line: 378,
          column: 24
        },
        end: {
          line: 378,
          column: 34
        }
      },
      "128": {
        start: {
          line: 379,
          column: 41
        },
        end: {
          line: 390,
          column: 28
        }
      },
      "129": {
        start: {
          line: 380,
          column: 34
        },
        end: {
          line: 380,
          column: 96
        }
      },
      "130": {
        start: {
          line: 381,
          column: 32
        },
        end: {
          line: 387,
          column: 13
        }
      },
      "131": {
        start: {
          line: 388,
          column: 34
        },
        end: {
          line: 388,
          column: 101
        }
      },
      "132": {
        start: {
          line: 389,
          column: 32
        },
        end: {
          line: 389,
          column: 75
        }
      },
      "133": {
        start: {
          line: 391,
          column: 12
        },
        end: {
          line: 398,
          column: 14
        }
      },
      "134": {
        start: {
          line: 401,
          column: 12
        },
        end: {
          line: 401,
          column: 79
        }
      },
      "135": {
        start: {
          line: 402,
          column: 12
        },
        end: {
          line: 409,
          column: 14
        }
      },
      "136": {
        start: {
          line: 413,
          column: 0
        },
        end: {
          line: 413,
          column: 68
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 44
          },
          end: {
            line: 2,
            column: 45
          }
        },
        loc: {
          start: {
            line: 2,
            column: 89
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "adopt",
        decl: {
          start: {
            line: 3,
            column: 13
          },
          end: {
            line: 3,
            column: 18
          }
        },
        loc: {
          start: {
            line: 3,
            column: 26
          },
          end: {
            line: 3,
            column: 112
          }
        },
        line: 3
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 3,
            column: 70
          },
          end: {
            line: 3,
            column: 71
          }
        },
        loc: {
          start: {
            line: 3,
            column: 89
          },
          end: {
            line: 3,
            column: 108
          }
        },
        line: 3
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 4,
            column: 36
          },
          end: {
            line: 4,
            column: 37
          }
        },
        loc: {
          start: {
            line: 4,
            column: 63
          },
          end: {
            line: 9,
            column: 5
          }
        },
        line: 4
      },
      "4": {
        name: "fulfilled",
        decl: {
          start: {
            line: 5,
            column: 17
          },
          end: {
            line: 5,
            column: 26
          }
        },
        loc: {
          start: {
            line: 5,
            column: 34
          },
          end: {
            line: 5,
            column: 99
          }
        },
        line: 5
      },
      "5": {
        name: "rejected",
        decl: {
          start: {
            line: 6,
            column: 17
          },
          end: {
            line: 6,
            column: 25
          }
        },
        loc: {
          start: {
            line: 6,
            column: 33
          },
          end: {
            line: 6,
            column: 102
          }
        },
        line: 6
      },
      "6": {
        name: "step",
        decl: {
          start: {
            line: 7,
            column: 17
          },
          end: {
            line: 7,
            column: 21
          }
        },
        loc: {
          start: {
            line: 7,
            column: 30
          },
          end: {
            line: 7,
            column: 118
          }
        },
        line: 7
      },
      "7": {
        name: "matchLinkRules",
        decl: {
          start: {
            line: 16,
            column: 9
          },
          end: {
            line: 16,
            column: 23
          }
        },
        loc: {
          start: {
            line: 16,
            column: 49
          },
          end: {
            line: 69,
            column: 1
          }
        },
        line: 16
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 17,
            column: 43
          },
          end: {
            line: 17,
            column: 44
          }
        },
        loc: {
          start: {
            line: 17,
            column: 56
          },
          end: {
            line: 68,
            column: 5
          }
        },
        line: 17
      },
      "9": {
        name: "generateLinkMetadata",
        decl: {
          start: {
            line: 72,
            column: 9
          },
          end: {
            line: 72,
            column: 29
          }
        },
        loc: {
          start: {
            line: 72,
            column: 35
          },
          end: {
            line: 115,
            column: 1
          }
        },
        line: 72
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 73,
            column: 43
          },
          end: {
            line: 73,
            column: 44
          }
        },
        loc: {
          start: {
            line: 73,
            column: 56
          },
          end: {
            line: 114,
            column: 5
          }
        },
        line: 73
      },
      "11": {
        name: "recordLinkClick",
        decl: {
          start: {
            line: 117,
            column: 9
          },
          end: {
            line: 117,
            column: 24
          }
        },
        loc: {
          start: {
            line: 117,
            column: 88
          },
          end: {
            line: 153,
            column: 1
          }
        },
        line: 117
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 118,
            column: 43
          },
          end: {
            line: 118,
            column: 44
          }
        },
        loc: {
          start: {
            line: 118,
            column: 56
          },
          end: {
            line: 152,
            column: 5
          }
        },
        line: 118
      },
      "13": {
        name: "getLinkRuleStats",
        decl: {
          start: {
            line: 156,
            column: 9
          },
          end: {
            line: 156,
            column: 25
          }
        },
        loc: {
          start: {
            line: 156,
            column: 53
          },
          end: {
            line: 207,
            column: 1
          }
        },
        line: 156
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 157,
            column: 43
          },
          end: {
            line: 157,
            column: 44
          }
        },
        loc: {
          start: {
            line: 157,
            column: 56
          },
          end: {
            line: 206,
            column: 5
          }
        },
        line: 157
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 177,
            column: 40
          },
          end: {
            line: 177,
            column: 41
          }
        },
        loc: {
          start: {
            line: 177,
            column: 50
          },
          end: {
            line: 199,
            column: 13
          }
        },
        line: 177
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 179,
            column: 28
          },
          end: {
            line: 179,
            column: 29
          }
        },
        loc: {
          start: {
            line: 179,
            column: 39
          },
          end: {
            line: 187,
            column: 17
          }
        },
        line: 179
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 188,
            column: 28
          },
          end: {
            line: 188,
            column: 29
          }
        },
        loc: {
          start: {
            line: 188,
            column: 44
          },
          end: {
            line: 188,
            column: 62
          }
        },
        line: 188
      },
      "18": {
        name: "insertLinkCards",
        decl: {
          start: {
            line: 210,
            column: 9
          },
          end: {
            line: 210,
            column: 24
          }
        },
        loc: {
          start: {
            line: 210,
            column: 45
          },
          end: {
            line: 237,
            column: 1
          }
        },
        line: 210
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 216,
            column: 13
          },
          end: {
            line: 216,
            column: 14
          }
        },
        loc: {
          start: {
            line: 216,
            column: 23
          },
          end: {
            line: 233,
            column: 3
          }
        },
        line: 216
      },
      "20": {
        name: "escapeHtml",
        decl: {
          start: {
            line: 240,
            column: 9
          },
          end: {
            line: 240,
            column: 19
          }
        },
        loc: {
          start: {
            line: 240,
            column: 26
          },
          end: {
            line: 249,
            column: 1
          }
        },
        line: 240
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 248,
            column: 36
          },
          end: {
            line: 248,
            column: 37
          }
        },
        loc: {
          start: {
            line: 248,
            column: 43
          },
          end: {
            line: 248,
            column: 49
          }
        },
        line: 248
      },
      "22": {
        name: "testLinkRule",
        decl: {
          start: {
            line: 251,
            column: 9
          },
          end: {
            line: 251,
            column: 21
          }
        },
        loc: {
          start: {
            line: 251,
            column: 44
          },
          end: {
            line: 283,
            column: 1
          }
        },
        line: 251
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 252,
            column: 43
          },
          end: {
            line: 252,
            column: 44
          }
        },
        loc: {
          start: {
            line: 252,
            column: 56
          },
          end: {
            line: 282,
            column: 5
          }
        },
        line: 252
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 260,
            column: 45
          },
          end: {
            line: 260,
            column: 46
          }
        },
        loc: {
          start: {
            line: 260,
            column: 58
          },
          end: {
            line: 275,
            column: 13
          }
        },
        line: 260
      },
      "25": {
        name: "getPopularLinkRules",
        decl: {
          start: {
            line: 286,
            column: 9
          },
          end: {
            line: 286,
            column: 28
          }
        },
        loc: {
          start: {
            line: 286,
            column: 57
          },
          end: {
            line: 318,
            column: 1
          }
        },
        line: 286
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 287,
            column: 43
          },
          end: {
            line: 287,
            column: 44
          }
        },
        loc: {
          start: {
            line: 287,
            column: 56
          },
          end: {
            line: 317,
            column: 5
          }
        },
        line: 287
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 305,
            column: 36
          },
          end: {
            line: 305,
            column: 37
          }
        },
        loc: {
          start: {
            line: 305,
            column: 47
          },
          end: {
            line: 311,
            column: 13
          }
        },
        line: 305
      },
      "28": {
        name: "getUnusedLinkRules",
        decl: {
          start: {
            line: 321,
            column: 9
          },
          end: {
            line: 321,
            column: 27
          }
        },
        loc: {
          start: {
            line: 321,
            column: 55
          },
          end: {
            line: 358,
            column: 1
          }
        },
        line: 321
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 322,
            column: 43
          },
          end: {
            line: 322,
            column: 44
          }
        },
        loc: {
          start: {
            line: 322,
            column: 56
          },
          end: {
            line: 357,
            column: 5
          }
        },
        line: 322
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 345,
            column: 35
          },
          end: {
            line: 345,
            column: 36
          }
        },
        loc: {
          start: {
            line: 345,
            column: 46
          },
          end: {
            line: 351,
            column: 13
          }
        },
        line: 345
      },
      "31": {
        name: "analyzeLinkRuleEffectiveness",
        decl: {
          start: {
            line: 361,
            column: 9
          },
          end: {
            line: 361,
            column: 37
          }
        },
        loc: {
          start: {
            line: 361,
            column: 54
          },
          end: {
            line: 412,
            column: 1
          }
        },
        line: 361
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 362,
            column: 43
          },
          end: {
            line: 362,
            column: 44
          }
        },
        loc: {
          start: {
            line: 362,
            column: 56
          },
          end: {
            line: 411,
            column: 5
          }
        },
        line: 362
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 367,
            column: 45
          },
          end: {
            line: 367,
            column: 46
          }
        },
        loc: {
          start: {
            line: 367,
            column: 55
          },
          end: {
            line: 367,
            column: 68
          }
        },
        line: 367
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 368,
            column: 45
          },
          end: {
            line: 368,
            column: 46
          }
        },
        loc: {
          start: {
            line: 368,
            column: 60
          },
          end: {
            line: 368,
            column: 81
          }
        },
        line: 368
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 371,
            column: 24
          },
          end: {
            line: 371,
            column: 25
          }
        },
        loc: {
          start: {
            line: 371,
            column: 34
          },
          end: {
            line: 371,
            column: 53
          }
        },
        line: 371
      },
      "36": {
        name: "(anonymous_36)",
        decl: {
          start: {
            line: 372,
            column: 22
          },
          end: {
            line: 372,
            column: 23
          }
        },
        loc: {
          start: {
            line: 372,
            column: 32
          },
          end: {
            line: 372,
            column: 59
          }
        },
        line: 372
      },
      "37": {
        name: "(anonymous_37)",
        decl: {
          start: {
            line: 374,
            column: 21
          },
          end: {
            line: 374,
            column: 22
          }
        },
        loc: {
          start: {
            line: 374,
            column: 32
          },
          end: {
            line: 377,
            column: 13
          }
        },
        line: 374
      },
      "38": {
        name: "(anonymous_38)",
        decl: {
          start: {
            line: 380,
            column: 24
          },
          end: {
            line: 380,
            column: 25
          }
        },
        loc: {
          start: {
            line: 380,
            column: 34
          },
          end: {
            line: 380,
            column: 96
          }
        },
        line: 380
      },
      "39": {
        name: "(anonymous_39)",
        decl: {
          start: {
            line: 381,
            column: 21
          },
          end: {
            line: 381,
            column: 22
          }
        },
        loc: {
          start: {
            line: 381,
            column: 32
          },
          end: {
            line: 387,
            column: 13
          }
        },
        line: 381
      },
      "40": {
        name: "(anonymous_40)",
        decl: {
          start: {
            line: 388,
            column: 24
          },
          end: {
            line: 388,
            column: 25
          }
        },
        loc: {
          start: {
            line: 388,
            column: 34
          },
          end: {
            line: 388,
            column: 101
          }
        },
        line: 388
      },
      "41": {
        name: "(anonymous_41)",
        decl: {
          start: {
            line: 389,
            column: 22
          },
          end: {
            line: 389,
            column: 23
          }
        },
        loc: {
          start: {
            line: 389,
            column: 32
          },
          end: {
            line: 389,
            column: 75
          }
        },
        line: 389
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 16
          },
          end: {
            line: 10,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 17
          },
          end: {
            line: 2,
            column: 21
          }
        }, {
          start: {
            line: 2,
            column: 25
          },
          end: {
            line: 2,
            column: 39
          }
        }, {
          start: {
            line: 2,
            column: 44
          },
          end: {
            line: 10,
            column: 1
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 3,
            column: 35
          },
          end: {
            line: 3,
            column: 109
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 3,
            column: 56
          },
          end: {
            line: 3,
            column: 61
          }
        }, {
          start: {
            line: 3,
            column: 64
          },
          end: {
            line: 3,
            column: 109
          }
        }],
        line: 3
      },
      "2": {
        loc: {
          start: {
            line: 4,
            column: 16
          },
          end: {
            line: 4,
            column: 34
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 4,
            column: 16
          },
          end: {
            line: 4,
            column: 17
          }
        }, {
          start: {
            line: 4,
            column: 22
          },
          end: {
            line: 4,
            column: 33
          }
        }],
        line: 4
      },
      "3": {
        loc: {
          start: {
            line: 7,
            column: 32
          },
          end: {
            line: 7,
            column: 115
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 7,
            column: 46
          },
          end: {
            line: 7,
            column: 67
          }
        }, {
          start: {
            line: 7,
            column: 70
          },
          end: {
            line: 7,
            column: 115
          }
        }],
        line: 7
      },
      "4": {
        loc: {
          start: {
            line: 8,
            column: 51
          },
          end: {
            line: 8,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 8,
            column: 51
          },
          end: {
            line: 8,
            column: 61
          }
        }, {
          start: {
            line: 8,
            column: 65
          },
          end: {
            line: 8,
            column: 67
          }
        }],
        line: 8
      },
      "5": {
        loc: {
          start: {
            line: 38,
            column: 20
          },
          end: {
            line: 53,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 38,
            column: 20
          },
          end: {
            line: 53,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 38
      },
      "6": {
        loc: {
          start: {
            line: 44,
            column: 35
          },
          end: {
            line: 44,
            column: 66
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 44,
            column: 35
          },
          end: {
            line: 44,
            column: 53
          }
        }, {
          start: {
            line: 44,
            column: 57
          },
          end: {
            line: 44,
            column: 66
          }
        }],
        line: 44
      },
      "7": {
        loc: {
          start: {
            line: 46,
            column: 41
          },
          end: {
            line: 46,
            column: 85
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 46,
            column: 41
          },
          end: {
            line: 46,
            column: 57
          }
        }, {
          start: {
            line: 46,
            column: 61
          },
          end: {
            line: 46,
            column: 85
          }
        }],
        line: 46
      },
      "8": {
        loc: {
          start: {
            line: 95,
            column: 12
          },
          end: {
            line: 97,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 95,
            column: 12
          },
          end: {
            line: 97,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 95
      },
      "9": {
        loc: {
          start: {
            line: 96,
            column: 23
          },
          end: {
            line: 96,
            column: 84
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 96,
            column: 23
          },
          end: {
            line: 96,
            column: 42
          }
        }, {
          start: {
            line: 96,
            column: 46
          },
          end: {
            line: 96,
            column: 84
          }
        }],
        line: 96
      },
      "10": {
        loc: {
          start: {
            line: 156,
            column: 42
          },
          end: {
            line: 156,
            column: 51
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 156,
            column: 49
          },
          end: {
            line: 156,
            column: 51
          }
        }],
        line: 156
      },
      "11": {
        loc: {
          start: {
            line: 182,
            column: 32
          },
          end: {
            line: 182,
            column: 90
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 182,
            column: 69
          },
          end: {
            line: 182,
            column: 75
          }
        }, {
          start: {
            line: 182,
            column: 78
          },
          end: {
            line: 182,
            column: 90
          }
        }],
        line: 182
      },
      "12": {
        loc: {
          start: {
            line: 182,
            column: 32
          },
          end: {
            line: 182,
            column: 66
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 182,
            column: 32
          },
          end: {
            line: 182,
            column: 46
          }
        }, {
          start: {
            line: 182,
            column: 50
          },
          end: {
            line: 182,
            column: 66
          }
        }],
        line: 182
      },
      "13": {
        loc: {
          start: {
            line: 194,
            column: 35
          },
          end: {
            line: 194,
            column: 66
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 194,
            column: 35
          },
          end: {
            line: 194,
            column: 53
          }
        }, {
          start: {
            line: 194,
            column: 57
          },
          end: {
            line: 194,
            column: 66
          }
        }],
        line: 194
      },
      "14": {
        loc: {
          start: {
            line: 211,
            column: 4
          },
          end: {
            line: 213,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 211,
            column: 4
          },
          end: {
            line: 213,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 211
      },
      "15": {
        loc: {
          start: {
            line: 221,
            column: 17
          },
          end: {
            line: 221,
            column: 49
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 221,
            column: 31
          },
          end: {
            line: 221,
            column: 39
          }
        }, {
          start: {
            line: 221,
            column: 42
          },
          end: {
            line: 221,
            column: 49
          }
        }],
        line: 221
      },
      "16": {
        loc: {
          start: {
            line: 222,
            column: 14
          },
          end: {
            line: 222,
            column: 54
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 222,
            column: 28
          },
          end: {
            line: 222,
            column: 49
          }
        }, {
          start: {
            line: 222,
            column: 52
          },
          end: {
            line: 222,
            column: 54
          }
        }],
        line: 222
      },
      "17": {
        loc: {
          start: {
            line: 225,
            column: 8
          },
          end: {
            line: 225,
            column: 75
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 225,
            column: 31
          },
          end: {
            line: 225,
            column: 64
          }
        }, {
          start: {
            line: 225,
            column: 67
          },
          end: {
            line: 225,
            column: 75
          }
        }],
        line: 225
      },
      "18": {
        loc: {
          start: {
            line: 228,
            column: 4
          },
          end: {
            line: 228,
            column: 98
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 228,
            column: 23
          },
          end: {
            line: 228,
            column: 93
          }
        }, {
          start: {
            line: 228,
            column: 96
          },
          end: {
            line: 228,
            column: 98
          }
        }],
        line: 228
      },
      "19": {
        loc: {
          start: {
            line: 257,
            column: 12
          },
          end: {
            line: 259,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 257,
            column: 12
          },
          end: {
            line: 259,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 257
      },
      "20": {
        loc: {
          start: {
            line: 272,
            column: 31
          },
          end: {
            line: 272,
            column: 87
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 272,
            column: 56
          },
          end: {
            line: 272,
            column: 69
          }
        }, {
          start: {
            line: 272,
            column: 72
          },
          end: {
            line: 272,
            column: 87
          }
        }],
        line: 272
      },
      "21": {
        loc: {
          start: {
            line: 286,
            column: 45
          },
          end: {
            line: 286,
            column: 55
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 286,
            column: 53
          },
          end: {
            line: 286,
            column: 55
          }
        }],
        line: 286
      },
      "22": {
        loc: {
          start: {
            line: 310,
            column: 29
          },
          end: {
            line: 310,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 310,
            column: 29
          },
          end: {
            line: 310,
            column: 45
          }
        }, {
          start: {
            line: 310,
            column: 49
          },
          end: {
            line: 310,
            column: 58
          }
        }],
        line: 310
      },
      "23": {
        loc: {
          start: {
            line: 321,
            column: 44
          },
          end: {
            line: 321,
            column: 53
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 321,
            column: 51
          },
          end: {
            line: 321,
            column: 53
          }
        }],
        line: 321
      },
      "24": {
        loc: {
          start: {
            line: 350,
            column: 31
          },
          end: {
            line: 350,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 350,
            column: 31
          },
          end: {
            line: 350,
            column: 49
          }
        }, {
          start: {
            line: 350,
            column: 53
          },
          end: {
            line: 350,
            column: 62
          }
        }],
        line: 350
      },
      "25": {
        loc: {
          start: {
            line: 369,
            column: 41
          },
          end: {
            line: 369,
            column: 102
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 369,
            column: 66
          },
          end: {
            line: 369,
            column: 98
          }
        }, {
          start: {
            line: 369,
            column: 101
          },
          end: {
            line: 369,
            column: 102
          }
        }],
        line: 369
      },
      "26": {
        loc: {
          start: {
            line: 380,
            column: 34
          },
          end: {
            line: 380,
            column: 96
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 380,
            column: 34
          },
          end: {
            line: 380,
            column: 47
          }
        }, {
          start: {
            line: 380,
            column: 52
          },
          end: {
            line: 380,
            column: 73
          }
        }, {
          start: {
            line: 380,
            column: 77
          },
          end: {
            line: 380,
            column: 95
          }
        }],
        line: 380
      },
      "27": {
        loc: {
          start: {
            line: 383,
            column: 36
          },
          end: {
            line: 386,
            column: 30
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 384,
            column: 22
          },
          end: {
            line: 385,
            column: 46
          }
        }, {
          start: {
            line: 386,
            column: 22
          },
          end: {
            line: 386,
            column: 30
          }
        }],
        line: 383
      },
      "28": {
        loc: {
          start: {
            line: 388,
            column: 34
          },
          end: {
            line: 388,
            column: 101
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 388,
            column: 34
          },
          end: {
            line: 388,
            column: 61
          }
        }, {
          start: {
            line: 388,
            column: 65
          },
          end: {
            line: 388,
            column: 101
          }
        }],
        line: 388
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0],
      "22": [0, 0],
      "23": [0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0, 0],
      "27": [0, 0],
      "28": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/yusukeyoshioka/projects/youtube/ai-chat/ai-chat-api/src/services/linkRuleService.ts",
      mappings: "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",
      names: [],
      sources: ["/Users/yusukeyoshioka/projects/youtube/ai-chat/ai-chat-api/src/services/linkRuleService.ts"],
      sourcesContent: ["import { PrismaClient } from '@prisma/client';\n\nconst prisma = new PrismaClient();\n\n// \u30EA\u30F3\u30AF\u30AB\u30FC\u30C9\u60C5\u5831\u306E\u578B\u5B9A\u7FA9\nexport interface LinkCard {\n  id: string;\n  title: string;\n  url: string;\n  description?: string;\n  newTab: boolean;\n  ruleName: string;\n  ruleId: string;\n}\n\n// \u30EA\u30F3\u30AF\u30EB\u30FC\u30EB\u30DE\u30C3\u30C1\u30F3\u30B0\u7D50\u679C\nexport interface LinkRuleMatch {\n  matched: boolean;\n  links: LinkCard[];\n}\n\n// \u30A4\u30D9\u30F3\u30C8\u30D7\u30ED\u30D1\u30C6\u30A3\u306E\u578B\u5B9A\u7FA9\ninterface LinkClickEventProperties {\n  ruleId?: string;\n  clickedAt?: string;\n}\n\n// \u30E1\u30C3\u30BB\u30FC\u30B8\u306B\u5BFE\u3057\u3066\u30EA\u30F3\u30AF\u30EB\u30FC\u30EB\u3092\u30DE\u30C3\u30C1\u30F3\u30B0\nexport async function matchLinkRules(\n  organizationId: string,\n  message: string\n): Promise<LinkRuleMatch> {\n  try {\n    const result: LinkRuleMatch = {\n      matched: false,\n      links: [],\n    };\n\n    // \u7D44\u7E54\u306E\u30A2\u30AF\u30C6\u30A3\u30D6\u306A\u30EA\u30F3\u30AF\u30EB\u30FC\u30EB\u3092\u53D6\u5F97\n    const linkRules = await prisma.linkRule.findMany({\n      where: {\n        organizationId,\n        isActive: true,\n      },\n      orderBy: {\n        name: 'asc',\n      },\n    });\n\n    console.log(\n      `Checking ${linkRules.length} link rules for message: \"${message}\"`\n    );\n\n    // \u5404\u30EB\u30FC\u30EB\u3092\u30C1\u30A7\u30C3\u30AF\n    for (const rule of linkRules) {\n      try {\n        const regex = new RegExp(rule.triggerRegex, 'i');\n\n        if (regex.test(message)) {\n          console.log(`Link rule matched: ${rule.name} (${rule.triggerRegex})`);\n\n          // \u30E1\u30BF\u30C7\u30FC\u30BF\u3092\u751F\u6210\uFF08URL\u304B\u3089\u30BF\u30A4\u30C8\u30EB\u3092\u53D6\u5F97\uFF09\n          const linkMetadata = await generateLinkMetadata(rule.targetUrl);\n\n          const linkCard: LinkCard = {\n            id: `link-${rule.id}`,\n            title: linkMetadata.title || rule.name,\n            url: rule.targetUrl,\n            description: rule.description || linkMetadata.description,\n            newTab: rule.newTab,\n            ruleName: rule.name,\n            ruleId: rule.id,\n          };\n\n          result.links.push(linkCard);\n          result.matched = true;\n        }\n      } catch (error) {\n        console.error(`Error processing link rule ${rule.id}:`, error);\n        // \u6B63\u898F\u8868\u73FE\u30A8\u30E9\u30FC\u304C\u3042\u3063\u3066\u3082\u7D9A\u884C\n        continue;\n      }\n    }\n\n    console.log(\n      `Link rule matching completed: ${result.links.length} matches found`\n    );\n    return result;\n  } catch (error) {\n    console.error('Failed to match link rules:', error);\n    return { matched: false, links: [] };\n  }\n}\n\n// URL\u304B\u3089\u30E1\u30BF\u30C7\u30FC\u30BF\u3092\u751F\u6210\nasync function generateLinkMetadata(\n  url: string\n): Promise<{ title?: string; description?: string }> {\n  try {\n    // \u5185\u90E8\u30EA\u30F3\u30AF\u306E\u5834\u5408\u306E\u30BF\u30A4\u30C8\u30EB\u30DE\u30C3\u30D4\u30F3\u30B0\n    const internalTitles: Record<\n      string,\n      { title: string; description: string }\n    > = {\n      '/pricing': {\n        title: '\u6599\u91D1\u30D7\u30E9\u30F3',\n        description: 'AI Chat\u306E\u6599\u91D1\u30D7\u30E9\u30F3\u3092\u3054\u78BA\u8A8D\u3044\u305F\u3060\u3051\u307E\u3059',\n      },\n      '/docs': {\n        title: '\u30C9\u30AD\u30E5\u30E1\u30F3\u30C8',\n        description: 'AI Chat\u306E\u4F7F\u3044\u65B9\u3084API\u4ED5\u69D8\u3092\u3054\u78BA\u8A8D\u3044\u305F\u3060\u3051\u307E\u3059',\n      },\n      '/contact': {\n        title: '\u304A\u554F\u3044\u5408\u308F\u305B',\n        description: '\u30B5\u30DD\u30FC\u30C8\u30C1\u30FC\u30E0\u307E\u3067\u304A\u6C17\u8EFD\u306B\u304A\u554F\u3044\u5408\u308F\u305B\u304F\u3060\u3055\u3044',\n      },\n      '/support': {\n        title: '\u30B5\u30DD\u30FC\u30C8',\n        description: '\u30D8\u30EB\u30D7\u60C5\u5831\u3068\u30B5\u30DD\u30FC\u30C8\u30EA\u30BD\u30FC\u30B9\u3092\u3054\u5229\u7528\u3044\u305F\u3060\u3051\u307E\u3059',\n      },\n    };\n\n    // \u5185\u90E8\u30EA\u30F3\u30AF\u306E\u5834\u5408\n    if (url.startsWith('/')) {\n      return internalTitles[url] || { title: url, description: undefined };\n    }\n\n    // \u5916\u90E8\u30EA\u30F3\u30AF\u306E\u5834\u5408\uFF08\u7C21\u5358\u306A\u5B9F\u88C5\uFF09\n    try {\n      const domain = new URL(url).hostname;\n      return {\n        title: `${domain}`,\n        description: `${domain}\u306E\u30DA\u30FC\u30B8\u3092\u3054\u78BA\u8A8D\u304F\u3060\u3055\u3044`,\n      };\n    } catch {\n      return { title: url, description: undefined };\n    }\n  } catch (error) {\n    console.error('Failed to generate link metadata:', error);\n    return { title: url, description: undefined };\n  }\n}\n\n// \u30EA\u30F3\u30AF\u30AF\u30EA\u30C3\u30AF\u3092\u8A18\u9332\nexport async function recordLinkClick(\n  organizationId: string,\n  ruleId: string,\n  sessionId?: string,\n  userId?: string,\n  userAgent?: string,\n  referer?: string\n): Promise<void> {\n  try {\n    console.log(`Recording link click: rule=${ruleId}, session=${sessionId}`);\n\n    // \u30EA\u30F3\u30AF\u30EB\u30FC\u30EB\u306E\u30AF\u30EA\u30C3\u30AF\u6570\u3092\u5897\u52A0\n    await prisma.linkRule.update({\n      where: { id: ruleId },\n      data: {\n        clickCount: { increment: 1 },\n        lastClickedAt: new Date(),\n      },\n    });\n\n    // \u30A4\u30D9\u30F3\u30C8\u3068\u3057\u3066\u8A18\u9332\uFF08\u5206\u6790\u7528\uFF09\n    await prisma.event.create({\n      data: {\n        companyId: organizationId, // TODO: \u6B63\u3057\u3044\u4F1A\u793EID\u306B\u30DE\u30C3\u30D4\u30F3\u30B0\n        eventType: 'link_clicked',\n        eventName: 'knowledge_base_link_clicked',\n        properties: {\n          ruleId,\n          clickedAt: new Date().toISOString(),\n        },\n        sessionId,\n        userId,\n        userAgent,\n        referrer: referer,\n        createdAt: new Date(),\n      },\n    });\n\n    console.log(`Link click recorded successfully for rule: ${ruleId}`);\n  } catch (error) {\n    console.error('Failed to record link click:', error);\n    // \u30A8\u30E9\u30FC\u304C\u767A\u751F\u3057\u3066\u3082\u30B5\u30FC\u30D3\u30B9\u7D99\u7D9A\n  }\n}\n\n// \u30EA\u30F3\u30AF\u30EB\u30FC\u30EB\u306E\u7D71\u8A08\u3092\u53D6\u5F97\nexport async function getLinkRuleStats(\n  organizationId: string,\n  days: number = 30\n): Promise<\n  Array<{\n    id: string;\n    name: string;\n    triggerRegex: string;\n    clickCount: number;\n    lastClickedAt?: Date;\n    ctr?: number; // Click Through Rate (\u8868\u793A\u56DE\u6570\u306B\u5BFE\u3059\u308B\u30AF\u30EA\u30C3\u30AF\u7387)\n    recentClicks: number;\n  }>\n> {\n  try {\n    const dateFrom = new Date();\n    dateFrom.setDate(dateFrom.getDate() - days);\n\n    // \u30EA\u30F3\u30AF\u30EB\u30FC\u30EB\u57FA\u672C\u60C5\u5831\u3092\u53D6\u5F97\n    const linkRules = await prisma.linkRule.findMany({\n      where: { organizationId },\n      orderBy: { clickCount: 'desc' },\n    });\n\n    // \u671F\u9593\u5185\u306E\u30AF\u30EA\u30C3\u30AF\u6570\u3092\u53D6\u5F97\n    const recentClicksData = await prisma.event.groupBy({\n      by: ['properties'],\n      where: {\n        companyId: organizationId,\n        eventType: 'link_clicked',\n        createdAt: { gte: dateFrom },\n      },\n      _count: true,\n    });\n\n    // \u7D50\u679C\u3092\u30DE\u30C3\u30D4\u30F3\u30B0\n    const stats = linkRules.map((rule) => {\n      const recentClicks = recentClicksData\n        .filter((event) => {\n          try {\n            const props = event.properties as LinkClickEventProperties;\n            return props?.ruleId === rule.id;\n          } catch {\n            return false;\n          }\n        })\n        .reduce((sum, event) => sum + event._count, 0);\n\n      return {\n        id: rule.id,\n        name: rule.name,\n        triggerRegex: rule.triggerRegex,\n        clickCount: rule.clickCount,\n        lastClickedAt: rule.lastClickedAt || undefined,\n        recentClicks,\n        // CTR\u306F\u8868\u793A\u56DE\u6570\u306E\u30C7\u30FC\u30BF\u304C\u5FC5\u8981\u306A\u305F\u3081\u3001\u4ECA\u56DE\u306F\u7701\u7565\n        ctr: undefined,\n      };\n    });\n\n    return stats;\n  } catch (error) {\n    console.error('Failed to get link rule stats:', error);\n    return [];\n  }\n}\n\n// \u30E1\u30C3\u30BB\u30FC\u30B8\u306B\u30EA\u30F3\u30AF\u30AB\u30FC\u30C9\u3092\u633F\u5165\nexport function insertLinkCards(\n  message: string,\n  linkCards: LinkCard[]\n): string {\n  if (linkCards.length === 0) {\n    return message;\n  }\n\n  // \u30EA\u30F3\u30AF\u30AB\u30FC\u30C9\u306EHTML\u3092\u751F\u6210\n  const linkCardsHtml = linkCards\n    .map(\n      (card) => `\n<div class=\"link-card\" data-rule-id=\"${card.ruleId}\" data-link-id=\"${card.id}\">\n  <div class=\"link-card-header\">\n    <h4 class=\"link-card-title\">${escapeHtml(card.title)}</h4>\n    <a href=\"${escapeHtml(card.url)}\" \n       target=\"${card.newTab ? '_blank' : '_self'}\" \n       rel=\"${card.newTab ? 'noopener noreferrer' : ''}\"\n       class=\"link-card-url\"\n       onclick=\"recordLinkClick('${card.ruleId}')\">\n      ${card.url.length > 50 ? card.url.substring(0, 50) + '...' : card.url}\n    </a>\n  </div>\n  ${card.description ? `<p class=\"link-card-description\">${escapeHtml(card.description)}</p>` : ''}\n  <div class=\"link-card-footer\">\n    <small class=\"link-card-source\">\u63A8\u5968\u30EA\u30F3\u30AF: ${escapeHtml(card.ruleName)}</small>\n  </div>\n</div>\n  `\n    )\n    .join('\\n');\n\n  // \u30E1\u30C3\u30BB\u30FC\u30B8\u306E\u672B\u5C3E\u306B\u30EA\u30F3\u30AF\u30AB\u30FC\u30C9\u3092\u8FFD\u52A0\n  return `${message}\\n\\n${linkCardsHtml}`;\n}\n\n// HTML\u30A8\u30B9\u30B1\u30FC\u30D7\nfunction escapeHtml(text: string): string {\n  const map: Record<string, string> = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#039;',\n  };\n  return text.replace(/[&<>\"']/g, (m) => map[m]);\n}\n\n// \u30EA\u30F3\u30AF\u30EB\u30FC\u30EB\u306E\u30C6\u30B9\u30C8\uFF08\u6B63\u898F\u8868\u73FE\u304C\u6B63\u3057\u304F\u52D5\u4F5C\u3059\u308B\u304B\u30C1\u30A7\u30C3\u30AF\uFF09\nexport async function testLinkRule(\n  ruleId: string,\n  testMessages: string[]\n): Promise<Array<{ message: string; matched: boolean; error?: string }>> {\n  try {\n    const rule = await prisma.linkRule.findUnique({\n      where: { id: ruleId },\n    });\n\n    if (!rule) {\n      throw new Error('Link rule not found');\n    }\n\n    const results = testMessages.map((message) => {\n      try {\n        const regex = new RegExp(rule.triggerRegex, 'i');\n        return {\n          message,\n          matched: regex.test(message),\n        };\n      } catch (error) {\n        return {\n          message,\n          matched: false,\n          error: error instanceof Error ? error.message : 'Unknown error',\n        };\n      }\n    });\n\n    return results;\n  } catch (error) {\n    console.error('Failed to test link rule:', error);\n    throw error;\n  }\n}\n\n// \u4EBA\u6C17\u306E\u30EA\u30F3\u30AF\u30EB\u30FC\u30EB\u3092\u53D6\u5F97\nexport async function getPopularLinkRules(\n  organizationId: string,\n  limit: number = 10\n): Promise<\n  Array<{\n    id: string;\n    name: string;\n    url: string;\n    clickCount: number;\n    description?: string;\n  }>\n> {\n  try {\n    const popularRules = await prisma.linkRule.findMany({\n      where: {\n        organizationId,\n        isActive: true,\n        clickCount: { gt: 0 },\n      },\n      orderBy: { clickCount: 'desc' },\n      take: limit,\n      select: {\n        id: true,\n        name: true,\n        targetUrl: true,\n        clickCount: true,\n        description: true,\n      },\n    });\n\n    return popularRules.map((rule) => ({\n      id: rule.id,\n      name: rule.name,\n      url: rule.targetUrl,\n      clickCount: rule.clickCount,\n      description: rule.description || undefined,\n    }));\n  } catch (error) {\n    console.error('Failed to get popular link rules:', error);\n    return [];\n  }\n}\n\n// \u672A\u4F7F\u7528\u306E\u30EA\u30F3\u30AF\u30EB\u30FC\u30EB\u3092\u53D6\u5F97\nexport async function getUnusedLinkRules(\n  organizationId: string,\n  days: number = 30\n): Promise<\n  Array<{\n    id: string;\n    name: string;\n    triggerRegex: string;\n    createdAt: Date;\n    lastClickedAt?: Date;\n  }>\n> {\n  try {\n    const dateThreshold = new Date();\n    dateThreshold.setDate(dateThreshold.getDate() - days);\n\n    const unusedRules = await prisma.linkRule.findMany({\n      where: {\n        organizationId,\n        isActive: true,\n        OR: [\n          { clickCount: 0 },\n          { lastClickedAt: { lt: dateThreshold } },\n          { lastClickedAt: null },\n        ],\n      },\n      orderBy: { createdAt: 'desc' },\n      select: {\n        id: true,\n        name: true,\n        triggerRegex: true,\n        createdAt: true,\n        lastClickedAt: true,\n      },\n    });\n\n    return unusedRules.map((rule) => ({\n      id: rule.id,\n      name: rule.name,\n      triggerRegex: rule.triggerRegex,\n      createdAt: rule.createdAt,\n      lastClickedAt: rule.lastClickedAt || undefined,\n    }));\n  } catch (error) {\n    console.error('Failed to get unused link rules:', error);\n    return [];\n  }\n}\n\n// \u30EA\u30F3\u30AF\u30EB\u30FC\u30EB\u306E\u52B9\u679C\u5206\u6790\nexport async function analyzeLinkRuleEffectiveness(\n  organizationId: string\n): Promise<{\n  totalRules: number;\n  activeRules: number;\n  totalClicks: number;\n  averageClicksPerRule: number;\n  topPerformingRules: Array<{ name: string; clickCount: number }>;\n  underperformingRules: Array<{ name: string; daysSinceLastClick: number }>;\n}> {\n  try {\n    const rules = await prisma.linkRule.findMany({\n      where: { organizationId },\n    });\n\n    const activeRules = rules.filter((rule) => rule.isActive);\n    const totalClicks = rules.reduce((sum, rule) => sum + rule.clickCount, 0);\n    const averageClicksPerRule =\n      activeRules.length > 0 ? totalClicks / activeRules.length : 0;\n\n    const topPerformingRules = rules\n      .filter((rule) => rule.clickCount > 0)\n      .sort((a, b) => b.clickCount - a.clickCount)\n      .slice(0, 5)\n      .map((rule) => ({\n        name: rule.name,\n        clickCount: rule.clickCount,\n      }));\n\n    const now = new Date();\n    const underperformingRules = rules\n      .filter(\n        (rule) => rule.isActive && (rule.clickCount === 0 || rule.lastClickedAt)\n      )\n      .map((rule) => ({\n        name: rule.name,\n        daysSinceLastClick: rule.lastClickedAt\n          ? Math.floor(\n              (now.getTime() - rule.lastClickedAt.getTime()) /\n                (1000 * 60 * 60 * 24)\n            )\n          : Infinity,\n      }))\n      .filter(\n        (rule) =>\n          rule.daysSinceLastClick > 7 || rule.daysSinceLastClick === Infinity\n      )\n      .sort((a, b) => b.daysSinceLastClick - a.daysSinceLastClick)\n      .slice(0, 5);\n\n    return {\n      totalRules: rules.length,\n      activeRules: activeRules.length,\n      totalClicks,\n      averageClicksPerRule: Math.round(averageClicksPerRule * 100) / 100,\n      topPerformingRules,\n      underperformingRules,\n    };\n  } catch (error) {\n    console.error('Failed to analyze link rule effectiveness:', error);\n    return {\n      totalRules: 0,\n      activeRules: 0,\n      totalClicks: 0,\n      averageClicksPerRule: 0,\n      topPerformingRules: [],\n      underperformingRules: [],\n    };\n  }\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "b7f7deb9dbb194b6735f6c3e21b9b7ef6db76e14"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_d0hmlwo7e = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_d0hmlwo7e();
var __awaiter =
/* istanbul ignore next */
(cov_d0hmlwo7e().s[0]++,
/* istanbul ignore next */
(cov_d0hmlwo7e().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_d0hmlwo7e().b[0][1]++, this.__awaiter) ||
/* istanbul ignore next */
(cov_d0hmlwo7e().b[0][2]++, function (thisArg, _arguments, P, generator) {
  /* istanbul ignore next */
  cov_d0hmlwo7e().f[0]++;
  function adopt(value) {
    /* istanbul ignore next */
    cov_d0hmlwo7e().f[1]++;
    cov_d0hmlwo7e().s[1]++;
    return value instanceof P ?
    /* istanbul ignore next */
    (cov_d0hmlwo7e().b[1][0]++, value) :
    /* istanbul ignore next */
    (cov_d0hmlwo7e().b[1][1]++, new P(function (resolve) {
      /* istanbul ignore next */
      cov_d0hmlwo7e().f[2]++;
      cov_d0hmlwo7e().s[2]++;
      resolve(value);
    }));
  }
  /* istanbul ignore next */
  cov_d0hmlwo7e().s[3]++;
  return new (
  /* istanbul ignore next */
  (cov_d0hmlwo7e().b[2][0]++, P) ||
  /* istanbul ignore next */
  (cov_d0hmlwo7e().b[2][1]++, P = Promise))(function (resolve, reject) {
    /* istanbul ignore next */
    cov_d0hmlwo7e().f[3]++;
    function fulfilled(value) {
      /* istanbul ignore next */
      cov_d0hmlwo7e().f[4]++;
      cov_d0hmlwo7e().s[4]++;
      try {
        /* istanbul ignore next */
        cov_d0hmlwo7e().s[5]++;
        step(generator.next(value));
      } catch (e) {
        /* istanbul ignore next */
        cov_d0hmlwo7e().s[6]++;
        reject(e);
      }
    }
    function rejected(value) {
      /* istanbul ignore next */
      cov_d0hmlwo7e().f[5]++;
      cov_d0hmlwo7e().s[7]++;
      try {
        /* istanbul ignore next */
        cov_d0hmlwo7e().s[8]++;
        step(generator["throw"](value));
      } catch (e) {
        /* istanbul ignore next */
        cov_d0hmlwo7e().s[9]++;
        reject(e);
      }
    }
    function step(result) {
      /* istanbul ignore next */
      cov_d0hmlwo7e().f[6]++;
      cov_d0hmlwo7e().s[10]++;
      result.done ?
      /* istanbul ignore next */
      (cov_d0hmlwo7e().b[3][0]++, resolve(result.value)) :
      /* istanbul ignore next */
      (cov_d0hmlwo7e().b[3][1]++, adopt(result.value).then(fulfilled, rejected));
    }
    /* istanbul ignore next */
    cov_d0hmlwo7e().s[11]++;
    step((generator = generator.apply(thisArg,
    /* istanbul ignore next */
    (cov_d0hmlwo7e().b[4][0]++, _arguments) ||
    /* istanbul ignore next */
    (cov_d0hmlwo7e().b[4][1]++, []))).next());
  });
}));
/* istanbul ignore next */
cov_d0hmlwo7e().s[12]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_d0hmlwo7e().s[13]++;
exports.analyzeLinkRuleEffectiveness = exports.getUnusedLinkRules = exports.getPopularLinkRules = exports.testLinkRule = exports.insertLinkCards = exports.getLinkRuleStats = exports.recordLinkClick = exports.matchLinkRules = void 0;
const client_1 =
/* istanbul ignore next */
(cov_d0hmlwo7e().s[14]++, require("@prisma/client"));
const prisma =
/* istanbul ignore next */
(cov_d0hmlwo7e().s[15]++, new client_1.PrismaClient());
// メッセージに対してリンクルールをマッチング
function matchLinkRules(organizationId, message) {
  /* istanbul ignore next */
  cov_d0hmlwo7e().f[7]++;
  cov_d0hmlwo7e().s[16]++;
  return __awaiter(this, void 0, void 0, function* () {
    /* istanbul ignore next */
    cov_d0hmlwo7e().f[8]++;
    cov_d0hmlwo7e().s[17]++;
    try {
      const result =
      /* istanbul ignore next */
      (cov_d0hmlwo7e().s[18]++, {
        matched: false,
        links: []
      });
      // 組織のアクティブなリンクルールを取得
      const linkRules =
      /* istanbul ignore next */
      (cov_d0hmlwo7e().s[19]++, yield prisma.linkRule.findMany({
        where: {
          organizationId,
          isActive: true
        },
        orderBy: {
          name: 'asc'
        }
      }));
      /* istanbul ignore next */
      cov_d0hmlwo7e().s[20]++;
      console.log(`Checking ${linkRules.length} link rules for message: "${message}"`);
      // 各ルールをチェック
      /* istanbul ignore next */
      cov_d0hmlwo7e().s[21]++;
      for (const rule of linkRules) {
        /* istanbul ignore next */
        cov_d0hmlwo7e().s[22]++;
        try {
          const regex =
          /* istanbul ignore next */
          (cov_d0hmlwo7e().s[23]++, new RegExp(rule.triggerRegex, 'i'));
          /* istanbul ignore next */
          cov_d0hmlwo7e().s[24]++;
          if (regex.test(message)) {
            /* istanbul ignore next */
            cov_d0hmlwo7e().b[5][0]++;
            cov_d0hmlwo7e().s[25]++;
            console.log(`Link rule matched: ${rule.name} (${rule.triggerRegex})`);
            // メタデータを生成（URLからタイトルを取得）
            const linkMetadata =
            /* istanbul ignore next */
            (cov_d0hmlwo7e().s[26]++, yield generateLinkMetadata(rule.targetUrl));
            const linkCard =
            /* istanbul ignore next */
            (cov_d0hmlwo7e().s[27]++, {
              id: `link-${rule.id}`,
              title:
              /* istanbul ignore next */
              (cov_d0hmlwo7e().b[6][0]++, linkMetadata.title) ||
              /* istanbul ignore next */
              (cov_d0hmlwo7e().b[6][1]++, rule.name),
              url: rule.targetUrl,
              description:
              /* istanbul ignore next */
              (cov_d0hmlwo7e().b[7][0]++, rule.description) ||
              /* istanbul ignore next */
              (cov_d0hmlwo7e().b[7][1]++, linkMetadata.description),
              newTab: rule.newTab,
              ruleName: rule.name,
              ruleId: rule.id
            });
            /* istanbul ignore next */
            cov_d0hmlwo7e().s[28]++;
            result.links.push(linkCard);
            /* istanbul ignore next */
            cov_d0hmlwo7e().s[29]++;
            result.matched = true;
          } else
          /* istanbul ignore next */
          {
            cov_d0hmlwo7e().b[5][1]++;
          }
        } catch (error) {
          /* istanbul ignore next */
          cov_d0hmlwo7e().s[30]++;
          console.error(`Error processing link rule ${rule.id}:`, error);
          // 正規表現エラーがあっても続行
          /* istanbul ignore next */
          cov_d0hmlwo7e().s[31]++;
          continue;
        }
      }
      /* istanbul ignore next */
      cov_d0hmlwo7e().s[32]++;
      console.log(`Link rule matching completed: ${result.links.length} matches found`);
      /* istanbul ignore next */
      cov_d0hmlwo7e().s[33]++;
      return result;
    } catch (error) {
      /* istanbul ignore next */
      cov_d0hmlwo7e().s[34]++;
      console.error('Failed to match link rules:', error);
      /* istanbul ignore next */
      cov_d0hmlwo7e().s[35]++;
      return {
        matched: false,
        links: []
      };
    }
  });
}
/* istanbul ignore next */
cov_d0hmlwo7e().s[36]++;
exports.matchLinkRules = matchLinkRules;
// URLからメタデータを生成
function generateLinkMetadata(url) {
  /* istanbul ignore next */
  cov_d0hmlwo7e().f[9]++;
  cov_d0hmlwo7e().s[37]++;
  return __awaiter(this, void 0, void 0, function* () {
    /* istanbul ignore next */
    cov_d0hmlwo7e().f[10]++;
    cov_d0hmlwo7e().s[38]++;
    try {
      // 内部リンクの場合のタイトルマッピング
      const internalTitles =
      /* istanbul ignore next */
      (cov_d0hmlwo7e().s[39]++, {
        '/pricing': {
          title: '料金プラン',
          description: 'AI Chatの料金プランをご確認いただけます'
        },
        '/docs': {
          title: 'ドキュメント',
          description: 'AI Chatの使い方やAPI仕様をご確認いただけます'
        },
        '/contact': {
          title: 'お問い合わせ',
          description: 'サポートチームまでお気軽にお問い合わせください'
        },
        '/support': {
          title: 'サポート',
          description: 'ヘルプ情報とサポートリソースをご利用いただけます'
        }
      });
      // 内部リンクの場合
      /* istanbul ignore next */
      cov_d0hmlwo7e().s[40]++;
      if (url.startsWith('/')) {
        /* istanbul ignore next */
        cov_d0hmlwo7e().b[8][0]++;
        cov_d0hmlwo7e().s[41]++;
        return /* istanbul ignore next */(cov_d0hmlwo7e().b[9][0]++, internalTitles[url]) ||
        /* istanbul ignore next */
        (cov_d0hmlwo7e().b[9][1]++, {
          title: url,
          description: undefined
        });
      } else
      /* istanbul ignore next */
      {
        cov_d0hmlwo7e().b[8][1]++;
      }
      // 外部リンクの場合（簡単な実装）
      cov_d0hmlwo7e().s[42]++;
      try {
        const domain =
        /* istanbul ignore next */
        (cov_d0hmlwo7e().s[43]++, new URL(url).hostname);
        /* istanbul ignore next */
        cov_d0hmlwo7e().s[44]++;
        return {
          title: `${domain}`,
          description: `${domain}のページをご確認ください`
        };
      } catch (_a) {
        /* istanbul ignore next */
        cov_d0hmlwo7e().s[45]++;
        return {
          title: url,
          description: undefined
        };
      }
    } catch (error) {
      /* istanbul ignore next */
      cov_d0hmlwo7e().s[46]++;
      console.error('Failed to generate link metadata:', error);
      /* istanbul ignore next */
      cov_d0hmlwo7e().s[47]++;
      return {
        title: url,
        description: undefined
      };
    }
  });
}
// リンククリックを記録
function recordLinkClick(organizationId, ruleId, sessionId, userId, userAgent, referer) {
  /* istanbul ignore next */
  cov_d0hmlwo7e().f[11]++;
  cov_d0hmlwo7e().s[48]++;
  return __awaiter(this, void 0, void 0, function* () {
    /* istanbul ignore next */
    cov_d0hmlwo7e().f[12]++;
    cov_d0hmlwo7e().s[49]++;
    try {
      /* istanbul ignore next */
      cov_d0hmlwo7e().s[50]++;
      console.log(`Recording link click: rule=${ruleId}, session=${sessionId}`);
      // リンクルールのクリック数を増加
      /* istanbul ignore next */
      cov_d0hmlwo7e().s[51]++;
      yield prisma.linkRule.update({
        where: {
          id: ruleId
        },
        data: {
          clickCount: {
            increment: 1
          },
          lastClickedAt: new Date()
        }
      });
      // イベントとして記録（分析用）
      /* istanbul ignore next */
      cov_d0hmlwo7e().s[52]++;
      yield prisma.event.create({
        data: {
          companyId: organizationId,
          // TODO: 正しい会社IDにマッピング
          eventType: 'link_clicked',
          eventName: 'knowledge_base_link_clicked',
          properties: {
            ruleId,
            clickedAt: new Date().toISOString()
          },
          sessionId,
          userId,
          userAgent,
          referrer: referer,
          createdAt: new Date()
        }
      });
      /* istanbul ignore next */
      cov_d0hmlwo7e().s[53]++;
      console.log(`Link click recorded successfully for rule: ${ruleId}`);
    } catch (error) {
      /* istanbul ignore next */
      cov_d0hmlwo7e().s[54]++;
      console.error('Failed to record link click:', error);
      // エラーが発生してもサービス継続
    }
  });
}
/* istanbul ignore next */
cov_d0hmlwo7e().s[55]++;
exports.recordLinkClick = recordLinkClick;
// リンクルールの統計を取得
function getLinkRuleStats(organizationId, days =
/* istanbul ignore next */
(cov_d0hmlwo7e().b[10][0]++, 30)) {
  /* istanbul ignore next */
  cov_d0hmlwo7e().f[13]++;
  cov_d0hmlwo7e().s[56]++;
  return __awaiter(this, void 0, void 0, function* () {
    /* istanbul ignore next */
    cov_d0hmlwo7e().f[14]++;
    cov_d0hmlwo7e().s[57]++;
    try {
      const dateFrom =
      /* istanbul ignore next */
      (cov_d0hmlwo7e().s[58]++, new Date());
      /* istanbul ignore next */
      cov_d0hmlwo7e().s[59]++;
      dateFrom.setDate(dateFrom.getDate() - days);
      // リンクルール基本情報を取得
      const linkRules =
      /* istanbul ignore next */
      (cov_d0hmlwo7e().s[60]++, yield prisma.linkRule.findMany({
        where: {
          organizationId
        },
        orderBy: {
          clickCount: 'desc'
        }
      }));
      // 期間内のクリック数を取得
      const recentClicksData =
      /* istanbul ignore next */
      (cov_d0hmlwo7e().s[61]++, yield prisma.event.groupBy({
        by: ['properties'],
        where: {
          companyId: organizationId,
          eventType: 'link_clicked',
          createdAt: {
            gte: dateFrom
          }
        },
        _count: true
      }));
      // 結果をマッピング
      const stats =
      /* istanbul ignore next */
      (cov_d0hmlwo7e().s[62]++, linkRules.map(rule => {
        /* istanbul ignore next */
        cov_d0hmlwo7e().f[15]++;
        const recentClicks =
        /* istanbul ignore next */
        (cov_d0hmlwo7e().s[63]++, recentClicksData.filter(event => {
          /* istanbul ignore next */
          cov_d0hmlwo7e().f[16]++;
          cov_d0hmlwo7e().s[64]++;
          try {
            const props =
            /* istanbul ignore next */
            (cov_d0hmlwo7e().s[65]++, event.properties);
            /* istanbul ignore next */
            cov_d0hmlwo7e().s[66]++;
            return (
            /* istanbul ignore next */
            (cov_d0hmlwo7e().b[12][0]++, props === null) ||
            /* istanbul ignore next */
            (cov_d0hmlwo7e().b[12][1]++, props === void 0) ?
            /* istanbul ignore next */
            (cov_d0hmlwo7e().b[11][0]++, void 0) :
            /* istanbul ignore next */
            (cov_d0hmlwo7e().b[11][1]++, props.ruleId)) === rule.id;
          } catch (_a) {
            /* istanbul ignore next */
            cov_d0hmlwo7e().s[67]++;
            return false;
          }
        }).reduce((sum, event) => {
          /* istanbul ignore next */
          cov_d0hmlwo7e().f[17]++;
          cov_d0hmlwo7e().s[68]++;
          return sum + event._count;
        }, 0));
        /* istanbul ignore next */
        cov_d0hmlwo7e().s[69]++;
        return {
          id: rule.id,
          name: rule.name,
          triggerRegex: rule.triggerRegex,
          clickCount: rule.clickCount,
          lastClickedAt:
          /* istanbul ignore next */
          (cov_d0hmlwo7e().b[13][0]++, rule.lastClickedAt) ||
          /* istanbul ignore next */
          (cov_d0hmlwo7e().b[13][1]++, undefined),
          recentClicks,
          // CTRは表示回数のデータが必要なため、今回は省略
          ctr: undefined
        };
      }));
      /* istanbul ignore next */
      cov_d0hmlwo7e().s[70]++;
      return stats;
    } catch (error) {
      /* istanbul ignore next */
      cov_d0hmlwo7e().s[71]++;
      console.error('Failed to get link rule stats:', error);
      /* istanbul ignore next */
      cov_d0hmlwo7e().s[72]++;
      return [];
    }
  });
}
/* istanbul ignore next */
cov_d0hmlwo7e().s[73]++;
exports.getLinkRuleStats = getLinkRuleStats;
// メッセージにリンクカードを挿入
function insertLinkCards(message, linkCards) {
  /* istanbul ignore next */
  cov_d0hmlwo7e().f[18]++;
  cov_d0hmlwo7e().s[74]++;
  if (linkCards.length === 0) {
    /* istanbul ignore next */
    cov_d0hmlwo7e().b[14][0]++;
    cov_d0hmlwo7e().s[75]++;
    return message;
  } else
  /* istanbul ignore next */
  {
    cov_d0hmlwo7e().b[14][1]++;
  }
  // リンクカードのHTMLを生成
  const linkCardsHtml =
  /* istanbul ignore next */
  (cov_d0hmlwo7e().s[76]++, linkCards.map(card => {
    /* istanbul ignore next */
    cov_d0hmlwo7e().f[19]++;
    cov_d0hmlwo7e().s[77]++;
    return `
<div class="link-card" data-rule-id="${card.ruleId}" data-link-id="${card.id}">
  <div class="link-card-header">
    <h4 class="link-card-title">${escapeHtml(card.title)}</h4>
    <a href="${escapeHtml(card.url)}" 
       target="${card.newTab ?
    /* istanbul ignore next */
    (cov_d0hmlwo7e().b[15][0]++, '_blank') :
    /* istanbul ignore next */
    (cov_d0hmlwo7e().b[15][1]++, '_self')}" 
       rel="${card.newTab ?
    /* istanbul ignore next */
    (cov_d0hmlwo7e().b[16][0]++, 'noopener noreferrer') :
    /* istanbul ignore next */
    (cov_d0hmlwo7e().b[16][1]++, '')}"
       class="link-card-url"
       onclick="recordLinkClick('${card.ruleId}')">
      ${card.url.length > 50 ?
    /* istanbul ignore next */
    (cov_d0hmlwo7e().b[17][0]++, card.url.substring(0, 50) + '...') :
    /* istanbul ignore next */
    (cov_d0hmlwo7e().b[17][1]++, card.url)}
    </a>
  </div>
  ${card.description ?
    /* istanbul ignore next */
    (cov_d0hmlwo7e().b[18][0]++, `<p class="link-card-description">${escapeHtml(card.description)}</p>`) :
    /* istanbul ignore next */
    (cov_d0hmlwo7e().b[18][1]++, '')}
  <div class="link-card-footer">
    <small class="link-card-source">推奨リンク: ${escapeHtml(card.ruleName)}</small>
  </div>
</div>
  `;
  }).join('\n'));
  // メッセージの末尾にリンクカードを追加
  /* istanbul ignore next */
  cov_d0hmlwo7e().s[78]++;
  return `${message}\n\n${linkCardsHtml}`;
}
/* istanbul ignore next */
cov_d0hmlwo7e().s[79]++;
exports.insertLinkCards = insertLinkCards;
// HTMLエスケープ
function escapeHtml(text) {
  /* istanbul ignore next */
  cov_d0hmlwo7e().f[20]++;
  const map =
  /* istanbul ignore next */
  (cov_d0hmlwo7e().s[80]++, {
    '&': '&amp;',
    '<': '&lt;',
    '>': '&gt;',
    '"': '&quot;',
    "'": '&#039;'
  });
  /* istanbul ignore next */
  cov_d0hmlwo7e().s[81]++;
  return text.replace(/[&<>"']/g, m => {
    /* istanbul ignore next */
    cov_d0hmlwo7e().f[21]++;
    cov_d0hmlwo7e().s[82]++;
    return map[m];
  });
}
// リンクルールのテスト（正規表現が正しく動作するかチェック）
function testLinkRule(ruleId, testMessages) {
  /* istanbul ignore next */
  cov_d0hmlwo7e().f[22]++;
  cov_d0hmlwo7e().s[83]++;
  return __awaiter(this, void 0, void 0, function* () {
    /* istanbul ignore next */
    cov_d0hmlwo7e().f[23]++;
    cov_d0hmlwo7e().s[84]++;
    try {
      const rule =
      /* istanbul ignore next */
      (cov_d0hmlwo7e().s[85]++, yield prisma.linkRule.findUnique({
        where: {
          id: ruleId
        }
      }));
      /* istanbul ignore next */
      cov_d0hmlwo7e().s[86]++;
      if (!rule) {
        /* istanbul ignore next */
        cov_d0hmlwo7e().b[19][0]++;
        cov_d0hmlwo7e().s[87]++;
        throw new Error('Link rule not found');
      } else
      /* istanbul ignore next */
      {
        cov_d0hmlwo7e().b[19][1]++;
      }
      const results =
      /* istanbul ignore next */
      (cov_d0hmlwo7e().s[88]++, testMessages.map(message => {
        /* istanbul ignore next */
        cov_d0hmlwo7e().f[24]++;
        cov_d0hmlwo7e().s[89]++;
        try {
          const regex =
          /* istanbul ignore next */
          (cov_d0hmlwo7e().s[90]++, new RegExp(rule.triggerRegex, 'i'));
          /* istanbul ignore next */
          cov_d0hmlwo7e().s[91]++;
          return {
            message,
            matched: regex.test(message)
          };
        } catch (error) {
          /* istanbul ignore next */
          cov_d0hmlwo7e().s[92]++;
          return {
            message,
            matched: false,
            error: error instanceof Error ?
            /* istanbul ignore next */
            (cov_d0hmlwo7e().b[20][0]++, error.message) :
            /* istanbul ignore next */
            (cov_d0hmlwo7e().b[20][1]++, 'Unknown error')
          };
        }
      }));
      /* istanbul ignore next */
      cov_d0hmlwo7e().s[93]++;
      return results;
    } catch (error) {
      /* istanbul ignore next */
      cov_d0hmlwo7e().s[94]++;
      console.error('Failed to test link rule:', error);
      /* istanbul ignore next */
      cov_d0hmlwo7e().s[95]++;
      throw error;
    }
  });
}
/* istanbul ignore next */
cov_d0hmlwo7e().s[96]++;
exports.testLinkRule = testLinkRule;
// 人気のリンクルールを取得
function getPopularLinkRules(organizationId, limit =
/* istanbul ignore next */
(cov_d0hmlwo7e().b[21][0]++, 10)) {
  /* istanbul ignore next */
  cov_d0hmlwo7e().f[25]++;
  cov_d0hmlwo7e().s[97]++;
  return __awaiter(this, void 0, void 0, function* () {
    /* istanbul ignore next */
    cov_d0hmlwo7e().f[26]++;
    cov_d0hmlwo7e().s[98]++;
    try {
      const popularRules =
      /* istanbul ignore next */
      (cov_d0hmlwo7e().s[99]++, yield prisma.linkRule.findMany({
        where: {
          organizationId,
          isActive: true,
          clickCount: {
            gt: 0
          }
        },
        orderBy: {
          clickCount: 'desc'
        },
        take: limit,
        select: {
          id: true,
          name: true,
          targetUrl: true,
          clickCount: true,
          description: true
        }
      }));
      /* istanbul ignore next */
      cov_d0hmlwo7e().s[100]++;
      return popularRules.map(rule => {
        /* istanbul ignore next */
        cov_d0hmlwo7e().f[27]++;
        cov_d0hmlwo7e().s[101]++;
        return {
          id: rule.id,
          name: rule.name,
          url: rule.targetUrl,
          clickCount: rule.clickCount,
          description:
          /* istanbul ignore next */
          (cov_d0hmlwo7e().b[22][0]++, rule.description) ||
          /* istanbul ignore next */
          (cov_d0hmlwo7e().b[22][1]++, undefined)
        };
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_d0hmlwo7e().s[102]++;
      console.error('Failed to get popular link rules:', error);
      /* istanbul ignore next */
      cov_d0hmlwo7e().s[103]++;
      return [];
    }
  });
}
/* istanbul ignore next */
cov_d0hmlwo7e().s[104]++;
exports.getPopularLinkRules = getPopularLinkRules;
// 未使用のリンクルールを取得
function getUnusedLinkRules(organizationId, days =
/* istanbul ignore next */
(cov_d0hmlwo7e().b[23][0]++, 30)) {
  /* istanbul ignore next */
  cov_d0hmlwo7e().f[28]++;
  cov_d0hmlwo7e().s[105]++;
  return __awaiter(this, void 0, void 0, function* () {
    /* istanbul ignore next */
    cov_d0hmlwo7e().f[29]++;
    cov_d0hmlwo7e().s[106]++;
    try {
      const dateThreshold =
      /* istanbul ignore next */
      (cov_d0hmlwo7e().s[107]++, new Date());
      /* istanbul ignore next */
      cov_d0hmlwo7e().s[108]++;
      dateThreshold.setDate(dateThreshold.getDate() - days);
      const unusedRules =
      /* istanbul ignore next */
      (cov_d0hmlwo7e().s[109]++, yield prisma.linkRule.findMany({
        where: {
          organizationId,
          isActive: true,
          OR: [{
            clickCount: 0
          }, {
            lastClickedAt: {
              lt: dateThreshold
            }
          }, {
            lastClickedAt: null
          }]
        },
        orderBy: {
          createdAt: 'desc'
        },
        select: {
          id: true,
          name: true,
          triggerRegex: true,
          createdAt: true,
          lastClickedAt: true
        }
      }));
      /* istanbul ignore next */
      cov_d0hmlwo7e().s[110]++;
      return unusedRules.map(rule => {
        /* istanbul ignore next */
        cov_d0hmlwo7e().f[30]++;
        cov_d0hmlwo7e().s[111]++;
        return {
          id: rule.id,
          name: rule.name,
          triggerRegex: rule.triggerRegex,
          createdAt: rule.createdAt,
          lastClickedAt:
          /* istanbul ignore next */
          (cov_d0hmlwo7e().b[24][0]++, rule.lastClickedAt) ||
          /* istanbul ignore next */
          (cov_d0hmlwo7e().b[24][1]++, undefined)
        };
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_d0hmlwo7e().s[112]++;
      console.error('Failed to get unused link rules:', error);
      /* istanbul ignore next */
      cov_d0hmlwo7e().s[113]++;
      return [];
    }
  });
}
/* istanbul ignore next */
cov_d0hmlwo7e().s[114]++;
exports.getUnusedLinkRules = getUnusedLinkRules;
// リンクルールの効果分析
function analyzeLinkRuleEffectiveness(organizationId) {
  /* istanbul ignore next */
  cov_d0hmlwo7e().f[31]++;
  cov_d0hmlwo7e().s[115]++;
  return __awaiter(this, void 0, void 0, function* () {
    /* istanbul ignore next */
    cov_d0hmlwo7e().f[32]++;
    cov_d0hmlwo7e().s[116]++;
    try {
      const rules =
      /* istanbul ignore next */
      (cov_d0hmlwo7e().s[117]++, yield prisma.linkRule.findMany({
        where: {
          organizationId
        }
      }));
      const activeRules =
      /* istanbul ignore next */
      (cov_d0hmlwo7e().s[118]++, rules.filter(rule => {
        /* istanbul ignore next */
        cov_d0hmlwo7e().f[33]++;
        cov_d0hmlwo7e().s[119]++;
        return rule.isActive;
      }));
      const totalClicks =
      /* istanbul ignore next */
      (cov_d0hmlwo7e().s[120]++, rules.reduce((sum, rule) => {
        /* istanbul ignore next */
        cov_d0hmlwo7e().f[34]++;
        cov_d0hmlwo7e().s[121]++;
        return sum + rule.clickCount;
      }, 0));
      const averageClicksPerRule =
      /* istanbul ignore next */
      (cov_d0hmlwo7e().s[122]++, activeRules.length > 0 ?
      /* istanbul ignore next */
      (cov_d0hmlwo7e().b[25][0]++, totalClicks / activeRules.length) :
      /* istanbul ignore next */
      (cov_d0hmlwo7e().b[25][1]++, 0));
      const topPerformingRules =
      /* istanbul ignore next */
      (cov_d0hmlwo7e().s[123]++, rules.filter(rule => {
        /* istanbul ignore next */
        cov_d0hmlwo7e().f[35]++;
        cov_d0hmlwo7e().s[124]++;
        return rule.clickCount > 0;
      }).sort((a, b) => {
        /* istanbul ignore next */
        cov_d0hmlwo7e().f[36]++;
        cov_d0hmlwo7e().s[125]++;
        return b.clickCount - a.clickCount;
      }).slice(0, 5).map(rule => {
        /* istanbul ignore next */
        cov_d0hmlwo7e().f[37]++;
        cov_d0hmlwo7e().s[126]++;
        return {
          name: rule.name,
          clickCount: rule.clickCount
        };
      }));
      const now =
      /* istanbul ignore next */
      (cov_d0hmlwo7e().s[127]++, new Date());
      const underperformingRules =
      /* istanbul ignore next */
      (cov_d0hmlwo7e().s[128]++, rules.filter(rule => {
        /* istanbul ignore next */
        cov_d0hmlwo7e().f[38]++;
        cov_d0hmlwo7e().s[129]++;
        return /* istanbul ignore next */(cov_d0hmlwo7e().b[26][0]++, rule.isActive) && (
        /* istanbul ignore next */
        (cov_d0hmlwo7e().b[26][1]++, rule.clickCount === 0) ||
        /* istanbul ignore next */
        (cov_d0hmlwo7e().b[26][2]++, rule.lastClickedAt));
      }).map(rule => {
        /* istanbul ignore next */
        cov_d0hmlwo7e().f[39]++;
        cov_d0hmlwo7e().s[130]++;
        return {
          name: rule.name,
          daysSinceLastClick: rule.lastClickedAt ?
          /* istanbul ignore next */
          (cov_d0hmlwo7e().b[27][0]++, Math.floor((now.getTime() - rule.lastClickedAt.getTime()) / (1000 * 60 * 60 * 24))) :
          /* istanbul ignore next */
          (cov_d0hmlwo7e().b[27][1]++, Infinity)
        };
      }).filter(rule => {
        /* istanbul ignore next */
        cov_d0hmlwo7e().f[40]++;
        cov_d0hmlwo7e().s[131]++;
        return /* istanbul ignore next */(cov_d0hmlwo7e().b[28][0]++, rule.daysSinceLastClick > 7) ||
        /* istanbul ignore next */
        (cov_d0hmlwo7e().b[28][1]++, rule.daysSinceLastClick === Infinity);
      }).sort((a, b) => {
        /* istanbul ignore next */
        cov_d0hmlwo7e().f[41]++;
        cov_d0hmlwo7e().s[132]++;
        return b.daysSinceLastClick - a.daysSinceLastClick;
      }).slice(0, 5));
      /* istanbul ignore next */
      cov_d0hmlwo7e().s[133]++;
      return {
        totalRules: rules.length,
        activeRules: activeRules.length,
        totalClicks,
        averageClicksPerRule: Math.round(averageClicksPerRule * 100) / 100,
        topPerformingRules,
        underperformingRules
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_d0hmlwo7e().s[134]++;
      console.error('Failed to analyze link rule effectiveness:', error);
      /* istanbul ignore next */
      cov_d0hmlwo7e().s[135]++;
      return {
        totalRules: 0,
        activeRules: 0,
        totalClicks: 0,
        averageClicksPerRule: 0,
        topPerformingRules: [],
        underperformingRules: []
      };
    }
  });
}
/* istanbul ignore next */
cov_d0hmlwo7e().s[136]++;
exports.analyzeLinkRuleEffectiveness = analyzeLinkRuleEffectiveness;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,