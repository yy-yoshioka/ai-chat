765a5faa3fd296cedaa58f7452028fa3
"use strict";

/* istanbul ignore next */
function cov_1t58rm2ti7() {
  var path = "/Users/yusukeyoshioka/projects/youtube/ai-chat/ai-chat-api/src/services/dataRetentionService.ts";
  var hash = "8f2d88f18d289da7d70d49499e6f59f8501ce56b";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/yusukeyoshioka/projects/youtube/ai-chat/ai-chat-api/src/services/dataRetentionService.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 16
        },
        end: {
          line: 10,
          column: 1
        }
      },
      "1": {
        start: {
          line: 3,
          column: 28
        },
        end: {
          line: 3,
          column: 110
        }
      },
      "2": {
        start: {
          line: 3,
          column: 91
        },
        end: {
          line: 3,
          column: 106
        }
      },
      "3": {
        start: {
          line: 4,
          column: 4
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "4": {
        start: {
          line: 5,
          column: 36
        },
        end: {
          line: 5,
          column: 97
        }
      },
      "5": {
        start: {
          line: 5,
          column: 42
        },
        end: {
          line: 5,
          column: 70
        }
      },
      "6": {
        start: {
          line: 5,
          column: 85
        },
        end: {
          line: 5,
          column: 95
        }
      },
      "7": {
        start: {
          line: 6,
          column: 35
        },
        end: {
          line: 6,
          column: 100
        }
      },
      "8": {
        start: {
          line: 6,
          column: 41
        },
        end: {
          line: 6,
          column: 73
        }
      },
      "9": {
        start: {
          line: 6,
          column: 88
        },
        end: {
          line: 6,
          column: 98
        }
      },
      "10": {
        start: {
          line: 7,
          column: 32
        },
        end: {
          line: 7,
          column: 116
        }
      },
      "11": {
        start: {
          line: 8,
          column: 8
        },
        end: {
          line: 8,
          column: 78
        }
      },
      "12": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 11,
          column: 62
        }
      },
      "13": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 12,
          column: 315
        }
      },
      "14": {
        start: {
          line: 13,
          column: 17
        },
        end: {
          line: 13,
          column: 41
        }
      },
      "15": {
        start: {
          line: 14,
          column: 17
        },
        end: {
          line: 14,
          column: 41
        }
      },
      "16": {
        start: {
          line: 15,
          column: 39
        },
        end: {
          line: 36,
          column: 2
        }
      },
      "17": {
        start: {
          line: 15,
          column: 59
        },
        end: {
          line: 36,
          column: 2
        }
      },
      "18": {
        start: {
          line: 16,
          column: 17
        },
        end: {
          line: 18,
          column: 6
        }
      },
      "19": {
        start: {
          line: 19,
          column: 4
        },
        end: {
          line: 34,
          column: 5
        }
      },
      "20": {
        start: {
          line: 21,
          column: 8
        },
        end: {
          line: 33,
          column: 11
        }
      },
      "21": {
        start: {
          line: 35,
          column: 4
        },
        end: {
          line: 35,
          column: 18
        }
      },
      "22": {
        start: {
          line: 37,
          column: 0
        },
        end: {
          line: 37,
          column: 72
        }
      },
      "23": {
        start: {
          line: 38,
          column: 30
        },
        end: {
          line: 44,
          column: 2
        }
      },
      "24": {
        start: {
          line: 38,
          column: 59
        },
        end: {
          line: 44,
          column: 2
        }
      },
      "25": {
        start: {
          line: 39,
          column: 4
        },
        end: {
          line: 43,
          column: 7
        }
      },
      "26": {
        start: {
          line: 45,
          column: 0
        },
        end: {
          line: 45,
          column: 54
        }
      },
      "27": {
        start: {
          line: 46,
          column: 27
        },
        end: {
          line: 50,
          column: 2
        }
      },
      "28": {
        start: {
          line: 46,
          column: 37
        },
        end: {
          line: 50,
          column: 2
        }
      },
      "29": {
        start: {
          line: 47,
          column: 4
        },
        end: {
          line: 49,
          column: 7
        }
      },
      "30": {
        start: {
          line: 51,
          column: 0
        },
        end: {
          line: 51,
          column: 48
        }
      },
      "31": {
        start: {
          line: 52,
          column: 27
        },
        end: {
          line: 57,
          column: 2
        }
      },
      "32": {
        start: {
          line: 52,
          column: 47
        },
        end: {
          line: 57,
          column: 2
        }
      },
      "33": {
        start: {
          line: 53,
          column: 4
        },
        end: {
          line: 56,
          column: 7
        }
      },
      "34": {
        start: {
          line: 58,
          column: 0
        },
        end: {
          line: 58,
          column: 48
        }
      },
      "35": {
        start: {
          line: 60,
          column: 24
        },
        end: {
          line: 124,
          column: 2
        }
      },
      "36": {
        start: {
          line: 60,
          column: 59
        },
        end: {
          line: 124,
          column: 2
        }
      },
      "37": {
        start: {
          line: 61,
          column: 23
        },
        end: {
          line: 61,
          column: 33
        }
      },
      "38": {
        start: {
          line: 62,
          column: 4
        },
        end: {
          line: 62,
          column: 61
        }
      },
      "39": {
        start: {
          line: 63,
          column: 16
        },
        end: {
          line: 67,
          column: 6
        }
      },
      "40": {
        start: {
          line: 68,
          column: 4
        },
        end: {
          line: 123,
          column: 5
        }
      },
      "41": {
        start: {
          line: 69,
          column: 8
        },
        end: {
          line: 72,
          column: 11
        }
      },
      "42": {
        start: {
          line: 74,
          column: 30
        },
        end: {
          line: 85,
          column: 10
        }
      },
      "43": {
        start: {
          line: 87,
          column: 28
        },
        end: {
          line: 98,
          column: 10
        }
      },
      "44": {
        start: {
          line: 99,
          column: 8
        },
        end: {
          line: 104,
          column: 11
        }
      },
      "45": {
        start: {
          line: 105,
          column: 8
        },
        end: {
          line: 109,
          column: 11
        }
      },
      "46": {
        start: {
          line: 110,
          column: 8
        },
        end: {
          line: 110,
          column: 33
        }
      },
      "47": {
        start: {
          line: 113,
          column: 8
        },
        end: {
          line: 117,
          column: 11
        }
      },
      "48": {
        start: {
          line: 118,
          column: 8
        },
        end: {
          line: 121,
          column: 11
        }
      },
      "49": {
        start: {
          line: 122,
          column: 8
        },
        end: {
          line: 122,
          column: 20
        }
      },
      "50": {
        start: {
          line: 125,
          column: 0
        },
        end: {
          line: 125,
          column: 42
        }
      },
      "51": {
        start: {
          line: 127,
          column: 29
        },
        end: {
          line: 176,
          column: 2
        }
      },
      "52": {
        start: {
          line: 127,
          column: 48
        },
        end: {
          line: 176,
          column: 2
        }
      },
      "53": {
        start: {
          line: 128,
          column: 23
        },
        end: {
          line: 128,
          column: 33
        }
      },
      "54": {
        start: {
          line: 129,
          column: 4
        },
        end: {
          line: 129,
          column: 61
        }
      },
      "55": {
        start: {
          line: 130,
          column: 16
        },
        end: {
          line: 133,
          column: 6
        }
      },
      "56": {
        start: {
          line: 134,
          column: 4
        },
        end: {
          line: 175,
          column: 5
        }
      },
      "57": {
        start: {
          line: 135,
          column: 8
        },
        end: {
          line: 138,
          column: 11
        }
      },
      "58": {
        start: {
          line: 139,
          column: 30
        },
        end: {
          line: 145,
          column: 10
        }
      },
      "59": {
        start: {
          line: 146,
          column: 31
        },
        end: {
          line: 152,
          column: 10
        }
      },
      "60": {
        start: {
          line: 153,
          column: 8
        },
        end: {
          line: 158,
          column: 11
        }
      },
      "61": {
        start: {
          line: 159,
          column: 8
        },
        end: {
          line: 162,
          column: 11
        }
      },
      "62": {
        start: {
          line: 163,
          column: 8
        },
        end: {
          line: 163,
          column: 36
        }
      },
      "63": {
        start: {
          line: 166,
          column: 8
        },
        end: {
          line: 170,
          column: 11
        }
      },
      "64": {
        start: {
          line: 171,
          column: 8
        },
        end: {
          line: 173,
          column: 11
        }
      },
      "65": {
        start: {
          line: 174,
          column: 8
        },
        end: {
          line: 174,
          column: 20
        }
      },
      "66": {
        start: {
          line: 177,
          column: 0
        },
        end: {
          line: 177,
          column: 52
        }
      },
      "67": {
        start: {
          line: 179,
          column: 27
        },
        end: {
          line: 237,
          column: 2
        }
      },
      "68": {
        start: {
          line: 179,
          column: 62
        },
        end: {
          line: 237,
          column: 2
        }
      },
      "69": {
        start: {
          line: 180,
          column: 23
        },
        end: {
          line: 180,
          column: 33
        }
      },
      "70": {
        start: {
          line: 181,
          column: 4
        },
        end: {
          line: 181,
          column: 61
        }
      },
      "71": {
        start: {
          line: 182,
          column: 16
        },
        end: {
          line: 186,
          column: 6
        }
      },
      "72": {
        start: {
          line: 187,
          column: 4
        },
        end: {
          line: 236,
          column: 5
        }
      },
      "73": {
        start: {
          line: 188,
          column: 8
        },
        end: {
          line: 191,
          column: 11
        }
      },
      "74": {
        start: {
          line: 192,
          column: 30
        },
        end: {
          line: 201,
          column: 10
        }
      },
      "75": {
        start: {
          line: 202,
          column: 28
        },
        end: {
          line: 211,
          column: 10
        }
      },
      "76": {
        start: {
          line: 212,
          column: 8
        },
        end: {
          line: 217,
          column: 11
        }
      },
      "77": {
        start: {
          line: 218,
          column: 8
        },
        end: {
          line: 222,
          column: 11
        }
      },
      "78": {
        start: {
          line: 223,
          column: 8
        },
        end: {
          line: 223,
          column: 33
        }
      },
      "79": {
        start: {
          line: 226,
          column: 8
        },
        end: {
          line: 230,
          column: 11
        }
      },
      "80": {
        start: {
          line: 231,
          column: 8
        },
        end: {
          line: 234,
          column: 11
        }
      },
      "81": {
        start: {
          line: 235,
          column: 8
        },
        end: {
          line: 235,
          column: 20
        }
      },
      "82": {
        start: {
          line: 238,
          column: 0
        },
        end: {
          line: 238,
          column: 48
        }
      },
      "83": {
        start: {
          line: 240,
          column: 28
        },
        end: {
          line: 289,
          column: 2
        }
      },
      "84": {
        start: {
          line: 240,
          column: 47
        },
        end: {
          line: 289,
          column: 2
        }
      },
      "85": {
        start: {
          line: 241,
          column: 23
        },
        end: {
          line: 241,
          column: 33
        }
      },
      "86": {
        start: {
          line: 242,
          column: 4
        },
        end: {
          line: 242,
          column: 61
        }
      },
      "87": {
        start: {
          line: 243,
          column: 16
        },
        end: {
          line: 246,
          column: 6
        }
      },
      "88": {
        start: {
          line: 247,
          column: 4
        },
        end: {
          line: 288,
          column: 5
        }
      },
      "89": {
        start: {
          line: 248,
          column: 8
        },
        end: {
          line: 251,
          column: 11
        }
      },
      "90": {
        start: {
          line: 252,
          column: 30
        },
        end: {
          line: 258,
          column: 10
        }
      },
      "91": {
        start: {
          line: 259,
          column: 30
        },
        end: {
          line: 265,
          column: 10
        }
      },
      "92": {
        start: {
          line: 266,
          column: 8
        },
        end: {
          line: 271,
          column: 11
        }
      },
      "93": {
        start: {
          line: 272,
          column: 8
        },
        end: {
          line: 275,
          column: 11
        }
      },
      "94": {
        start: {
          line: 276,
          column: 8
        },
        end: {
          line: 276,
          column: 35
        }
      },
      "95": {
        start: {
          line: 279,
          column: 8
        },
        end: {
          line: 283,
          column: 11
        }
      },
      "96": {
        start: {
          line: 284,
          column: 8
        },
        end: {
          line: 286,
          column: 11
        }
      },
      "97": {
        start: {
          line: 287,
          column: 8
        },
        end: {
          line: 287,
          column: 20
        }
      },
      "98": {
        start: {
          line: 290,
          column: 0
        },
        end: {
          line: 290,
          column: 50
        }
      },
      "99": {
        start: {
          line: 292,
          column: 26
        },
        end: {
          line: 359,
          column: 2
        }
      },
      "100": {
        start: {
          line: 292,
          column: 61
        },
        end: {
          line: 359,
          column: 2
        }
      },
      "101": {
        start: {
          line: 293,
          column: 23
        },
        end: {
          line: 293,
          column: 33
        }
      },
      "102": {
        start: {
          line: 294,
          column: 4
        },
        end: {
          line: 294,
          column: 61
        }
      },
      "103": {
        start: {
          line: 295,
          column: 16
        },
        end: {
          line: 299,
          column: 6
        }
      },
      "104": {
        start: {
          line: 300,
          column: 4
        },
        end: {
          line: 358,
          column: 5
        }
      },
      "105": {
        start: {
          line: 301,
          column: 8
        },
        end: {
          line: 304,
          column: 11
        }
      },
      "106": {
        start: {
          line: 306,
          column: 32
        },
        end: {
          line: 321,
          column: 10
        }
      },
      "107": {
        start: {
          line: 323,
          column: 31
        },
        end: {
          line: 333,
          column: 10
        }
      },
      "108": {
        start: {
          line: 326,
          column: 53
        },
        end: {
          line: 326,
          column: 59
        }
      },
      "109": {
        start: {
          line: 334,
          column: 8
        },
        end: {
          line: 339,
          column: 11
        }
      },
      "110": {
        start: {
          line: 340,
          column: 8
        },
        end: {
          line: 344,
          column: 11
        }
      },
      "111": {
        start: {
          line: 345,
          column: 8
        },
        end: {
          line: 345,
          column: 36
        }
      },
      "112": {
        start: {
          line: 348,
          column: 8
        },
        end: {
          line: 352,
          column: 11
        }
      },
      "113": {
        start: {
          line: 353,
          column: 8
        },
        end: {
          line: 356,
          column: 11
        }
      },
      "114": {
        start: {
          line: 357,
          column: 8
        },
        end: {
          line: 357,
          column: 20
        }
      },
      "115": {
        start: {
          line: 360,
          column: 0
        },
        end: {
          line: 360,
          column: 46
        }
      },
      "116": {
        start: {
          line: 362,
          column: 31
        },
        end: {
          line: 375,
          column: 2
        }
      },
      "117": {
        start: {
          line: 362,
          column: 63
        },
        end: {
          line: 375,
          column: 2
        }
      },
      "118": {
        start: {
          line: 363,
          column: 4
        },
        end: {
          line: 374,
          column: 7
        }
      },
      "119": {
        start: {
          line: 376,
          column: 0
        },
        end: {
          line: 376,
          column: 56
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 44
          },
          end: {
            line: 2,
            column: 45
          }
        },
        loc: {
          start: {
            line: 2,
            column: 89
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "adopt",
        decl: {
          start: {
            line: 3,
            column: 13
          },
          end: {
            line: 3,
            column: 18
          }
        },
        loc: {
          start: {
            line: 3,
            column: 26
          },
          end: {
            line: 3,
            column: 112
          }
        },
        line: 3
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 3,
            column: 70
          },
          end: {
            line: 3,
            column: 71
          }
        },
        loc: {
          start: {
            line: 3,
            column: 89
          },
          end: {
            line: 3,
            column: 108
          }
        },
        line: 3
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 4,
            column: 36
          },
          end: {
            line: 4,
            column: 37
          }
        },
        loc: {
          start: {
            line: 4,
            column: 63
          },
          end: {
            line: 9,
            column: 5
          }
        },
        line: 4
      },
      "4": {
        name: "fulfilled",
        decl: {
          start: {
            line: 5,
            column: 17
          },
          end: {
            line: 5,
            column: 26
          }
        },
        loc: {
          start: {
            line: 5,
            column: 34
          },
          end: {
            line: 5,
            column: 99
          }
        },
        line: 5
      },
      "5": {
        name: "rejected",
        decl: {
          start: {
            line: 6,
            column: 17
          },
          end: {
            line: 6,
            column: 25
          }
        },
        loc: {
          start: {
            line: 6,
            column: 33
          },
          end: {
            line: 6,
            column: 102
          }
        },
        line: 6
      },
      "6": {
        name: "step",
        decl: {
          start: {
            line: 7,
            column: 17
          },
          end: {
            line: 7,
            column: 21
          }
        },
        loc: {
          start: {
            line: 7,
            column: 30
          },
          end: {
            line: 7,
            column: 118
          }
        },
        line: 7
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 15,
            column: 39
          },
          end: {
            line: 15,
            column: 40
          }
        },
        loc: {
          start: {
            line: 15,
            column: 59
          },
          end: {
            line: 36,
            column: 2
          }
        },
        line: 15
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 15,
            column: 93
          },
          end: {
            line: 15,
            column: 94
          }
        },
        loc: {
          start: {
            line: 15,
            column: 106
          },
          end: {
            line: 36,
            column: 1
          }
        },
        line: 15
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 38,
            column: 30
          },
          end: {
            line: 38,
            column: 31
          }
        },
        loc: {
          start: {
            line: 38,
            column: 59
          },
          end: {
            line: 44,
            column: 2
          }
        },
        line: 38
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 38,
            column: 93
          },
          end: {
            line: 38,
            column: 94
          }
        },
        loc: {
          start: {
            line: 38,
            column: 106
          },
          end: {
            line: 44,
            column: 1
          }
        },
        line: 38
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 46,
            column: 27
          },
          end: {
            line: 46,
            column: 28
          }
        },
        loc: {
          start: {
            line: 46,
            column: 37
          },
          end: {
            line: 50,
            column: 2
          }
        },
        line: 46
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 46,
            column: 71
          },
          end: {
            line: 46,
            column: 72
          }
        },
        loc: {
          start: {
            line: 46,
            column: 84
          },
          end: {
            line: 50,
            column: 1
          }
        },
        line: 46
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 52,
            column: 27
          },
          end: {
            line: 52,
            column: 28
          }
        },
        loc: {
          start: {
            line: 52,
            column: 47
          },
          end: {
            line: 57,
            column: 2
          }
        },
        line: 52
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 52,
            column: 81
          },
          end: {
            line: 52,
            column: 82
          }
        },
        loc: {
          start: {
            line: 52,
            column: 94
          },
          end: {
            line: 57,
            column: 1
          }
        },
        line: 52
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 60,
            column: 24
          },
          end: {
            line: 60,
            column: 25
          }
        },
        loc: {
          start: {
            line: 60,
            column: 59
          },
          end: {
            line: 124,
            column: 2
          }
        },
        line: 60
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 60,
            column: 93
          },
          end: {
            line: 60,
            column: 94
          }
        },
        loc: {
          start: {
            line: 60,
            column: 106
          },
          end: {
            line: 124,
            column: 1
          }
        },
        line: 60
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 127,
            column: 29
          },
          end: {
            line: 127,
            column: 30
          }
        },
        loc: {
          start: {
            line: 127,
            column: 48
          },
          end: {
            line: 176,
            column: 2
          }
        },
        line: 127
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 127,
            column: 82
          },
          end: {
            line: 127,
            column: 83
          }
        },
        loc: {
          start: {
            line: 127,
            column: 95
          },
          end: {
            line: 176,
            column: 1
          }
        },
        line: 127
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 179,
            column: 27
          },
          end: {
            line: 179,
            column: 28
          }
        },
        loc: {
          start: {
            line: 179,
            column: 62
          },
          end: {
            line: 237,
            column: 2
          }
        },
        line: 179
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 179,
            column: 96
          },
          end: {
            line: 179,
            column: 97
          }
        },
        loc: {
          start: {
            line: 179,
            column: 109
          },
          end: {
            line: 237,
            column: 1
          }
        },
        line: 179
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 240,
            column: 28
          },
          end: {
            line: 240,
            column: 29
          }
        },
        loc: {
          start: {
            line: 240,
            column: 47
          },
          end: {
            line: 289,
            column: 2
          }
        },
        line: 240
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 240,
            column: 81
          },
          end: {
            line: 240,
            column: 82
          }
        },
        loc: {
          start: {
            line: 240,
            column: 94
          },
          end: {
            line: 289,
            column: 1
          }
        },
        line: 240
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 292,
            column: 26
          },
          end: {
            line: 292,
            column: 27
          }
        },
        loc: {
          start: {
            line: 292,
            column: 61
          },
          end: {
            line: 359,
            column: 2
          }
        },
        line: 292
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 292,
            column: 95
          },
          end: {
            line: 292,
            column: 96
          }
        },
        loc: {
          start: {
            line: 292,
            column: 108
          },
          end: {
            line: 359,
            column: 1
          }
        },
        line: 292
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 326,
            column: 44
          },
          end: {
            line: 326,
            column: 45
          }
        },
        loc: {
          start: {
            line: 326,
            column: 53
          },
          end: {
            line: 326,
            column: 59
          }
        },
        line: 326
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 362,
            column: 31
          },
          end: {
            line: 362,
            column: 32
          }
        },
        loc: {
          start: {
            line: 362,
            column: 63
          },
          end: {
            line: 375,
            column: 2
          }
        },
        line: 362
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 362,
            column: 97
          },
          end: {
            line: 362,
            column: 98
          }
        },
        loc: {
          start: {
            line: 362,
            column: 110
          },
          end: {
            line: 375,
            column: 1
          }
        },
        line: 362
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 16
          },
          end: {
            line: 10,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 17
          },
          end: {
            line: 2,
            column: 21
          }
        }, {
          start: {
            line: 2,
            column: 25
          },
          end: {
            line: 2,
            column: 39
          }
        }, {
          start: {
            line: 2,
            column: 44
          },
          end: {
            line: 10,
            column: 1
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 3,
            column: 35
          },
          end: {
            line: 3,
            column: 109
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 3,
            column: 56
          },
          end: {
            line: 3,
            column: 61
          }
        }, {
          start: {
            line: 3,
            column: 64
          },
          end: {
            line: 3,
            column: 109
          }
        }],
        line: 3
      },
      "2": {
        loc: {
          start: {
            line: 4,
            column: 16
          },
          end: {
            line: 4,
            column: 34
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 4,
            column: 16
          },
          end: {
            line: 4,
            column: 17
          }
        }, {
          start: {
            line: 4,
            column: 22
          },
          end: {
            line: 4,
            column: 33
          }
        }],
        line: 4
      },
      "3": {
        loc: {
          start: {
            line: 7,
            column: 32
          },
          end: {
            line: 7,
            column: 115
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 7,
            column: 46
          },
          end: {
            line: 7,
            column: 67
          }
        }, {
          start: {
            line: 7,
            column: 70
          },
          end: {
            line: 7,
            column: 115
          }
        }],
        line: 7
      },
      "4": {
        loc: {
          start: {
            line: 8,
            column: 51
          },
          end: {
            line: 8,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 8,
            column: 51
          },
          end: {
            line: 8,
            column: 61
          }
        }, {
          start: {
            line: 8,
            column: 65
          },
          end: {
            line: 8,
            column: 67
          }
        }],
        line: 8
      },
      "5": {
        loc: {
          start: {
            line: 19,
            column: 4
          },
          end: {
            line: 34,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 19,
            column: 4
          },
          end: {
            line: 34,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 19
      },
      "6": {
        loc: {
          start: {
            line: 115,
            column: 19
          },
          end: {
            line: 115,
            column: 75
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 115,
            column: 44
          },
          end: {
            line: 115,
            column: 57
          }
        }, {
          start: {
            line: 115,
            column: 60
          },
          end: {
            line: 115,
            column: 75
          }
        }],
        line: 115
      },
      "7": {
        loc: {
          start: {
            line: 120,
            column: 19
          },
          end: {
            line: 120,
            column: 65
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 120,
            column: 44
          },
          end: {
            line: 120,
            column: 57
          }
        }, {
          start: {
            line: 120,
            column: 60
          },
          end: {
            line: 120,
            column: 65
          }
        }],
        line: 120
      },
      "8": {
        loc: {
          start: {
            line: 168,
            column: 19
          },
          end: {
            line: 168,
            column: 75
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 168,
            column: 44
          },
          end: {
            line: 168,
            column: 57
          }
        }, {
          start: {
            line: 168,
            column: 60
          },
          end: {
            line: 168,
            column: 75
          }
        }],
        line: 168
      },
      "9": {
        loc: {
          start: {
            line: 172,
            column: 19
          },
          end: {
            line: 172,
            column: 65
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 172,
            column: 44
          },
          end: {
            line: 172,
            column: 57
          }
        }, {
          start: {
            line: 172,
            column: 60
          },
          end: {
            line: 172,
            column: 65
          }
        }],
        line: 172
      },
      "10": {
        loc: {
          start: {
            line: 228,
            column: 19
          },
          end: {
            line: 228,
            column: 75
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 228,
            column: 44
          },
          end: {
            line: 228,
            column: 57
          }
        }, {
          start: {
            line: 228,
            column: 60
          },
          end: {
            line: 228,
            column: 75
          }
        }],
        line: 228
      },
      "11": {
        loc: {
          start: {
            line: 233,
            column: 19
          },
          end: {
            line: 233,
            column: 65
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 233,
            column: 44
          },
          end: {
            line: 233,
            column: 57
          }
        }, {
          start: {
            line: 233,
            column: 60
          },
          end: {
            line: 233,
            column: 65
          }
        }],
        line: 233
      },
      "12": {
        loc: {
          start: {
            line: 281,
            column: 19
          },
          end: {
            line: 281,
            column: 75
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 281,
            column: 44
          },
          end: {
            line: 281,
            column: 57
          }
        }, {
          start: {
            line: 281,
            column: 60
          },
          end: {
            line: 281,
            column: 75
          }
        }],
        line: 281
      },
      "13": {
        loc: {
          start: {
            line: 285,
            column: 19
          },
          end: {
            line: 285,
            column: 65
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 285,
            column: 44
          },
          end: {
            line: 285,
            column: 57
          }
        }, {
          start: {
            line: 285,
            column: 60
          },
          end: {
            line: 285,
            column: 65
          }
        }],
        line: 285
      },
      "14": {
        loc: {
          start: {
            line: 350,
            column: 19
          },
          end: {
            line: 350,
            column: 75
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 350,
            column: 44
          },
          end: {
            line: 350,
            column: 57
          }
        }, {
          start: {
            line: 350,
            column: 60
          },
          end: {
            line: 350,
            column: 75
          }
        }],
        line: 350
      },
      "15": {
        loc: {
          start: {
            line: 355,
            column: 19
          },
          end: {
            line: 355,
            column: 65
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 355,
            column: 44
          },
          end: {
            line: 355,
            column: 57
          }
        }, {
          start: {
            line: 355,
            column: 60
          },
          end: {
            line: 355,
            column: 65
          }
        }],
        line: 355
      },
      "16": {
        loc: {
          start: {
            line: 362,
            column: 48
          },
          end: {
            line: 362,
            column: 58
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 362,
            column: 56
          },
          end: {
            line: 362,
            column: 58
          }
        }],
        line: 362
      },
      "17": {
        loc: {
          start: {
            line: 364,
            column: 15
          },
          end: {
            line: 364,
            column: 55
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 364,
            column: 32
          },
          end: {
            line: 364,
            column: 50
          }
        }, {
          start: {
            line: 364,
            column: 53
          },
          end: {
            line: 364,
            column: 55
          }
        }],
        line: 364
      },
      "18": {
        loc: {
          start: {
            line: 367,
            column: 17
          },
          end: {
            line: 373,
            column: 13
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 368,
            column: 14
          },
          end: {
            line: 368,
            column: 16
          }
        }, {
          start: {
            line: 369,
            column: 14
          },
          end: {
            line: 373,
            column: 13
          }
        }],
        line: 367
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0],
      "17": [0, 0],
      "18": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/yusukeyoshioka/projects/youtube/ai-chat/ai-chat-api/src/services/dataRetentionService.ts",
      mappings: ";;;;;;;;;;;;AAAA,0CAAuC;AACvC,0CAAuC;AAahC,MAAM,8BAA8B,GAAG,CAC5C,cAAsB,EACtB,EAAE;IACF,IAAI,MAAM,GAAG,MAAM,eAAM,CAAC,mBAAmB,CAAC,UAAU,CAAC;QACvD,KAAK,EAAE,EAAE,cAAc,EAAE;KAC1B,CAAC,CAAC;IAEH,IAAI,CAAC,MAAM,EAAE,CAAC;QACZ,wBAAwB;QACxB,MAAM,GAAG,MAAM,eAAM,CAAC,mBAAmB,CAAC,MAAM,CAAC;YAC/C,IAAI,EAAE;gBACJ,cAAc;gBACd,QAAQ,EAAE,GAAG;gBACb,eAAe,EAAE,GAAG;gBACpB,aAAa,EAAE,EAAE;gBACjB,WAAW,EAAE,EAAE;gBACf,YAAY,EAAE,CAAC;gBACf,SAAS,EAAE,IAAI;gBACf,UAAU,EAAE,IAAI;gBAChB,aAAa,EAAE,KAAK;aACrB;SACF,CAAC,CAAC;IACL,CAAC;IAED,OAAO,MAAM,CAAC;AAChB,CAAC,CAAA,CAAC;AAzBW,QAAA,8BAA8B,kCAyBzC;AAEK,MAAM,qBAAqB,GAAG,CACnC,cAAsB,EACtB,OAAiC,EACjC,EAAE;IACF,OAAO,eAAM,CAAC,mBAAmB,CAAC,MAAM,CAAC;QACvC,KAAK,EAAE,EAAE,cAAc,EAAE;QACzB,MAAM,kCACD,OAAO,KACV,SAAS,EAAE,IAAI,IAAI,EAAE,GACtB;QACD,MAAM,kBACJ,cAAc,IACX,OAAO,CACX;KACF,CAAC,CAAC;AACL,CAAC,CAAA,CAAC;AAfW,QAAA,qBAAqB,yBAehC;AAEK,MAAM,kBAAkB,GAAG,CAAO,IAIxC,EAAE,EAAE;IACH,OAAO,eAAM,CAAC,gBAAgB,CAAC,MAAM,CAAC;QACpC,IAAI,kCACC,IAAI,KACP,MAAM,EAAE,SAAS,GAClB;KACF,CAAC,CAAC;AACL,CAAC,CAAA,CAAC;AAXW,QAAA,kBAAkB,sBAW7B;AAEK,MAAM,kBAAkB,GAAG,CAChC,KAAa,EACb,OAQC,EACD,EAAE;IACF,OAAO,eAAM,CAAC,gBAAgB,CAAC,MAAM,CAAC;QACpC,KAAK,EAAE,EAAE,EAAE,EAAE,KAAK,EAAE;QACpB,IAAI,EAAE,OAAO;KACd,CAAC,CAAC;AACL,CAAC,CAAA,CAAC;AAhBW,QAAA,kBAAkB,sBAgB7B;AAEF,oBAAoB;AACb,MAAM,eAAe,GAAG,CAC7B,cAAsB,EACtB,aAAqB,EACrB,EAAE;IACF,MAAM,UAAU,GAAG,IAAI,IAAI,EAAE,CAAC;IAC9B,UAAU,CAAC,OAAO,CAAC,UAAU,CAAC,OAAO,EAAE,GAAG,aAAa,CAAC,CAAC;IAEzD,MAAM,GAAG,GAAG,MAAM,IAAA,0BAAkB,EAAC;QACnC,cAAc;QACd,OAAO,EAAE,WAAW;QACpB,QAAQ,EAAE,EAAE,UAAU,EAAE,UAAU,CAAC,WAAW,EAAE,EAAE,aAAa,EAAE;KAClE,CAAC,CAAC;IAEH,IAAI,CAAC;QACH,MAAM,IAAA,0BAAkB,EAAC,GAAG,CAAC,EAAE,EAAE;YAC/B,MAAM,EAAE,SAAS;YACjB,SAAS,EAAE,IAAI,IAAI,EAAE;SACtB,CAAC,CAAC;QAEH,4BAA4B;QAC5B,MAAM,aAAa,GAAG,MAAM,eAAM,CAAC,OAAO,CAAC,KAAK,CAAC;YAC/C,KAAK,EAAE;gBACL,MAAM,EAAE;oBACN,OAAO,EAAE;wBACP,cAAc;qBACf;iBACF;gBACD,SAAS,EAAE;oBACT,EAAE,EAAE,UAAU;iBACf;aACF;SACF,CAAC,CAAC;QAEH,wCAAwC;QACxC,MAAM,WAAW,GAAG,MAAM,eAAM,CAAC,OAAO,CAAC,UAAU,CAAC;YAClD,KAAK,EAAE;gBACL,MAAM,EAAE;oBACN,OAAO,EAAE;wBACP,cAAc;qBACf;iBACF;gBACD,SAAS,EAAE;oBACT,EAAE,EAAE,UAAU;iBACf;aACF;SACF,CAAC,CAAC;QAEH,MAAM,IAAA,0BAAkB,EAAC,GAAG,CAAC,EAAE,EAAE;YAC/B,MAAM,EAAE,WAAW;YACnB,cAAc,EAAE,aAAa;YAC7B,YAAY,EAAE,WAAW,CAAC,KAAK;YAC/B,WAAW,EAAE,IAAI,IAAI,EAAE;SACxB,CAAC,CAAC;QAEH,eAAM,CAAC,IAAI,CAAC,6BAA6B,EAAE;YACzC,cAAc;YACd,YAAY,EAAE,WAAW,CAAC,KAAK;YAC/B,aAAa;SACd,CAAC,CAAC;QAEH,OAAO,WAAW,CAAC,KAAK,CAAC;IAC3B,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACf,MAAM,IAAA,0BAAkB,EAAC,GAAG,CAAC,EAAE,EAAE;YAC/B,MAAM,EAAE,QAAQ;YAChB,KAAK,EAAE,KAAK,YAAY,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,eAAe;YAC/D,WAAW,EAAE,IAAI,IAAI,EAAE;SACxB,CAAC,CAAC;QAEH,eAAM,CAAC,KAAK,CAAC,0BAA0B,EAAE;YACvC,cAAc;YACd,KAAK,EAAE,KAAK,YAAY,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK;SACtD,CAAC,CAAC;QAEH,MAAM,KAAK,CAAC;IACd,CAAC;AACH,CAAC,CAAA,CAAC;AA3EW,QAAA,eAAe,mBA2E1B;AAEF,yBAAyB;AAClB,MAAM,oBAAoB,GAAG,CAAO,aAAqB,EAAE,EAAE;IAClE,MAAM,UAAU,GAAG,IAAI,IAAI,EAAE,CAAC;IAC9B,UAAU,CAAC,OAAO,CAAC,UAAU,CAAC,OAAO,EAAE,GAAG,aAAa,CAAC,CAAC;IAEzD,MAAM,GAAG,GAAG,MAAM,IAAA,0BAAkB,EAAC;QACnC,OAAO,EAAE,gBAAgB;QACzB,QAAQ,EAAE,EAAE,UAAU,EAAE,UAAU,CAAC,WAAW,EAAE,EAAE,aAAa,EAAE;KAClE,CAAC,CAAC;IAEH,IAAI,CAAC;QACH,MAAM,IAAA,0BAAkB,EAAC,GAAG,CAAC,EAAE,EAAE;YAC/B,MAAM,EAAE,SAAS;YACjB,SAAS,EAAE,IAAI,IAAI,EAAE;SACtB,CAAC,CAAC;QAEH,MAAM,aAAa,GAAG,MAAM,eAAM,CAAC,YAAY,CAAC,KAAK,CAAC;YACpD,KAAK,EAAE;gBACL,SAAS,EAAE;oBACT,EAAE,EAAE,UAAU;iBACf;aACF;SACF,CAAC,CAAC;QAEH,MAAM,cAAc,GAAG,MAAM,eAAM,CAAC,YAAY,CAAC,UAAU,CAAC;YAC1D,KAAK,EAAE;gBACL,SAAS,EAAE;oBACT,EAAE,EAAE,UAAU;iBACf;aACF;SACF,CAAC,CAAC;QAEH,MAAM,IAAA,0BAAkB,EAAC,GAAG,CAAC,EAAE,EAAE;YAC/B,MAAM,EAAE,WAAW;YACnB,cAAc,EAAE,aAAa;YAC7B,YAAY,EAAE,cAAc,CAAC,KAAK;YAClC,WAAW,EAAE,IAAI,IAAI,EAAE;SACxB,CAAC,CAAC;QAEH,eAAM,CAAC,IAAI,CAAC,kCAAkC,EAAE;YAC9C,YAAY,EAAE,cAAc,CAAC,KAAK;YAClC,aAAa;SACd,CAAC,CAAC;QAEH,OAAO,cAAc,CAAC,KAAK,CAAC;IAC9B,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACf,MAAM,IAAA,0BAAkB,EAAC,GAAG,CAAC,EAAE,EAAE;YAC/B,MAAM,EAAE,QAAQ;YAChB,KAAK,EAAE,KAAK,YAAY,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,eAAe;YAC/D,WAAW,EAAE,IAAI,IAAI,EAAE;SACxB,CAAC,CAAC;QAEH,eAAM,CAAC,KAAK,CAAC,+BAA+B,EAAE;YAC5C,KAAK,EAAE,KAAK,YAAY,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK;SACtD,CAAC,CAAC;QAEH,MAAM,KAAK,CAAC;IACd,CAAC;AACH,CAAC,CAAA,CAAC;AAzDW,QAAA,oBAAoB,wBAyD/B;AAEF,uBAAuB;AAChB,MAAM,kBAAkB,GAAG,CAChC,cAAsB,EACtB,aAAqB,EACrB,EAAE;IACF,MAAM,UAAU,GAAG,IAAI,IAAI,EAAE,CAAC;IAC9B,UAAU,CAAC,OAAO,CAAC,UAAU,CAAC,OAAO,EAAE,GAAG,aAAa,CAAC,CAAC;IAEzD,MAAM,GAAG,GAAG,MAAM,IAAA,0BAAkB,EAAC;QACnC,cAAc;QACd,OAAO,EAAE,cAAc;QACvB,QAAQ,EAAE,EAAE,UAAU,EAAE,UAAU,CAAC,WAAW,EAAE,EAAE,aAAa,EAAE;KAClE,CAAC,CAAC;IAEH,IAAI,CAAC;QACH,MAAM,IAAA,0BAAkB,EAAC,GAAG,CAAC,EAAE,EAAE;YAC/B,MAAM,EAAE,SAAS;YACjB,SAAS,EAAE,IAAI,IAAI,EAAE;SACtB,CAAC,CAAC;QAEH,MAAM,aAAa,GAAG,MAAM,eAAM,CAAC,UAAU,CAAC,KAAK,CAAC;YAClD,KAAK,EAAE;gBACL,OAAO,EAAE;oBACP,cAAc;iBACf;gBACD,UAAU,EAAE;oBACV,EAAE,EAAE,UAAU;iBACf;aACF;SACF,CAAC,CAAC;QAEH,MAAM,WAAW,GAAG,MAAM,eAAM,CAAC,UAAU,CAAC,UAAU,CAAC;YACrD,KAAK,EAAE;gBACL,OAAO,EAAE;oBACP,cAAc;iBACf;gBACD,UAAU,EAAE;oBACV,EAAE,EAAE,UAAU;iBACf;aACF;SACF,CAAC,CAAC;QAEH,MAAM,IAAA,0BAAkB,EAAC,GAAG,CAAC,EAAE,EAAE;YAC/B,MAAM,EAAE,WAAW;YACnB,cAAc,EAAE,aAAa;YAC7B,YAAY,EAAE,WAAW,CAAC,KAAK;YAC/B,WAAW,EAAE,IAAI,IAAI,EAAE;SACxB,CAAC,CAAC;QAEH,eAAM,CAAC,IAAI,CAAC,gCAAgC,EAAE;YAC5C,cAAc;YACd,YAAY,EAAE,WAAW,CAAC,KAAK;YAC/B,aAAa;SACd,CAAC,CAAC;QAEH,OAAO,WAAW,CAAC,KAAK,CAAC;IAC3B,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACf,MAAM,IAAA,0BAAkB,EAAC,GAAG,CAAC,EAAE,EAAE;YAC/B,MAAM,EAAE,QAAQ;YAChB,KAAK,EAAE,KAAK,YAAY,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,eAAe;YAC/D,WAAW,EAAE,IAAI,IAAI,EAAE;SACxB,CAAC,CAAC;QAEH,eAAM,CAAC,KAAK,CAAC,6BAA6B,EAAE;YAC1C,cAAc;YACd,KAAK,EAAE,KAAK,YAAY,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK;SACtD,CAAC,CAAC;QAEH,MAAM,KAAK,CAAC;IACd,CAAC;AACH,CAAC,CAAA,CAAC;AArEW,QAAA,kBAAkB,sBAqE7B;AAEF,wBAAwB;AACjB,MAAM,mBAAmB,GAAG,CAAO,aAAqB,EAAE,EAAE;IACjE,MAAM,UAAU,GAAG,IAAI,IAAI,EAAE,CAAC;IAC9B,UAAU,CAAC,OAAO,CAAC,UAAU,CAAC,OAAO,EAAE,GAAG,aAAa,CAAC,CAAC;IAEzD,MAAM,GAAG,GAAG,MAAM,IAAA,0BAAkB,EAAC;QACnC,OAAO,EAAE,eAAe;QACxB,QAAQ,EAAE,EAAE,UAAU,EAAE,UAAU,CAAC,WAAW,EAAE,EAAE,aAAa,EAAE;KAClE,CAAC,CAAC;IAEH,IAAI,CAAC;QACH,MAAM,IAAA,0BAAkB,EAAC,GAAG,CAAC,EAAE,EAAE;YAC/B,MAAM,EAAE,SAAS;YACjB,SAAS,EAAE,IAAI,IAAI,EAAE;SACtB,CAAC,CAAC;QAEH,MAAM,aAAa,GAAG,MAAM,eAAM,CAAC,WAAW,CAAC,KAAK,CAAC;YACnD,KAAK,EAAE;gBACL,SAAS,EAAE;oBACT,EAAE,EAAE,UAAU;iBACf;aACF;SACF,CAAC,CAAC;QAEH,MAAM,aAAa,GAAG,MAAM,eAAM,CAAC,WAAW,CAAC,UAAU,CAAC;YACxD,KAAK,EAAE;gBACL,SAAS,EAAE;oBACT,EAAE,EAAE,UAAU;iBACf;aACF;SACF,CAAC,CAAC;QAEH,MAAM,IAAA,0BAAkB,EAAC,GAAG,CAAC,EAAE,EAAE;YAC/B,MAAM,EAAE,WAAW;YACnB,cAAc,EAAE,aAAa;YAC7B,YAAY,EAAE,aAAa,CAAC,KAAK;YACjC,WAAW,EAAE,IAAI,IAAI,EAAE;SACxB,CAAC,CAAC;QAEH,eAAM,CAAC,IAAI,CAAC,iCAAiC,EAAE;YAC7C,YAAY,EAAE,aAAa,CAAC,KAAK;YACjC,aAAa;SACd,CAAC,CAAC;QAEH,OAAO,aAAa,CAAC,KAAK,CAAC;IAC7B,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACf,MAAM,IAAA,0BAAkB,EAAC,GAAG,CAAC,EAAE,EAAE;YAC/B,MAAM,EAAE,QAAQ;YAChB,KAAK,EAAE,KAAK,YAAY,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,eAAe;YAC/D,WAAW,EAAE,IAAI,IAAI,EAAE;SACxB,CAAC,CAAC;QAEH,eAAM,CAAC,KAAK,CAAC,8BAA8B,EAAE;YAC3C,KAAK,EAAE,KAAK,YAAY,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK;SACtD,CAAC,CAAC;QAEH,MAAM,KAAK,CAAC;IACd,CAAC;AACH,CAAC,CAAA,CAAC;AAzDW,QAAA,mBAAmB,uBAyD9B;AAEF,uCAAuC;AAChC,MAAM,iBAAiB,GAAG,CAC/B,cAAsB,EACtB,aAAqB,EACrB,EAAE;IACF,MAAM,UAAU,GAAG,IAAI,IAAI,EAAE,CAAC;IAC9B,UAAU,CAAC,OAAO,CAAC,UAAU,CAAC,OAAO,EAAE,GAAG,aAAa,CAAC,CAAC;IAEzD,MAAM,GAAG,GAAG,MAAM,IAAA,0BAAkB,EAAC;QACnC,cAAc;QACd,OAAO,EAAE,yBAAyB;QAClC,QAAQ,EAAE,EAAE,UAAU,EAAE,UAAU,CAAC,WAAW,EAAE,EAAE,aAAa,EAAE;KAClE,CAAC,CAAC;IAEH,IAAI,CAAC;QACH,MAAM,IAAA,0BAAkB,EAAC,GAAG,CAAC,EAAE,EAAE;YAC/B,MAAM,EAAE,SAAS;YACjB,SAAS,EAAE,IAAI,IAAI,EAAE;SACtB,CAAC,CAAC;QAEH,8BAA8B;QAC9B,MAAM,eAAe,GAAG,MAAM,eAAM,CAAC,OAAO,CAAC,QAAQ,CAAC;YACpD,KAAK,EAAE;gBACL,MAAM,EAAE;oBACN,OAAO,EAAE;wBACP,cAAc;qBACf;iBACF;gBACD,SAAS,EAAE;oBACT,EAAE,EAAE,UAAU;iBACf;gBACD,MAAM,EAAE;oBACN,GAAG,EAAE,IAAI;iBACV;aACF;YACD,MAAM,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE;SACrB,CAAC,CAAC;QAEH,gDAAgD;QAChD,MAAM,cAAc,GAAG,MAAM,eAAM,CAAC,OAAO,CAAC,UAAU,CAAC;YACrD,KAAK,EAAE;gBACL,EAAE,EAAE;oBACF,EAAE,EAAE,eAAe,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC;iBACzC;aACF;YACD,IAAI,EAAE;gBACJ,MAAM,EAAE,IAAI;gBACZ,0CAA0C;aAC3C;SACF,CAAC,CAAC;QAEH,MAAM,IAAA,0BAAkB,EAAC,GAAG,CAAC,EAAE,EAAE;YAC/B,MAAM,EAAE,WAAW;YACnB,cAAc,EAAE,eAAe,CAAC,MAAM;YACtC,eAAe,EAAE,cAAc,CAAC,KAAK;YACrC,WAAW,EAAE,IAAI,IAAI,EAAE;SACxB,CAAC,CAAC;QAEH,eAAM,CAAC,IAAI,CAAC,mCAAmC,EAAE;YAC/C,cAAc;YACd,eAAe,EAAE,cAAc,CAAC,KAAK;YACrC,aAAa;SACd,CAAC,CAAC;QAEH,OAAO,cAAc,CAAC,KAAK,CAAC;IAC9B,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACf,MAAM,IAAA,0BAAkB,EAAC,GAAG,CAAC,EAAE,EAAE;YAC/B,MAAM,EAAE,QAAQ;YAChB,KAAK,EAAE,KAAK,YAAY,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,eAAe;YAC/D,WAAW,EAAE,IAAI,IAAI,EAAE;SACxB,CAAC,CAAC;QAEH,eAAM,CAAC,KAAK,CAAC,gCAAgC,EAAE;YAC7C,cAAc;YACd,KAAK,EAAE,KAAK,YAAY,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK;SACtD,CAAC,CAAC;QAEH,MAAM,KAAK,CAAC;IACd,CAAC;AACH,CAAC,CAAA,CAAC;AA9EW,QAAA,iBAAiB,qBA8E5B;AAEF,4BAA4B;AACrB,MAAM,sBAAsB,GAAG,CACpC,cAAuB,EACvB,QAAgB,EAAE,EAClB,EAAE;IACF,OAAO,eAAM,CAAC,gBAAgB,CAAC,QAAQ,CAAC;QACtC,KAAK,EAAE,cAAc,CAAC,CAAC,CAAC,EAAE,cAAc,EAAE,CAAC,CAAC,CAAC,EAAE;QAC/C,OAAO,EAAE,EAAE,SAAS,EAAE,MAAM,EAAE;QAC9B,IAAI,EAAE,KAAK;QACX,OAAO,EAAE,cAAc;YACrB,CAAC,CAAC,EAAE;YACJ,CAAC,CAAC;gBACE,YAAY,EAAE;oBACZ,MAAM,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE;iBACvB;aACF;KACN,CAAC,CAAC;AACL,CAAC,CAAA,CAAC;AAhBW,QAAA,sBAAsB,0BAgBjC",
      names: [],
      sources: ["/Users/yusukeyoshioka/projects/youtube/ai-chat/ai-chat-api/src/services/dataRetentionService.ts"],
      sourcesContent: ["import { prisma } from '../lib/prisma';\nimport { logger } from '../lib/logger';\n\nexport interface RetentionPolicy {\n  chatLogs: number;\n  messageFeedback: number;\n  systemMetrics: number;\n  webhookLogs: number;\n  healthChecks: number;\n  auditLogs: number;\n  autoDelete: boolean;\n  anonymizeData: boolean;\n}\n\nexport const getOrganizationRetentionPolicy = async (\n  organizationId: string\n) => {\n  let policy = await prisma.dataRetentionPolicy.findUnique({\n    where: { organizationId },\n  });\n\n  if (!policy) {\n    // Create default policy\n    policy = await prisma.dataRetentionPolicy.create({\n      data: {\n        organizationId,\n        chatLogs: 365,\n        messageFeedback: 730,\n        systemMetrics: 90,\n        webhookLogs: 30,\n        healthChecks: 7,\n        auditLogs: 2555,\n        autoDelete: true,\n        anonymizeData: false,\n      },\n    });\n  }\n\n  return policy;\n};\n\nexport const updateRetentionPolicy = async (\n  organizationId: string,\n  updates: Partial<RetentionPolicy>\n) => {\n  return prisma.dataRetentionPolicy.upsert({\n    where: { organizationId },\n    update: {\n      ...updates,\n      updatedAt: new Date(),\n    },\n    create: {\n      organizationId,\n      ...updates,\n    },\n  });\n};\n\nexport const createRetentionJob = async (data: {\n  organizationId?: string;\n  jobType: string;\n  metadata?: Record<string, any>;\n}) => {\n  return prisma.dataRetentionJob.create({\n    data: {\n      ...data,\n      status: 'pending',\n    },\n  });\n};\n\nexport const updateRetentionJob = async (\n  jobId: string,\n  updates: {\n    status?: string;\n    itemsProcessed?: number;\n    itemsDeleted?: number;\n    itemsAnonymized?: number;\n    startedAt?: Date;\n    completedAt?: Date;\n    error?: string;\n  }\n) => {\n  return prisma.dataRetentionJob.update({\n    where: { id: jobId },\n    data: updates,\n  });\n};\n\n// Chat logs cleanup\nexport const cleanupChatLogs = async (\n  organizationId: string,\n  retentionDays: number\n) => {\n  const cutoffDate = new Date();\n  cutoffDate.setDate(cutoffDate.getDate() - retentionDays);\n\n  const job = await createRetentionJob({\n    organizationId,\n    jobType: 'chat_logs',\n    metadata: { cutoffDate: cutoffDate.toISOString(), retentionDays },\n  });\n\n  try {\n    await updateRetentionJob(job.id, {\n      status: 'running',\n      startedAt: new Date(),\n    });\n\n    // Count items to be deleted\n    const itemsToDelete = await prisma.chatLog.count({\n      where: {\n        widget: {\n          company: {\n            organizationId,\n          },\n        },\n        createdAt: {\n          lt: cutoffDate,\n        },\n      },\n    });\n\n    // Delete chat logs and related feedback\n    const deletedLogs = await prisma.chatLog.deleteMany({\n      where: {\n        widget: {\n          company: {\n            organizationId,\n          },\n        },\n        createdAt: {\n          lt: cutoffDate,\n        },\n      },\n    });\n\n    await updateRetentionJob(job.id, {\n      status: 'completed',\n      itemsProcessed: itemsToDelete,\n      itemsDeleted: deletedLogs.count,\n      completedAt: new Date(),\n    });\n\n    logger.info('Chat logs cleanup completed', {\n      organizationId,\n      deletedCount: deletedLogs.count,\n      retentionDays,\n    });\n\n    return deletedLogs.count;\n  } catch (error) {\n    await updateRetentionJob(job.id, {\n      status: 'failed',\n      error: error instanceof Error ? error.message : 'Unknown error',\n      completedAt: new Date(),\n    });\n\n    logger.error('Chat logs cleanup failed', {\n      organizationId,\n      error: error instanceof Error ? error.message : error,\n    });\n\n    throw error;\n  }\n};\n\n// System metrics cleanup\nexport const cleanupSystemMetrics = async (retentionDays: number) => {\n  const cutoffDate = new Date();\n  cutoffDate.setDate(cutoffDate.getDate() - retentionDays);\n\n  const job = await createRetentionJob({\n    jobType: 'system_metrics',\n    metadata: { cutoffDate: cutoffDate.toISOString(), retentionDays },\n  });\n\n  try {\n    await updateRetentionJob(job.id, {\n      status: 'running',\n      startedAt: new Date(),\n    });\n\n    const itemsToDelete = await prisma.systemMetric.count({\n      where: {\n        timestamp: {\n          lt: cutoffDate,\n        },\n      },\n    });\n\n    const deletedMetrics = await prisma.systemMetric.deleteMany({\n      where: {\n        timestamp: {\n          lt: cutoffDate,\n        },\n      },\n    });\n\n    await updateRetentionJob(job.id, {\n      status: 'completed',\n      itemsProcessed: itemsToDelete,\n      itemsDeleted: deletedMetrics.count,\n      completedAt: new Date(),\n    });\n\n    logger.info('System metrics cleanup completed', {\n      deletedCount: deletedMetrics.count,\n      retentionDays,\n    });\n\n    return deletedMetrics.count;\n  } catch (error) {\n    await updateRetentionJob(job.id, {\n      status: 'failed',\n      error: error instanceof Error ? error.message : 'Unknown error',\n      completedAt: new Date(),\n    });\n\n    logger.error('System metrics cleanup failed', {\n      error: error instanceof Error ? error.message : error,\n    });\n\n    throw error;\n  }\n};\n\n// Webhook logs cleanup\nexport const cleanupWebhookLogs = async (\n  organizationId: string,\n  retentionDays: number\n) => {\n  const cutoffDate = new Date();\n  cutoffDate.setDate(cutoffDate.getDate() - retentionDays);\n\n  const job = await createRetentionJob({\n    organizationId,\n    jobType: 'webhook_logs',\n    metadata: { cutoffDate: cutoffDate.toISOString(), retentionDays },\n  });\n\n  try {\n    await updateRetentionJob(job.id, {\n      status: 'running',\n      startedAt: new Date(),\n    });\n\n    const itemsToDelete = await prisma.webhookLog.count({\n      where: {\n        webhook: {\n          organizationId,\n        },\n        executedAt: {\n          lt: cutoffDate,\n        },\n      },\n    });\n\n    const deletedLogs = await prisma.webhookLog.deleteMany({\n      where: {\n        webhook: {\n          organizationId,\n        },\n        executedAt: {\n          lt: cutoffDate,\n        },\n      },\n    });\n\n    await updateRetentionJob(job.id, {\n      status: 'completed',\n      itemsProcessed: itemsToDelete,\n      itemsDeleted: deletedLogs.count,\n      completedAt: new Date(),\n    });\n\n    logger.info('Webhook logs cleanup completed', {\n      organizationId,\n      deletedCount: deletedLogs.count,\n      retentionDays,\n    });\n\n    return deletedLogs.count;\n  } catch (error) {\n    await updateRetentionJob(job.id, {\n      status: 'failed',\n      error: error instanceof Error ? error.message : 'Unknown error',\n      completedAt: new Date(),\n    });\n\n    logger.error('Webhook logs cleanup failed', {\n      organizationId,\n      error: error instanceof Error ? error.message : error,\n    });\n\n    throw error;\n  }\n};\n\n// Health checks cleanup\nexport const cleanupHealthChecks = async (retentionDays: number) => {\n  const cutoffDate = new Date();\n  cutoffDate.setDate(cutoffDate.getDate() - retentionDays);\n\n  const job = await createRetentionJob({\n    jobType: 'health_checks',\n    metadata: { cutoffDate: cutoffDate.toISOString(), retentionDays },\n  });\n\n  try {\n    await updateRetentionJob(job.id, {\n      status: 'running',\n      startedAt: new Date(),\n    });\n\n    const itemsToDelete = await prisma.healthCheck.count({\n      where: {\n        checkedAt: {\n          lt: cutoffDate,\n        },\n      },\n    });\n\n    const deletedChecks = await prisma.healthCheck.deleteMany({\n      where: {\n        checkedAt: {\n          lt: cutoffDate,\n        },\n      },\n    });\n\n    await updateRetentionJob(job.id, {\n      status: 'completed',\n      itemsProcessed: itemsToDelete,\n      itemsDeleted: deletedChecks.count,\n      completedAt: new Date(),\n    });\n\n    logger.info('Health checks cleanup completed', {\n      deletedCount: deletedChecks.count,\n      retentionDays,\n    });\n\n    return deletedChecks.count;\n  } catch (error) {\n    await updateRetentionJob(job.id, {\n      status: 'failed',\n      error: error instanceof Error ? error.message : 'Unknown error',\n      completedAt: new Date(),\n    });\n\n    logger.error('Health checks cleanup failed', {\n      error: error instanceof Error ? error.message : error,\n    });\n\n    throw error;\n  }\n};\n\n// Data anonymization (GDPR compliance)\nexport const anonymizeChatLogs = async (\n  organizationId: string,\n  retentionDays: number\n) => {\n  const cutoffDate = new Date();\n  cutoffDate.setDate(cutoffDate.getDate() - retentionDays);\n\n  const job = await createRetentionJob({\n    organizationId,\n    jobType: 'chat_logs_anonymization',\n    metadata: { cutoffDate: cutoffDate.toISOString(), retentionDays },\n  });\n\n  try {\n    await updateRetentionJob(job.id, {\n      status: 'running',\n      startedAt: new Date(),\n    });\n\n    // Find chat logs to anonymize\n    const logsToAnonymize = await prisma.chatLog.findMany({\n      where: {\n        widget: {\n          company: {\n            organizationId,\n          },\n        },\n        createdAt: {\n          lt: cutoffDate,\n        },\n        userId: {\n          not: null,\n        },\n      },\n      select: { id: true },\n    });\n\n    // Anonymize by removing user references and PII\n    const anonymizedLogs = await prisma.chatLog.updateMany({\n      where: {\n        id: {\n          in: logsToAnonymize.map((log) => log.id),\n        },\n      },\n      data: {\n        userId: null,\n        // Could add more anonymization logic here\n      },\n    });\n\n    await updateRetentionJob(job.id, {\n      status: 'completed',\n      itemsProcessed: logsToAnonymize.length,\n      itemsAnonymized: anonymizedLogs.count,\n      completedAt: new Date(),\n    });\n\n    logger.info('Chat logs anonymization completed', {\n      organizationId,\n      anonymizedCount: anonymizedLogs.count,\n      retentionDays,\n    });\n\n    return anonymizedLogs.count;\n  } catch (error) {\n    await updateRetentionJob(job.id, {\n      status: 'failed',\n      error: error instanceof Error ? error.message : 'Unknown error',\n      completedAt: new Date(),\n    });\n\n    logger.error('Chat logs anonymization failed', {\n      organizationId,\n      error: error instanceof Error ? error.message : error,\n    });\n\n    throw error;\n  }\n};\n\n// Get retention job history\nexport const getRetentionJobHistory = async (\n  organizationId?: string,\n  limit: number = 50\n) => {\n  return prisma.dataRetentionJob.findMany({\n    where: organizationId ? { organizationId } : {},\n    orderBy: { createdAt: 'desc' },\n    take: limit,\n    include: organizationId\n      ? {}\n      : {\n          organization: {\n            select: { name: true },\n          },\n        },\n  });\n};\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "8f2d88f18d289da7d70d49499e6f59f8501ce56b"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1t58rm2ti7 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1t58rm2ti7();
var __awaiter =
/* istanbul ignore next */
(cov_1t58rm2ti7().s[0]++,
/* istanbul ignore next */
(cov_1t58rm2ti7().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_1t58rm2ti7().b[0][1]++, this.__awaiter) ||
/* istanbul ignore next */
(cov_1t58rm2ti7().b[0][2]++, function (thisArg, _arguments, P, generator) {
  /* istanbul ignore next */
  cov_1t58rm2ti7().f[0]++;
  function adopt(value) {
    /* istanbul ignore next */
    cov_1t58rm2ti7().f[1]++;
    cov_1t58rm2ti7().s[1]++;
    return value instanceof P ?
    /* istanbul ignore next */
    (cov_1t58rm2ti7().b[1][0]++, value) :
    /* istanbul ignore next */
    (cov_1t58rm2ti7().b[1][1]++, new P(function (resolve) {
      /* istanbul ignore next */
      cov_1t58rm2ti7().f[2]++;
      cov_1t58rm2ti7().s[2]++;
      resolve(value);
    }));
  }
  /* istanbul ignore next */
  cov_1t58rm2ti7().s[3]++;
  return new (
  /* istanbul ignore next */
  (cov_1t58rm2ti7().b[2][0]++, P) ||
  /* istanbul ignore next */
  (cov_1t58rm2ti7().b[2][1]++, P = Promise))(function (resolve, reject) {
    /* istanbul ignore next */
    cov_1t58rm2ti7().f[3]++;
    function fulfilled(value) {
      /* istanbul ignore next */
      cov_1t58rm2ti7().f[4]++;
      cov_1t58rm2ti7().s[4]++;
      try {
        /* istanbul ignore next */
        cov_1t58rm2ti7().s[5]++;
        step(generator.next(value));
      } catch (e) {
        /* istanbul ignore next */
        cov_1t58rm2ti7().s[6]++;
        reject(e);
      }
    }
    function rejected(value) {
      /* istanbul ignore next */
      cov_1t58rm2ti7().f[5]++;
      cov_1t58rm2ti7().s[7]++;
      try {
        /* istanbul ignore next */
        cov_1t58rm2ti7().s[8]++;
        step(generator["throw"](value));
      } catch (e) {
        /* istanbul ignore next */
        cov_1t58rm2ti7().s[9]++;
        reject(e);
      }
    }
    function step(result) {
      /* istanbul ignore next */
      cov_1t58rm2ti7().f[6]++;
      cov_1t58rm2ti7().s[10]++;
      result.done ?
      /* istanbul ignore next */
      (cov_1t58rm2ti7().b[3][0]++, resolve(result.value)) :
      /* istanbul ignore next */
      (cov_1t58rm2ti7().b[3][1]++, adopt(result.value).then(fulfilled, rejected));
    }
    /* istanbul ignore next */
    cov_1t58rm2ti7().s[11]++;
    step((generator = generator.apply(thisArg,
    /* istanbul ignore next */
    (cov_1t58rm2ti7().b[4][0]++, _arguments) ||
    /* istanbul ignore next */
    (cov_1t58rm2ti7().b[4][1]++, []))).next());
  });
}));
/* istanbul ignore next */
cov_1t58rm2ti7().s[12]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1t58rm2ti7().s[13]++;
exports.getRetentionJobHistory = exports.anonymizeChatLogs = exports.cleanupHealthChecks = exports.cleanupWebhookLogs = exports.cleanupSystemMetrics = exports.cleanupChatLogs = exports.updateRetentionJob = exports.createRetentionJob = exports.updateRetentionPolicy = exports.getOrganizationRetentionPolicy = void 0;
const prisma_1 =
/* istanbul ignore next */
(cov_1t58rm2ti7().s[14]++, require("../lib/prisma"));
const logger_1 =
/* istanbul ignore next */
(cov_1t58rm2ti7().s[15]++, require("../lib/logger"));
/* istanbul ignore next */
cov_1t58rm2ti7().s[16]++;
const getOrganizationRetentionPolicy = organizationId => {
  /* istanbul ignore next */
  cov_1t58rm2ti7().f[7]++;
  cov_1t58rm2ti7().s[17]++;
  return __awaiter(void 0, void 0, void 0, function* () {
    /* istanbul ignore next */
    cov_1t58rm2ti7().f[8]++;
    let policy =
    /* istanbul ignore next */
    (cov_1t58rm2ti7().s[18]++, yield prisma_1.prisma.dataRetentionPolicy.findUnique({
      where: {
        organizationId
      }
    }));
    /* istanbul ignore next */
    cov_1t58rm2ti7().s[19]++;
    if (!policy) {
      /* istanbul ignore next */
      cov_1t58rm2ti7().b[5][0]++;
      cov_1t58rm2ti7().s[20]++;
      // Create default policy
      policy = yield prisma_1.prisma.dataRetentionPolicy.create({
        data: {
          organizationId,
          chatLogs: 365,
          messageFeedback: 730,
          systemMetrics: 90,
          webhookLogs: 30,
          healthChecks: 7,
          auditLogs: 2555,
          autoDelete: true,
          anonymizeData: false
        }
      });
    } else
    /* istanbul ignore next */
    {
      cov_1t58rm2ti7().b[5][1]++;
    }
    cov_1t58rm2ti7().s[21]++;
    return policy;
  });
};
/* istanbul ignore next */
cov_1t58rm2ti7().s[22]++;
exports.getOrganizationRetentionPolicy = getOrganizationRetentionPolicy;
/* istanbul ignore next */
cov_1t58rm2ti7().s[23]++;
const updateRetentionPolicy = (organizationId, updates) => {
  /* istanbul ignore next */
  cov_1t58rm2ti7().f[9]++;
  cov_1t58rm2ti7().s[24]++;
  return __awaiter(void 0, void 0, void 0, function* () {
    /* istanbul ignore next */
    cov_1t58rm2ti7().f[10]++;
    cov_1t58rm2ti7().s[25]++;
    return prisma_1.prisma.dataRetentionPolicy.upsert({
      where: {
        organizationId
      },
      update: Object.assign(Object.assign({}, updates), {
        updatedAt: new Date()
      }),
      create: Object.assign({
        organizationId
      }, updates)
    });
  });
};
/* istanbul ignore next */
cov_1t58rm2ti7().s[26]++;
exports.updateRetentionPolicy = updateRetentionPolicy;
/* istanbul ignore next */
cov_1t58rm2ti7().s[27]++;
const createRetentionJob = data => {
  /* istanbul ignore next */
  cov_1t58rm2ti7().f[11]++;
  cov_1t58rm2ti7().s[28]++;
  return __awaiter(void 0, void 0, void 0, function* () {
    /* istanbul ignore next */
    cov_1t58rm2ti7().f[12]++;
    cov_1t58rm2ti7().s[29]++;
    return prisma_1.prisma.dataRetentionJob.create({
      data: Object.assign(Object.assign({}, data), {
        status: 'pending'
      })
    });
  });
};
/* istanbul ignore next */
cov_1t58rm2ti7().s[30]++;
exports.createRetentionJob = createRetentionJob;
/* istanbul ignore next */
cov_1t58rm2ti7().s[31]++;
const updateRetentionJob = (jobId, updates) => {
  /* istanbul ignore next */
  cov_1t58rm2ti7().f[13]++;
  cov_1t58rm2ti7().s[32]++;
  return __awaiter(void 0, void 0, void 0, function* () {
    /* istanbul ignore next */
    cov_1t58rm2ti7().f[14]++;
    cov_1t58rm2ti7().s[33]++;
    return prisma_1.prisma.dataRetentionJob.update({
      where: {
        id: jobId
      },
      data: updates
    });
  });
};
/* istanbul ignore next */
cov_1t58rm2ti7().s[34]++;
exports.updateRetentionJob = updateRetentionJob;
// Chat logs cleanup
/* istanbul ignore next */
cov_1t58rm2ti7().s[35]++;
const cleanupChatLogs = (organizationId, retentionDays) => {
  /* istanbul ignore next */
  cov_1t58rm2ti7().f[15]++;
  cov_1t58rm2ti7().s[36]++;
  return __awaiter(void 0, void 0, void 0, function* () {
    /* istanbul ignore next */
    cov_1t58rm2ti7().f[16]++;
    const cutoffDate =
    /* istanbul ignore next */
    (cov_1t58rm2ti7().s[37]++, new Date());
    /* istanbul ignore next */
    cov_1t58rm2ti7().s[38]++;
    cutoffDate.setDate(cutoffDate.getDate() - retentionDays);
    const job =
    /* istanbul ignore next */
    (cov_1t58rm2ti7().s[39]++, yield (0, exports.createRetentionJob)({
      organizationId,
      jobType: 'chat_logs',
      metadata: {
        cutoffDate: cutoffDate.toISOString(),
        retentionDays
      }
    }));
    /* istanbul ignore next */
    cov_1t58rm2ti7().s[40]++;
    try {
      /* istanbul ignore next */
      cov_1t58rm2ti7().s[41]++;
      yield (0, exports.updateRetentionJob)(job.id, {
        status: 'running',
        startedAt: new Date()
      });
      // Count items to be deleted
      const itemsToDelete =
      /* istanbul ignore next */
      (cov_1t58rm2ti7().s[42]++, yield prisma_1.prisma.chatLog.count({
        where: {
          widget: {
            company: {
              organizationId
            }
          },
          createdAt: {
            lt: cutoffDate
          }
        }
      }));
      // Delete chat logs and related feedback
      const deletedLogs =
      /* istanbul ignore next */
      (cov_1t58rm2ti7().s[43]++, yield prisma_1.prisma.chatLog.deleteMany({
        where: {
          widget: {
            company: {
              organizationId
            }
          },
          createdAt: {
            lt: cutoffDate
          }
        }
      }));
      /* istanbul ignore next */
      cov_1t58rm2ti7().s[44]++;
      yield (0, exports.updateRetentionJob)(job.id, {
        status: 'completed',
        itemsProcessed: itemsToDelete,
        itemsDeleted: deletedLogs.count,
        completedAt: new Date()
      });
      /* istanbul ignore next */
      cov_1t58rm2ti7().s[45]++;
      logger_1.logger.info('Chat logs cleanup completed', {
        organizationId,
        deletedCount: deletedLogs.count,
        retentionDays
      });
      /* istanbul ignore next */
      cov_1t58rm2ti7().s[46]++;
      return deletedLogs.count;
    } catch (error) {
      /* istanbul ignore next */
      cov_1t58rm2ti7().s[47]++;
      yield (0, exports.updateRetentionJob)(job.id, {
        status: 'failed',
        error: error instanceof Error ?
        /* istanbul ignore next */
        (cov_1t58rm2ti7().b[6][0]++, error.message) :
        /* istanbul ignore next */
        (cov_1t58rm2ti7().b[6][1]++, 'Unknown error'),
        completedAt: new Date()
      });
      /* istanbul ignore next */
      cov_1t58rm2ti7().s[48]++;
      logger_1.logger.error('Chat logs cleanup failed', {
        organizationId,
        error: error instanceof Error ?
        /* istanbul ignore next */
        (cov_1t58rm2ti7().b[7][0]++, error.message) :
        /* istanbul ignore next */
        (cov_1t58rm2ti7().b[7][1]++, error)
      });
      /* istanbul ignore next */
      cov_1t58rm2ti7().s[49]++;
      throw error;
    }
  });
};
/* istanbul ignore next */
cov_1t58rm2ti7().s[50]++;
exports.cleanupChatLogs = cleanupChatLogs;
// System metrics cleanup
/* istanbul ignore next */
cov_1t58rm2ti7().s[51]++;
const cleanupSystemMetrics = retentionDays => {
  /* istanbul ignore next */
  cov_1t58rm2ti7().f[17]++;
  cov_1t58rm2ti7().s[52]++;
  return __awaiter(void 0, void 0, void 0, function* () {
    /* istanbul ignore next */
    cov_1t58rm2ti7().f[18]++;
    const cutoffDate =
    /* istanbul ignore next */
    (cov_1t58rm2ti7().s[53]++, new Date());
    /* istanbul ignore next */
    cov_1t58rm2ti7().s[54]++;
    cutoffDate.setDate(cutoffDate.getDate() - retentionDays);
    const job =
    /* istanbul ignore next */
    (cov_1t58rm2ti7().s[55]++, yield (0, exports.createRetentionJob)({
      jobType: 'system_metrics',
      metadata: {
        cutoffDate: cutoffDate.toISOString(),
        retentionDays
      }
    }));
    /* istanbul ignore next */
    cov_1t58rm2ti7().s[56]++;
    try {
      /* istanbul ignore next */
      cov_1t58rm2ti7().s[57]++;
      yield (0, exports.updateRetentionJob)(job.id, {
        status: 'running',
        startedAt: new Date()
      });
      const itemsToDelete =
      /* istanbul ignore next */
      (cov_1t58rm2ti7().s[58]++, yield prisma_1.prisma.systemMetric.count({
        where: {
          timestamp: {
            lt: cutoffDate
          }
        }
      }));
      const deletedMetrics =
      /* istanbul ignore next */
      (cov_1t58rm2ti7().s[59]++, yield prisma_1.prisma.systemMetric.deleteMany({
        where: {
          timestamp: {
            lt: cutoffDate
          }
        }
      }));
      /* istanbul ignore next */
      cov_1t58rm2ti7().s[60]++;
      yield (0, exports.updateRetentionJob)(job.id, {
        status: 'completed',
        itemsProcessed: itemsToDelete,
        itemsDeleted: deletedMetrics.count,
        completedAt: new Date()
      });
      /* istanbul ignore next */
      cov_1t58rm2ti7().s[61]++;
      logger_1.logger.info('System metrics cleanup completed', {
        deletedCount: deletedMetrics.count,
        retentionDays
      });
      /* istanbul ignore next */
      cov_1t58rm2ti7().s[62]++;
      return deletedMetrics.count;
    } catch (error) {
      /* istanbul ignore next */
      cov_1t58rm2ti7().s[63]++;
      yield (0, exports.updateRetentionJob)(job.id, {
        status: 'failed',
        error: error instanceof Error ?
        /* istanbul ignore next */
        (cov_1t58rm2ti7().b[8][0]++, error.message) :
        /* istanbul ignore next */
        (cov_1t58rm2ti7().b[8][1]++, 'Unknown error'),
        completedAt: new Date()
      });
      /* istanbul ignore next */
      cov_1t58rm2ti7().s[64]++;
      logger_1.logger.error('System metrics cleanup failed', {
        error: error instanceof Error ?
        /* istanbul ignore next */
        (cov_1t58rm2ti7().b[9][0]++, error.message) :
        /* istanbul ignore next */
        (cov_1t58rm2ti7().b[9][1]++, error)
      });
      /* istanbul ignore next */
      cov_1t58rm2ti7().s[65]++;
      throw error;
    }
  });
};
/* istanbul ignore next */
cov_1t58rm2ti7().s[66]++;
exports.cleanupSystemMetrics = cleanupSystemMetrics;
// Webhook logs cleanup
/* istanbul ignore next */
cov_1t58rm2ti7().s[67]++;
const cleanupWebhookLogs = (organizationId, retentionDays) => {
  /* istanbul ignore next */
  cov_1t58rm2ti7().f[19]++;
  cov_1t58rm2ti7().s[68]++;
  return __awaiter(void 0, void 0, void 0, function* () {
    /* istanbul ignore next */
    cov_1t58rm2ti7().f[20]++;
    const cutoffDate =
    /* istanbul ignore next */
    (cov_1t58rm2ti7().s[69]++, new Date());
    /* istanbul ignore next */
    cov_1t58rm2ti7().s[70]++;
    cutoffDate.setDate(cutoffDate.getDate() - retentionDays);
    const job =
    /* istanbul ignore next */
    (cov_1t58rm2ti7().s[71]++, yield (0, exports.createRetentionJob)({
      organizationId,
      jobType: 'webhook_logs',
      metadata: {
        cutoffDate: cutoffDate.toISOString(),
        retentionDays
      }
    }));
    /* istanbul ignore next */
    cov_1t58rm2ti7().s[72]++;
    try {
      /* istanbul ignore next */
      cov_1t58rm2ti7().s[73]++;
      yield (0, exports.updateRetentionJob)(job.id, {
        status: 'running',
        startedAt: new Date()
      });
      const itemsToDelete =
      /* istanbul ignore next */
      (cov_1t58rm2ti7().s[74]++, yield prisma_1.prisma.webhookLog.count({
        where: {
          webhook: {
            organizationId
          },
          executedAt: {
            lt: cutoffDate
          }
        }
      }));
      const deletedLogs =
      /* istanbul ignore next */
      (cov_1t58rm2ti7().s[75]++, yield prisma_1.prisma.webhookLog.deleteMany({
        where: {
          webhook: {
            organizationId
          },
          executedAt: {
            lt: cutoffDate
          }
        }
      }));
      /* istanbul ignore next */
      cov_1t58rm2ti7().s[76]++;
      yield (0, exports.updateRetentionJob)(job.id, {
        status: 'completed',
        itemsProcessed: itemsToDelete,
        itemsDeleted: deletedLogs.count,
        completedAt: new Date()
      });
      /* istanbul ignore next */
      cov_1t58rm2ti7().s[77]++;
      logger_1.logger.info('Webhook logs cleanup completed', {
        organizationId,
        deletedCount: deletedLogs.count,
        retentionDays
      });
      /* istanbul ignore next */
      cov_1t58rm2ti7().s[78]++;
      return deletedLogs.count;
    } catch (error) {
      /* istanbul ignore next */
      cov_1t58rm2ti7().s[79]++;
      yield (0, exports.updateRetentionJob)(job.id, {
        status: 'failed',
        error: error instanceof Error ?
        /* istanbul ignore next */
        (cov_1t58rm2ti7().b[10][0]++, error.message) :
        /* istanbul ignore next */
        (cov_1t58rm2ti7().b[10][1]++, 'Unknown error'),
        completedAt: new Date()
      });
      /* istanbul ignore next */
      cov_1t58rm2ti7().s[80]++;
      logger_1.logger.error('Webhook logs cleanup failed', {
        organizationId,
        error: error instanceof Error ?
        /* istanbul ignore next */
        (cov_1t58rm2ti7().b[11][0]++, error.message) :
        /* istanbul ignore next */
        (cov_1t58rm2ti7().b[11][1]++, error)
      });
      /* istanbul ignore next */
      cov_1t58rm2ti7().s[81]++;
      throw error;
    }
  });
};
/* istanbul ignore next */
cov_1t58rm2ti7().s[82]++;
exports.cleanupWebhookLogs = cleanupWebhookLogs;
// Health checks cleanup
/* istanbul ignore next */
cov_1t58rm2ti7().s[83]++;
const cleanupHealthChecks = retentionDays => {
  /* istanbul ignore next */
  cov_1t58rm2ti7().f[21]++;
  cov_1t58rm2ti7().s[84]++;
  return __awaiter(void 0, void 0, void 0, function* () {
    /* istanbul ignore next */
    cov_1t58rm2ti7().f[22]++;
    const cutoffDate =
    /* istanbul ignore next */
    (cov_1t58rm2ti7().s[85]++, new Date());
    /* istanbul ignore next */
    cov_1t58rm2ti7().s[86]++;
    cutoffDate.setDate(cutoffDate.getDate() - retentionDays);
    const job =
    /* istanbul ignore next */
    (cov_1t58rm2ti7().s[87]++, yield (0, exports.createRetentionJob)({
      jobType: 'health_checks',
      metadata: {
        cutoffDate: cutoffDate.toISOString(),
        retentionDays
      }
    }));
    /* istanbul ignore next */
    cov_1t58rm2ti7().s[88]++;
    try {
      /* istanbul ignore next */
      cov_1t58rm2ti7().s[89]++;
      yield (0, exports.updateRetentionJob)(job.id, {
        status: 'running',
        startedAt: new Date()
      });
      const itemsToDelete =
      /* istanbul ignore next */
      (cov_1t58rm2ti7().s[90]++, yield prisma_1.prisma.healthCheck.count({
        where: {
          checkedAt: {
            lt: cutoffDate
          }
        }
      }));
      const deletedChecks =
      /* istanbul ignore next */
      (cov_1t58rm2ti7().s[91]++, yield prisma_1.prisma.healthCheck.deleteMany({
        where: {
          checkedAt: {
            lt: cutoffDate
          }
        }
      }));
      /* istanbul ignore next */
      cov_1t58rm2ti7().s[92]++;
      yield (0, exports.updateRetentionJob)(job.id, {
        status: 'completed',
        itemsProcessed: itemsToDelete,
        itemsDeleted: deletedChecks.count,
        completedAt: new Date()
      });
      /* istanbul ignore next */
      cov_1t58rm2ti7().s[93]++;
      logger_1.logger.info('Health checks cleanup completed', {
        deletedCount: deletedChecks.count,
        retentionDays
      });
      /* istanbul ignore next */
      cov_1t58rm2ti7().s[94]++;
      return deletedChecks.count;
    } catch (error) {
      /* istanbul ignore next */
      cov_1t58rm2ti7().s[95]++;
      yield (0, exports.updateRetentionJob)(job.id, {
        status: 'failed',
        error: error instanceof Error ?
        /* istanbul ignore next */
        (cov_1t58rm2ti7().b[12][0]++, error.message) :
        /* istanbul ignore next */
        (cov_1t58rm2ti7().b[12][1]++, 'Unknown error'),
        completedAt: new Date()
      });
      /* istanbul ignore next */
      cov_1t58rm2ti7().s[96]++;
      logger_1.logger.error('Health checks cleanup failed', {
        error: error instanceof Error ?
        /* istanbul ignore next */
        (cov_1t58rm2ti7().b[13][0]++, error.message) :
        /* istanbul ignore next */
        (cov_1t58rm2ti7().b[13][1]++, error)
      });
      /* istanbul ignore next */
      cov_1t58rm2ti7().s[97]++;
      throw error;
    }
  });
};
/* istanbul ignore next */
cov_1t58rm2ti7().s[98]++;
exports.cleanupHealthChecks = cleanupHealthChecks;
// Data anonymization (GDPR compliance)
/* istanbul ignore next */
cov_1t58rm2ti7().s[99]++;
const anonymizeChatLogs = (organizationId, retentionDays) => {
  /* istanbul ignore next */
  cov_1t58rm2ti7().f[23]++;
  cov_1t58rm2ti7().s[100]++;
  return __awaiter(void 0, void 0, void 0, function* () {
    /* istanbul ignore next */
    cov_1t58rm2ti7().f[24]++;
    const cutoffDate =
    /* istanbul ignore next */
    (cov_1t58rm2ti7().s[101]++, new Date());
    /* istanbul ignore next */
    cov_1t58rm2ti7().s[102]++;
    cutoffDate.setDate(cutoffDate.getDate() - retentionDays);
    const job =
    /* istanbul ignore next */
    (cov_1t58rm2ti7().s[103]++, yield (0, exports.createRetentionJob)({
      organizationId,
      jobType: 'chat_logs_anonymization',
      metadata: {
        cutoffDate: cutoffDate.toISOString(),
        retentionDays
      }
    }));
    /* istanbul ignore next */
    cov_1t58rm2ti7().s[104]++;
    try {
      /* istanbul ignore next */
      cov_1t58rm2ti7().s[105]++;
      yield (0, exports.updateRetentionJob)(job.id, {
        status: 'running',
        startedAt: new Date()
      });
      // Find chat logs to anonymize
      const logsToAnonymize =
      /* istanbul ignore next */
      (cov_1t58rm2ti7().s[106]++, yield prisma_1.prisma.chatLog.findMany({
        where: {
          widget: {
            company: {
              organizationId
            }
          },
          createdAt: {
            lt: cutoffDate
          },
          userId: {
            not: null
          }
        },
        select: {
          id: true
        }
      }));
      // Anonymize by removing user references and PII
      const anonymizedLogs =
      /* istanbul ignore next */
      (cov_1t58rm2ti7().s[107]++, yield prisma_1.prisma.chatLog.updateMany({
        where: {
          id: {
            in: logsToAnonymize.map(log => {
              /* istanbul ignore next */
              cov_1t58rm2ti7().f[25]++;
              cov_1t58rm2ti7().s[108]++;
              return log.id;
            })
          }
        },
        data: {
          userId: null
          // Could add more anonymization logic here
        }
      }));
      /* istanbul ignore next */
      cov_1t58rm2ti7().s[109]++;
      yield (0, exports.updateRetentionJob)(job.id, {
        status: 'completed',
        itemsProcessed: logsToAnonymize.length,
        itemsAnonymized: anonymizedLogs.count,
        completedAt: new Date()
      });
      /* istanbul ignore next */
      cov_1t58rm2ti7().s[110]++;
      logger_1.logger.info('Chat logs anonymization completed', {
        organizationId,
        anonymizedCount: anonymizedLogs.count,
        retentionDays
      });
      /* istanbul ignore next */
      cov_1t58rm2ti7().s[111]++;
      return anonymizedLogs.count;
    } catch (error) {
      /* istanbul ignore next */
      cov_1t58rm2ti7().s[112]++;
      yield (0, exports.updateRetentionJob)(job.id, {
        status: 'failed',
        error: error instanceof Error ?
        /* istanbul ignore next */
        (cov_1t58rm2ti7().b[14][0]++, error.message) :
        /* istanbul ignore next */
        (cov_1t58rm2ti7().b[14][1]++, 'Unknown error'),
        completedAt: new Date()
      });
      /* istanbul ignore next */
      cov_1t58rm2ti7().s[113]++;
      logger_1.logger.error('Chat logs anonymization failed', {
        organizationId,
        error: error instanceof Error ?
        /* istanbul ignore next */
        (cov_1t58rm2ti7().b[15][0]++, error.message) :
        /* istanbul ignore next */
        (cov_1t58rm2ti7().b[15][1]++, error)
      });
      /* istanbul ignore next */
      cov_1t58rm2ti7().s[114]++;
      throw error;
    }
  });
};
/* istanbul ignore next */
cov_1t58rm2ti7().s[115]++;
exports.anonymizeChatLogs = anonymizeChatLogs;
// Get retention job history
/* istanbul ignore next */
cov_1t58rm2ti7().s[116]++;
const getRetentionJobHistory = (organizationId, limit =
/* istanbul ignore next */
(cov_1t58rm2ti7().b[16][0]++, 50)) => {
  /* istanbul ignore next */
  cov_1t58rm2ti7().f[26]++;
  cov_1t58rm2ti7().s[117]++;
  return __awaiter(void 0, void 0, void 0, function* () {
    /* istanbul ignore next */
    cov_1t58rm2ti7().f[27]++;
    cov_1t58rm2ti7().s[118]++;
    return prisma_1.prisma.dataRetentionJob.findMany({
      where: organizationId ?
      /* istanbul ignore next */
      (cov_1t58rm2ti7().b[17][0]++, {
        organizationId
      }) :
      /* istanbul ignore next */
      (cov_1t58rm2ti7().b[17][1]++, {}),
      orderBy: {
        createdAt: 'desc'
      },
      take: limit,
      include: organizationId ?
      /* istanbul ignore next */
      (cov_1t58rm2ti7().b[18][0]++, {}) :
      /* istanbul ignore next */
      (cov_1t58rm2ti7().b[18][1]++, {
        organization: {
          select: {
            name: true
          }
        }
      })
    });
  });
};
/* istanbul ignore next */
cov_1t58rm2ti7().s[119]++;
exports.getRetentionJobHistory = getRetentionJobHistory;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,