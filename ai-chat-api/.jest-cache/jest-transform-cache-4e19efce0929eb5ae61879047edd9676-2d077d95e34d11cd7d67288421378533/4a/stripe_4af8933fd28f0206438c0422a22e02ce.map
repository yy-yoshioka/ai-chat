{"version":3,"names":["cov_1pd4yzsgqk","actualCoverage","stripe_1","s","__importDefault","require","process","env","STRIPE_SECRET_KEY","b","Error","stripe","default","apiVersion","exports","PRICING_PLANS","free","name","price","monthlyMessages","monthlyTokens","features","pro","priceId","STRIPE_PRO_PRICE_ID","enterprise","STRIPE_ENTERPRISE_PRICE_ID","TOKEN_PRICING","pricePerThousandTokens","minimumPurchase","createCheckoutSession","companyId","planType","successUrl","cancelUrl","f","plan","session","checkout","sessions","create","mode","payment_method_types","line_items","quantity","metadata","success_url","cancel_url","allow_promotion_codes","createTokenCheckoutSession","tokenAmount","priceInCents","Math","round","price_data","currency","product_data","toLocaleString","description","unit_amount","toString","type","getCustomerSubscription","customerId","subscriptions","list","customer","status","limit","data","cancelSubscription","subscriptionId","cancel","updateSubscription","newPriceId","subscription","retrieve","update","items","id"],"sources":["/Users/yusukeyoshioka/projects/youtube/ai-chat/ai-chat-api/src/lib/stripe.ts"],"sourcesContent":["import Stripe from 'stripe';\n\nif (!process.env.STRIPE_SECRET_KEY) {\n  throw new Error('STRIPE_SECRET_KEY is required');\n}\n\nconst stripe = new Stripe(process.env.STRIPE_SECRET_KEY!, {\n  apiVersion: '2025-02-24.acacia',\n});\n\nexport { stripe };\n\n// Pricing configuration\nexport const PRICING_PLANS = {\n  free: {\n    name: 'Free',\n    price: 0,\n    monthlyMessages: 100,\n    monthlyTokens: 10000,\n    features: ['Basic chat widget', 'Email support'],\n  },\n  pro: {\n    name: 'Pro',\n    price: 29,\n    priceId: process.env.STRIPE_PRO_PRICE_ID,\n    monthlyMessages: 1000,\n    monthlyTokens: 100000,\n    features: [\n      'Advanced chat widget',\n      'Custom branding',\n      'Analytics',\n      'Priority support',\n    ],\n  },\n  enterprise: {\n    name: 'Enterprise',\n    price: 99,\n    priceId: process.env.STRIPE_ENTERPRISE_PRICE_ID,\n    monthlyMessages: 10000,\n    monthlyTokens: 1000000,\n    features: [\n      'Unlimited messages',\n      'White-label solution',\n      'API access',\n      'Dedicated support',\n    ],\n  },\n};\n\n// Additional token pricing\nexport const TOKEN_PRICING = {\n  pricePerThousandTokens: 0.01, // $0.01 per 1000 tokens\n  minimumPurchase: 10000, // Minimum 10k tokens\n};\n\n/**\n * Create a checkout session for subscription\n */\nexport async function createCheckoutSession(\n  companyId: string,\n  planType: 'pro' | 'enterprise',\n  successUrl: string,\n  cancelUrl: string\n) {\n  const plan = PRICING_PLANS[planType];\n\n  if (!plan.priceId) {\n    throw new Error(`Price ID not configured for ${planType} plan`);\n  }\n\n  const session = await stripe.checkout.sessions.create({\n    mode: 'subscription',\n    payment_method_types: ['card'],\n    line_items: [\n      {\n        price: plan.priceId,\n        quantity: 1,\n      },\n    ],\n    metadata: {\n      companyId,\n      planType,\n    },\n    success_url: successUrl,\n    cancel_url: cancelUrl,\n    allow_promotion_codes: true,\n  });\n\n  return session;\n}\n\n/**\n * Create a checkout session for additional tokens\n */\nexport async function createTokenCheckoutSession(\n  companyId: string,\n  tokenAmount: number,\n  successUrl: string,\n  cancelUrl: string\n) {\n  if (tokenAmount < TOKEN_PRICING.minimumPurchase) {\n    throw new Error(\n      `Minimum token purchase is ${TOKEN_PRICING.minimumPurchase}`\n    );\n  }\n\n  const priceInCents = Math.round(\n    (tokenAmount / 1000) * TOKEN_PRICING.pricePerThousandTokens * 100\n  );\n\n  const session = await stripe.checkout.sessions.create({\n    mode: 'payment',\n    payment_method_types: ['card'],\n    line_items: [\n      {\n        price_data: {\n          currency: 'usd',\n          product_data: {\n            name: `${tokenAmount.toLocaleString()} AI Tokens`,\n            description: 'Additional tokens for AI chat responses',\n          },\n          unit_amount: priceInCents,\n        },\n        quantity: 1,\n      },\n    ],\n    metadata: {\n      companyId,\n      tokenAmount: tokenAmount.toString(),\n      type: 'token_purchase',\n    },\n    success_url: successUrl,\n    cancel_url: cancelUrl,\n  });\n\n  return session;\n}\n\n/**\n * Get customer's current subscription\n */\nexport async function getCustomerSubscription(customerId: string) {\n  const subscriptions = await stripe.subscriptions.list({\n    customer: customerId,\n    status: 'active',\n    limit: 1,\n  });\n\n  return subscriptions.data[0] || null;\n}\n\n/**\n * Cancel subscription\n */\nexport async function cancelSubscription(subscriptionId: string) {\n  return await stripe.subscriptions.cancel(subscriptionId);\n}\n\n/**\n * Update subscription\n */\nexport async function updateSubscription(\n  subscriptionId: string,\n  newPriceId: string\n) {\n  const subscription = await stripe.subscriptions.retrieve(subscriptionId);\n\n  return await stripe.subscriptions.update(subscriptionId, {\n    items: [\n      {\n        id: subscription.items.data[0].id,\n        price: newPriceId,\n      },\n    ],\n  });\n}\n"],"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","ignoreList":[]}