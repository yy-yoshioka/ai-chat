979f44a142904d8f509a4f24bc4edd22
"use strict";

/* istanbul ignore next */
function cov_27e1c0g4hn() {
  var path = "/Users/yusukeyoshioka/projects/youtube/ai-chat/ai-chat-api/src/jobs/trainingQueue.ts";
  var hash = "35a9148a76e882bf1bd45ca20d8f9c62cef8335b";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/yusukeyoshioka/projects/youtube/ai-chat/ai-chat-api/src/jobs/trainingQueue.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 16
        },
        end: {
          line: 10,
          column: 1
        }
      },
      "1": {
        start: {
          line: 3,
          column: 28
        },
        end: {
          line: 3,
          column: 110
        }
      },
      "2": {
        start: {
          line: 3,
          column: 91
        },
        end: {
          line: 3,
          column: 106
        }
      },
      "3": {
        start: {
          line: 4,
          column: 4
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "4": {
        start: {
          line: 5,
          column: 36
        },
        end: {
          line: 5,
          column: 97
        }
      },
      "5": {
        start: {
          line: 5,
          column: 42
        },
        end: {
          line: 5,
          column: 70
        }
      },
      "6": {
        start: {
          line: 5,
          column: 85
        },
        end: {
          line: 5,
          column: 95
        }
      },
      "7": {
        start: {
          line: 6,
          column: 35
        },
        end: {
          line: 6,
          column: 100
        }
      },
      "8": {
        start: {
          line: 6,
          column: 41
        },
        end: {
          line: 6,
          column: 73
        }
      },
      "9": {
        start: {
          line: 6,
          column: 88
        },
        end: {
          line: 6,
          column: 98
        }
      },
      "10": {
        start: {
          line: 7,
          column: 32
        },
        end: {
          line: 7,
          column: 116
        }
      },
      "11": {
        start: {
          line: 8,
          column: 8
        },
        end: {
          line: 8,
          column: 78
        }
      },
      "12": {
        start: {
          line: 11,
          column: 22
        },
        end: {
          line: 13,
          column: 1
        }
      },
      "13": {
        start: {
          line: 12,
          column: 4
        },
        end: {
          line: 12,
          column: 62
        }
      },
      "14": {
        start: {
          line: 14,
          column: 0
        },
        end: {
          line: 14,
          column: 62
        }
      },
      "15": {
        start: {
          line: 15,
          column: 0
        },
        end: {
          line: 15,
          column: 31
        }
      },
      "16": {
        start: {
          line: 16,
          column: 15
        },
        end: {
          line: 16,
          column: 47
        }
      },
      "17": {
        start: {
          line: 17,
          column: 26
        },
        end: {
          line: 17,
          column: 64
        }
      },
      "18": {
        start: {
          line: 18,
          column: 17
        },
        end: {
          line: 18,
          column: 41
        }
      },
      "19": {
        start: {
          line: 19,
          column: 0
        },
        end: {
          line: 24,
          column: 3
        }
      },
      "20": {
        start: {
          line: 26,
          column: 0
        },
        end: {
          line: 50,
          column: 4
        }
      },
      "21": {
        start: {
          line: 26,
          column: 59
        },
        end: {
          line: 50,
          column: 2
        }
      },
      "22": {
        start: {
          line: 27,
          column: 92
        },
        end: {
          line: 27,
          column: 100
        }
      },
      "23": {
        start: {
          line: 28,
          column: 4
        },
        end: {
          line: 31,
          column: 7
        }
      },
      "24": {
        start: {
          line: 32,
          column: 4
        },
        end: {
          line: 49,
          column: 5
        }
      },
      "25": {
        start: {
          line: 33,
          column: 8
        },
        end: {
          line: 40,
          column: 11
        }
      },
      "26": {
        start: {
          line: 41,
          column: 8
        },
        end: {
          line: 41,
          column: 79
        }
      },
      "27": {
        start: {
          line: 44,
          column: 8
        },
        end: {
          line: 47,
          column: 11
        }
      },
      "28": {
        start: {
          line: 48,
          column: 8
        },
        end: {
          line: 48,
          column: 20
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 44
          },
          end: {
            line: 2,
            column: 45
          }
        },
        loc: {
          start: {
            line: 2,
            column: 89
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "adopt",
        decl: {
          start: {
            line: 3,
            column: 13
          },
          end: {
            line: 3,
            column: 18
          }
        },
        loc: {
          start: {
            line: 3,
            column: 26
          },
          end: {
            line: 3,
            column: 112
          }
        },
        line: 3
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 3,
            column: 70
          },
          end: {
            line: 3,
            column: 71
          }
        },
        loc: {
          start: {
            line: 3,
            column: 89
          },
          end: {
            line: 3,
            column: 108
          }
        },
        line: 3
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 4,
            column: 36
          },
          end: {
            line: 4,
            column: 37
          }
        },
        loc: {
          start: {
            line: 4,
            column: 63
          },
          end: {
            line: 9,
            column: 5
          }
        },
        line: 4
      },
      "4": {
        name: "fulfilled",
        decl: {
          start: {
            line: 5,
            column: 17
          },
          end: {
            line: 5,
            column: 26
          }
        },
        loc: {
          start: {
            line: 5,
            column: 34
          },
          end: {
            line: 5,
            column: 99
          }
        },
        line: 5
      },
      "5": {
        name: "rejected",
        decl: {
          start: {
            line: 6,
            column: 17
          },
          end: {
            line: 6,
            column: 25
          }
        },
        loc: {
          start: {
            line: 6,
            column: 33
          },
          end: {
            line: 6,
            column: 102
          }
        },
        line: 6
      },
      "6": {
        name: "step",
        decl: {
          start: {
            line: 7,
            column: 17
          },
          end: {
            line: 7,
            column: 21
          }
        },
        loc: {
          start: {
            line: 7,
            column: 30
          },
          end: {
            line: 7,
            column: 118
          }
        },
        line: 7
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 11,
            column: 56
          },
          end: {
            line: 11,
            column: 57
          }
        },
        loc: {
          start: {
            line: 11,
            column: 71
          },
          end: {
            line: 13,
            column: 1
          }
        },
        line: 11
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 26,
            column: 50
          },
          end: {
            line: 26,
            column: 51
          }
        },
        loc: {
          start: {
            line: 26,
            column: 59
          },
          end: {
            line: 50,
            column: 2
          }
        },
        line: 26
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 26,
            column: 93
          },
          end: {
            line: 26,
            column: 94
          }
        },
        loc: {
          start: {
            line: 26,
            column: 106
          },
          end: {
            line: 50,
            column: 1
          }
        },
        line: 26
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 16
          },
          end: {
            line: 10,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 17
          },
          end: {
            line: 2,
            column: 21
          }
        }, {
          start: {
            line: 2,
            column: 25
          },
          end: {
            line: 2,
            column: 39
          }
        }, {
          start: {
            line: 2,
            column: 44
          },
          end: {
            line: 10,
            column: 1
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 3,
            column: 35
          },
          end: {
            line: 3,
            column: 109
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 3,
            column: 56
          },
          end: {
            line: 3,
            column: 61
          }
        }, {
          start: {
            line: 3,
            column: 64
          },
          end: {
            line: 3,
            column: 109
          }
        }],
        line: 3
      },
      "2": {
        loc: {
          start: {
            line: 4,
            column: 16
          },
          end: {
            line: 4,
            column: 34
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 4,
            column: 16
          },
          end: {
            line: 4,
            column: 17
          }
        }, {
          start: {
            line: 4,
            column: 22
          },
          end: {
            line: 4,
            column: 33
          }
        }],
        line: 4
      },
      "3": {
        loc: {
          start: {
            line: 7,
            column: 32
          },
          end: {
            line: 7,
            column: 115
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 7,
            column: 46
          },
          end: {
            line: 7,
            column: 67
          }
        }, {
          start: {
            line: 7,
            column: 70
          },
          end: {
            line: 7,
            column: 115
          }
        }],
        line: 7
      },
      "4": {
        loc: {
          start: {
            line: 8,
            column: 51
          },
          end: {
            line: 8,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 8,
            column: 51
          },
          end: {
            line: 8,
            column: 61
          }
        }, {
          start: {
            line: 8,
            column: 65
          },
          end: {
            line: 8,
            column: 67
          }
        }],
        line: 8
      },
      "5": {
        loc: {
          start: {
            line: 11,
            column: 22
          },
          end: {
            line: 13,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 11,
            column: 23
          },
          end: {
            line: 11,
            column: 27
          }
        }, {
          start: {
            line: 11,
            column: 31
          },
          end: {
            line: 11,
            column: 51
          }
        }, {
          start: {
            line: 11,
            column: 56
          },
          end: {
            line: 13,
            column: 1
          }
        }],
        line: 11
      },
      "6": {
        loc: {
          start: {
            line: 12,
            column: 11
          },
          end: {
            line: 12,
            column: 61
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 12,
            column: 37
          },
          end: {
            line: 12,
            column: 40
          }
        }, {
          start: {
            line: 12,
            column: 43
          },
          end: {
            line: 12,
            column: 61
          }
        }],
        line: 12
      },
      "7": {
        loc: {
          start: {
            line: 12,
            column: 12
          },
          end: {
            line: 12,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 12,
            column: 12
          },
          end: {
            line: 12,
            column: 15
          }
        }, {
          start: {
            line: 12,
            column: 19
          },
          end: {
            line: 12,
            column: 33
          }
        }],
        line: 12
      },
      "8": {
        loc: {
          start: {
            line: 21,
            column: 14
          },
          end: {
            line: 21,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 21,
            column: 14
          },
          end: {
            line: 21,
            column: 36
          }
        }, {
          start: {
            line: 21,
            column: 40
          },
          end: {
            line: 21,
            column: 51
          }
        }],
        line: 21
      },
      "9": {
        loc: {
          start: {
            line: 22,
            column: 23
          },
          end: {
            line: 22,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 22,
            column: 23
          },
          end: {
            line: 22,
            column: 45
          }
        }, {
          start: {
            line: 22,
            column: 49
          },
          end: {
            line: 22,
            column: 55
          }
        }],
        line: 22
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/yusukeyoshioka/projects/youtube/ai-chat/ai-chat-api/src/jobs/trainingQueue.ts",
      mappings: ";;;;;;;;;;;;;;;AAAA,gDAAwB;AACxB,iEAA8D;AAC9D,0CAAuC;AAE1B,QAAA,aAAa,GAAG,IAAI,cAAI,CAAC,UAAU,EAAE;IAChD,KAAK,EAAE;QACL,IAAI,EAAE,OAAO,CAAC,GAAG,CAAC,UAAU,IAAI,WAAW;QAC3C,IAAI,EAAE,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,UAAU,IAAI,MAAM,CAAC;KACjD;CACF,CAAC,CAAC;AAEH,aAAa;AACb,qBAAa,CAAC,OAAO,CAAC,kBAAkB,EAAE,CAAO,GAAG,EAAE,EAAE;IACtD,MAAM,EACJ,UAAU,EACV,SAAS,EACT,QAAQ,EACR,aAAa,EACb,gBAAgB,EAChB,QAAQ,GACT,GAAG,GAAG,CAAC,IAAI,CAAC;IAEb,eAAM,CAAC,IAAI,CAAC,iCAAiC,EAAE;QAC7C,KAAK,EAAE,GAAG,CAAC,EAAE;QACb,UAAU;KACX,CAAC,CAAC;IAEH,IAAI,CAAC;QACH,MAAM,IAAA,iCAAe,EAAC;YACpB,UAAU;YACV,SAAS;YACT,QAAQ;YACR,aAAa;YACb,gBAAgB;YAChB,QAAQ;SACT,CAAC,CAAC;QAEH,eAAM,CAAC,IAAI,CAAC,gCAAgC,EAAE,EAAE,UAAU,EAAE,CAAC,CAAC;IAChE,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACf,eAAM,CAAC,KAAK,CAAC,wCAAwC,EAAE;YACrD,KAAK;YACL,UAAU;SACX,CAAC,CAAC;QACH,MAAM,KAAK,CAAC;IACd,CAAC;AACH,CAAC,CAAA,CAAC,CAAC",
      names: [],
      sources: ["/Users/yusukeyoshioka/projects/youtube/ai-chat/ai-chat-api/src/jobs/trainingQueue.ts"],
      sourcesContent: ["import Bull from 'bull';\nimport { improveResponse } from '../services/trainingService';\nimport { logger } from '../lib/logger';\n\nexport const trainingQueue = new Bull('training', {\n  redis: {\n    host: process.env.REDIS_HOST || 'localhost',\n    port: parseInt(process.env.REDIS_PORT || '6379'),\n  },\n});\n\n// \u6539\u5584\u63D0\u6848\u751F\u6210\u30EF\u30FC\u30AB\u30FC\ntrainingQueue.process('improve-response', async (job) => {\n  const {\n    feedbackId,\n    messageId,\n    feedback,\n    originalQuery,\n    originalResponse,\n    widgetId,\n  } = job.data;\n\n  logger.info('Processing feedback improvement', {\n    jobId: job.id,\n    feedbackId,\n  });\n\n  try {\n    await improveResponse({\n      feedbackId,\n      messageId,\n      feedback,\n      originalQuery,\n      originalResponse,\n      widgetId,\n    });\n\n    logger.info('Feedback improvement completed', { feedbackId });\n  } catch (error) {\n    logger.error('Failed to process feedback improvement', {\n      error,\n      feedbackId,\n    });\n    throw error;\n  }\n});\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "35a9148a76e882bf1bd45ca20d8f9c62cef8335b"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_27e1c0g4hn = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_27e1c0g4hn();
var __awaiter =
/* istanbul ignore next */
(cov_27e1c0g4hn().s[0]++,
/* istanbul ignore next */
(cov_27e1c0g4hn().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_27e1c0g4hn().b[0][1]++, this.__awaiter) ||
/* istanbul ignore next */
(cov_27e1c0g4hn().b[0][2]++, function (thisArg, _arguments, P, generator) {
  /* istanbul ignore next */
  cov_27e1c0g4hn().f[0]++;
  function adopt(value) {
    /* istanbul ignore next */
    cov_27e1c0g4hn().f[1]++;
    cov_27e1c0g4hn().s[1]++;
    return value instanceof P ?
    /* istanbul ignore next */
    (cov_27e1c0g4hn().b[1][0]++, value) :
    /* istanbul ignore next */
    (cov_27e1c0g4hn().b[1][1]++, new P(function (resolve) {
      /* istanbul ignore next */
      cov_27e1c0g4hn().f[2]++;
      cov_27e1c0g4hn().s[2]++;
      resolve(value);
    }));
  }
  /* istanbul ignore next */
  cov_27e1c0g4hn().s[3]++;
  return new (
  /* istanbul ignore next */
  (cov_27e1c0g4hn().b[2][0]++, P) ||
  /* istanbul ignore next */
  (cov_27e1c0g4hn().b[2][1]++, P = Promise))(function (resolve, reject) {
    /* istanbul ignore next */
    cov_27e1c0g4hn().f[3]++;
    function fulfilled(value) {
      /* istanbul ignore next */
      cov_27e1c0g4hn().f[4]++;
      cov_27e1c0g4hn().s[4]++;
      try {
        /* istanbul ignore next */
        cov_27e1c0g4hn().s[5]++;
        step(generator.next(value));
      } catch (e) {
        /* istanbul ignore next */
        cov_27e1c0g4hn().s[6]++;
        reject(e);
      }
    }
    function rejected(value) {
      /* istanbul ignore next */
      cov_27e1c0g4hn().f[5]++;
      cov_27e1c0g4hn().s[7]++;
      try {
        /* istanbul ignore next */
        cov_27e1c0g4hn().s[8]++;
        step(generator["throw"](value));
      } catch (e) {
        /* istanbul ignore next */
        cov_27e1c0g4hn().s[9]++;
        reject(e);
      }
    }
    function step(result) {
      /* istanbul ignore next */
      cov_27e1c0g4hn().f[6]++;
      cov_27e1c0g4hn().s[10]++;
      result.done ?
      /* istanbul ignore next */
      (cov_27e1c0g4hn().b[3][0]++, resolve(result.value)) :
      /* istanbul ignore next */
      (cov_27e1c0g4hn().b[3][1]++, adopt(result.value).then(fulfilled, rejected));
    }
    /* istanbul ignore next */
    cov_27e1c0g4hn().s[11]++;
    step((generator = generator.apply(thisArg,
    /* istanbul ignore next */
    (cov_27e1c0g4hn().b[4][0]++, _arguments) ||
    /* istanbul ignore next */
    (cov_27e1c0g4hn().b[4][1]++, []))).next());
  });
}));
var __importDefault =
/* istanbul ignore next */
(cov_27e1c0g4hn().s[12]++,
/* istanbul ignore next */
(cov_27e1c0g4hn().b[5][0]++, this) &&
/* istanbul ignore next */
(cov_27e1c0g4hn().b[5][1]++, this.__importDefault) ||
/* istanbul ignore next */
(cov_27e1c0g4hn().b[5][2]++, function (mod) {
  /* istanbul ignore next */
  cov_27e1c0g4hn().f[7]++;
  cov_27e1c0g4hn().s[13]++;
  return /* istanbul ignore next */(cov_27e1c0g4hn().b[7][0]++, mod) &&
  /* istanbul ignore next */
  (cov_27e1c0g4hn().b[7][1]++, mod.__esModule) ?
  /* istanbul ignore next */
  (cov_27e1c0g4hn().b[6][0]++, mod) :
  /* istanbul ignore next */
  (cov_27e1c0g4hn().b[6][1]++, {
    "default": mod
  });
}));
/* istanbul ignore next */
cov_27e1c0g4hn().s[14]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_27e1c0g4hn().s[15]++;
exports.trainingQueue = void 0;
const bull_1 =
/* istanbul ignore next */
(cov_27e1c0g4hn().s[16]++, __importDefault(require("bull")));
const trainingService_1 =
/* istanbul ignore next */
(cov_27e1c0g4hn().s[17]++, require("../services/trainingService"));
const logger_1 =
/* istanbul ignore next */
(cov_27e1c0g4hn().s[18]++, require("../lib/logger"));
/* istanbul ignore next */
cov_27e1c0g4hn().s[19]++;
exports.trainingQueue = new bull_1.default('training', {
  redis: {
    host:
    /* istanbul ignore next */
    (cov_27e1c0g4hn().b[8][0]++, process.env.REDIS_HOST) ||
    /* istanbul ignore next */
    (cov_27e1c0g4hn().b[8][1]++, 'localhost'),
    port: parseInt(
    /* istanbul ignore next */
    (cov_27e1c0g4hn().b[9][0]++, process.env.REDIS_PORT) ||
    /* istanbul ignore next */
    (cov_27e1c0g4hn().b[9][1]++, '6379'))
  }
});
// 改善提案生成ワーカー
/* istanbul ignore next */
cov_27e1c0g4hn().s[20]++;
exports.trainingQueue.process('improve-response', job => {
  /* istanbul ignore next */
  cov_27e1c0g4hn().f[8]++;
  cov_27e1c0g4hn().s[21]++;
  return __awaiter(void 0, void 0, void 0, function* () {
    /* istanbul ignore next */
    cov_27e1c0g4hn().f[9]++;
    const {
      feedbackId,
      messageId,
      feedback,
      originalQuery,
      originalResponse,
      widgetId
    } =
    /* istanbul ignore next */
    (cov_27e1c0g4hn().s[22]++, job.data);
    /* istanbul ignore next */
    cov_27e1c0g4hn().s[23]++;
    logger_1.logger.info('Processing feedback improvement', {
      jobId: job.id,
      feedbackId
    });
    /* istanbul ignore next */
    cov_27e1c0g4hn().s[24]++;
    try {
      /* istanbul ignore next */
      cov_27e1c0g4hn().s[25]++;
      yield (0, trainingService_1.improveResponse)({
        feedbackId,
        messageId,
        feedback,
        originalQuery,
        originalResponse,
        widgetId
      });
      /* istanbul ignore next */
      cov_27e1c0g4hn().s[26]++;
      logger_1.logger.info('Feedback improvement completed', {
        feedbackId
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_27e1c0g4hn().s[27]++;
      logger_1.logger.error('Failed to process feedback improvement', {
        error,
        feedbackId
      });
      /* istanbul ignore next */
      cov_27e1c0g4hn().s[28]++;
      throw error;
    }
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMjdlMWMwZzRobiIsImFjdHVhbENvdmVyYWdlIiwiYnVsbF8xIiwicyIsIl9faW1wb3J0RGVmYXVsdCIsInJlcXVpcmUiLCJ0cmFpbmluZ1NlcnZpY2VfMSIsImxvZ2dlcl8xIiwiZXhwb3J0cyIsInRyYWluaW5nUXVldWUiLCJkZWZhdWx0IiwicmVkaXMiLCJob3N0IiwiYiIsInByb2Nlc3MiLCJlbnYiLCJSRURJU19IT1NUIiwicG9ydCIsInBhcnNlSW50IiwiUkVESVNfUE9SVCIsImpvYiIsImYiLCJfX2F3YWl0ZXIiLCJmZWVkYmFja0lkIiwibWVzc2FnZUlkIiwiZmVlZGJhY2siLCJvcmlnaW5hbFF1ZXJ5Iiwib3JpZ2luYWxSZXNwb25zZSIsIndpZGdldElkIiwiZGF0YSIsImxvZ2dlciIsImluZm8iLCJqb2JJZCIsImlkIiwiaW1wcm92ZVJlc3BvbnNlIiwiZXJyb3IiXSwic291cmNlcyI6WyIvVXNlcnMveXVzdWtleW9zaGlva2EvcHJvamVjdHMveW91dHViZS9haS1jaGF0L2FpLWNoYXQtYXBpL3NyYy9qb2JzL3RyYWluaW5nUXVldWUudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IEJ1bGwgZnJvbSAnYnVsbCc7XG5pbXBvcnQgeyBpbXByb3ZlUmVzcG9uc2UgfSBmcm9tICcuLi9zZXJ2aWNlcy90cmFpbmluZ1NlcnZpY2UnO1xuaW1wb3J0IHsgbG9nZ2VyIH0gZnJvbSAnLi4vbGliL2xvZ2dlcic7XG5cbmV4cG9ydCBjb25zdCB0cmFpbmluZ1F1ZXVlID0gbmV3IEJ1bGwoJ3RyYWluaW5nJywge1xuICByZWRpczoge1xuICAgIGhvc3Q6IHByb2Nlc3MuZW52LlJFRElTX0hPU1QgfHwgJ2xvY2FsaG9zdCcsXG4gICAgcG9ydDogcGFyc2VJbnQocHJvY2Vzcy5lbnYuUkVESVNfUE9SVCB8fCAnNjM3OScpLFxuICB9LFxufSk7XG5cbi8vIOaUueWWhOaPkOahiOeUn+aIkOODr+ODvOOCq+ODvFxudHJhaW5pbmdRdWV1ZS5wcm9jZXNzKCdpbXByb3ZlLXJlc3BvbnNlJywgYXN5bmMgKGpvYikgPT4ge1xuICBjb25zdCB7XG4gICAgZmVlZGJhY2tJZCxcbiAgICBtZXNzYWdlSWQsXG4gICAgZmVlZGJhY2ssXG4gICAgb3JpZ2luYWxRdWVyeSxcbiAgICBvcmlnaW5hbFJlc3BvbnNlLFxuICAgIHdpZGdldElkLFxuICB9ID0gam9iLmRhdGE7XG5cbiAgbG9nZ2VyLmluZm8oJ1Byb2Nlc3NpbmcgZmVlZGJhY2sgaW1wcm92ZW1lbnQnLCB7XG4gICAgam9iSWQ6IGpvYi5pZCxcbiAgICBmZWVkYmFja0lkLFxuICB9KTtcblxuICB0cnkge1xuICAgIGF3YWl0IGltcHJvdmVSZXNwb25zZSh7XG4gICAgICBmZWVkYmFja0lkLFxuICAgICAgbWVzc2FnZUlkLFxuICAgICAgZmVlZGJhY2ssXG4gICAgICBvcmlnaW5hbFF1ZXJ5LFxuICAgICAgb3JpZ2luYWxSZXNwb25zZSxcbiAgICAgIHdpZGdldElkLFxuICAgIH0pO1xuXG4gICAgbG9nZ2VyLmluZm8oJ0ZlZWRiYWNrIGltcHJvdmVtZW50IGNvbXBsZXRlZCcsIHsgZmVlZGJhY2tJZCB9KTtcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICBsb2dnZXIuZXJyb3IoJ0ZhaWxlZCB0byBwcm9jZXNzIGZlZWRiYWNrIGltcHJvdmVtZW50Jywge1xuICAgICAgZXJyb3IsXG4gICAgICBmZWVkYmFja0lkLFxuICAgIH0pO1xuICAgIHRocm93IGVycm9yO1xuICB9XG59KTtcbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0lBQUE7SUFBQUEsY0FBQSxZQUFBQSxDQUFBO01BQUEsT0FBQUMsY0FBQTtJQUFBO0VBQUE7RUFBQSxPQUFBQSxjQUFBO0FBQUE7QUFBQUQsY0FBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQSxNQUFBRSxNQUFBO0FBQUE7QUFBQSxDQUFBRixjQUFBLEdBQUFHLENBQUEsUUFBQUMsZUFBQSxDQUFBQyxPQUFBO0FBQ0EsTUFBQUMsaUJBQUE7QUFBQTtBQUFBLENBQUFOLGNBQUEsR0FBQUcsQ0FBQSxRQUFBRSxPQUFBO0FBQ0EsTUFBQUUsUUFBQTtBQUFBO0FBQUEsQ0FBQVAsY0FBQSxHQUFBRyxDQUFBLFFBQUFFLE9BQUE7QUFBdUM7QUFBQUwsY0FBQSxHQUFBRyxDQUFBO0FBRTFCSyxPQUFBLENBQUFDLGFBQWEsR0FBRyxJQUFJUCxNQUFBLENBQUFRLE9BQUksQ0FBQyxVQUFVLEVBQUU7RUFDaERDLEtBQUssRUFBRTtJQUNMQyxJQUFJO0lBQUU7SUFBQSxDQUFBWixjQUFBLEdBQUFhLENBQUEsVUFBQUMsT0FBTyxDQUFDQyxHQUFHLENBQUNDLFVBQVU7SUFBQTtJQUFBLENBQUFoQixjQUFBLEdBQUFhLENBQUEsVUFBSSxXQUFXO0lBQzNDSSxJQUFJLEVBQUVDLFFBQVE7SUFBQztJQUFBLENBQUFsQixjQUFBLEdBQUFhLENBQUEsVUFBQUMsT0FBTyxDQUFDQyxHQUFHLENBQUNJLFVBQVU7SUFBQTtJQUFBLENBQUFuQixjQUFBLEdBQUFhLENBQUEsVUFBSSxNQUFNOztDQUVsRCxDQUFDO0FBRUY7QUFBQTtBQUFBYixjQUFBLEdBQUFHLENBQUE7QUFDQUssT0FBQSxDQUFBQyxhQUFhLENBQUNLLE9BQU8sQ0FBQyxrQkFBa0IsRUFBU00sR0FBRyxJQUFJO0VBQUE7RUFBQXBCLGNBQUEsR0FBQXFCLENBQUE7RUFBQXJCLGNBQUEsR0FBQUcsQ0FBQTtFQUFBLE9BQUFtQixTQUFBO0lBQUE7SUFBQXRCLGNBQUEsR0FBQXFCLENBQUE7SUFDdEQsTUFBTTtNQUNKRSxVQUFVO01BQ1ZDLFNBQVM7TUFDVEMsUUFBUTtNQUNSQyxhQUFhO01BQ2JDLGdCQUFnQjtNQUNoQkM7SUFBUSxDQUNUO0lBQUE7SUFBQSxDQUFBNUIsY0FBQSxHQUFBRyxDQUFBLFFBQUdpQixHQUFHLENBQUNTLElBQUk7SUFBQztJQUFBN0IsY0FBQSxHQUFBRyxDQUFBO0lBRWJJLFFBQUEsQ0FBQXVCLE1BQU0sQ0FBQ0MsSUFBSSxDQUFDLGlDQUFpQyxFQUFFO01BQzdDQyxLQUFLLEVBQUVaLEdBQUcsQ0FBQ2EsRUFBRTtNQUNiVjtLQUNELENBQUM7SUFBQztJQUFBdkIsY0FBQSxHQUFBRyxDQUFBO0lBRUgsSUFBSTtNQUFBO01BQUFILGNBQUEsR0FBQUcsQ0FBQTtNQUNGLE1BQU0sSUFBQUcsaUJBQUEsQ0FBQTRCLGVBQWUsRUFBQztRQUNwQlgsVUFBVTtRQUNWQyxTQUFTO1FBQ1RDLFFBQVE7UUFDUkMsYUFBYTtRQUNiQyxnQkFBZ0I7UUFDaEJDO09BQ0QsQ0FBQztNQUFDO01BQUE1QixjQUFBLEdBQUFHLENBQUE7TUFFSEksUUFBQSxDQUFBdUIsTUFBTSxDQUFDQyxJQUFJLENBQUMsZ0NBQWdDLEVBQUU7UUFBRVI7TUFBVSxDQUFFLENBQUM7SUFDL0QsQ0FBQyxDQUFDLE9BQU9ZLEtBQUssRUFBRTtNQUFBO01BQUFuQyxjQUFBLEdBQUFHLENBQUE7TUFDZEksUUFBQSxDQUFBdUIsTUFBTSxDQUFDSyxLQUFLLENBQUMsd0NBQXdDLEVBQUU7UUFDckRBLEtBQUs7UUFDTFo7T0FDRCxDQUFDO01BQUM7TUFBQXZCLGNBQUEsR0FBQUcsQ0FBQTtNQUNILE1BQU1nQyxLQUFLO0lBQ2I7RUFDRixDQUFDO0FBQUEsRUFBQyIsImlnbm9yZUxpc3QiOltdfQ==