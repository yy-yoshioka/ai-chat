bcc3212c1b3e06be166e308f6db32ed0
"use strict";

/* istanbul ignore next */
function cov_zkwnq2utq() {
  var path = "/Users/yusukeyoshioka/projects/youtube/ai-chat/ai-chat-api/src/middleware/auth.ts";
  var hash = "cf0fcb0dde63e3bb26a9c768dd57ce4cd2bc3ff8";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/yusukeyoshioka/projects/youtube/ai-chat/ai-chat-api/src/middleware/auth.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 16
        },
        end: {
          line: 10,
          column: 1
        }
      },
      "1": {
        start: {
          line: 3,
          column: 28
        },
        end: {
          line: 3,
          column: 110
        }
      },
      "2": {
        start: {
          line: 3,
          column: 91
        },
        end: {
          line: 3,
          column: 106
        }
      },
      "3": {
        start: {
          line: 4,
          column: 4
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "4": {
        start: {
          line: 5,
          column: 36
        },
        end: {
          line: 5,
          column: 97
        }
      },
      "5": {
        start: {
          line: 5,
          column: 42
        },
        end: {
          line: 5,
          column: 70
        }
      },
      "6": {
        start: {
          line: 5,
          column: 85
        },
        end: {
          line: 5,
          column: 95
        }
      },
      "7": {
        start: {
          line: 6,
          column: 35
        },
        end: {
          line: 6,
          column: 100
        }
      },
      "8": {
        start: {
          line: 6,
          column: 41
        },
        end: {
          line: 6,
          column: 73
        }
      },
      "9": {
        start: {
          line: 6,
          column: 88
        },
        end: {
          line: 6,
          column: 98
        }
      },
      "10": {
        start: {
          line: 7,
          column: 32
        },
        end: {
          line: 7,
          column: 116
        }
      },
      "11": {
        start: {
          line: 8,
          column: 8
        },
        end: {
          line: 8,
          column: 78
        }
      },
      "12": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 11,
          column: 62
        }
      },
      "13": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 12,
          column: 32
        }
      },
      "14": {
        start: {
          line: 13,
          column: 14
        },
        end: {
          line: 13,
          column: 37
        }
      },
      "15": {
        start: {
          line: 14,
          column: 17
        },
        end: {
          line: 14,
          column: 41
        }
      },
      "16": {
        start: {
          line: 16,
          column: 23
        },
        end: {
          line: 58,
          column: 2
        }
      },
      "17": {
        start: {
          line: 16,
          column: 43
        },
        end: {
          line: 58,
          column: 2
        }
      },
      "18": {
        start: {
          line: 18,
          column: 4
        },
        end: {
          line: 57,
          column: 5
        }
      },
      "19": {
        start: {
          line: 21,
          column: 27
        },
        end: {
          line: 21,
          column: 52
        }
      },
      "20": {
        start: {
          line: 22,
          column: 8
        },
        end: {
          line: 24,
          column: 9
        }
      },
      "21": {
        start: {
          line: 23,
          column: 12
        },
        end: {
          line: 23,
          column: 44
        }
      },
      "22": {
        start: {
          line: 26,
          column: 8
        },
        end: {
          line: 28,
          column: 9
        }
      },
      "23": {
        start: {
          line: 27,
          column: 12
        },
        end: {
          line: 27,
          column: 85
        }
      },
      "24": {
        start: {
          line: 29,
          column: 8
        },
        end: {
          line: 31,
          column: 9
        }
      },
      "25": {
        start: {
          line: 30,
          column: 12
        },
        end: {
          line: 30,
          column: 67
        }
      },
      "26": {
        start: {
          line: 34,
          column: 8
        },
        end: {
          line: 42,
          column: 9
        }
      },
      "27": {
        start: {
          line: 35,
          column: 12
        },
        end: {
          line: 35,
          column: 49
        }
      },
      "28": {
        start: {
          line: 38,
          column: 12
        },
        end: {
          line: 40,
          column: 13
        }
      },
      "29": {
        start: {
          line: 39,
          column: 16
        },
        end: {
          line: 39,
          column: 72
        }
      },
      "30": {
        start: {
          line: 41,
          column: 12
        },
        end: {
          line: 41,
          column: 68
        }
      },
      "31": {
        start: {
          line: 44,
          column: 23
        },
        end: {
          line: 47,
          column: 10
        }
      },
      "32": {
        start: {
          line: 48,
          column: 8
        },
        end: {
          line: 50,
          column: 9
        }
      },
      "33": {
        start: {
          line: 49,
          column: 12
        },
        end: {
          line: 49,
          column: 69
        }
      },
      "34": {
        start: {
          line: 51,
          column: 8
        },
        end: {
          line: 51,
          column: 83
        }
      },
      "35": {
        start: {
          line: 52,
          column: 8
        },
        end: {
          line: 52,
          column: 15
        }
      },
      "36": {
        start: {
          line: 55,
          column: 8
        },
        end: {
          line: 55,
          column: 55
        }
      },
      "37": {
        start: {
          line: 56,
          column: 8
        },
        end: {
          line: 56,
          column: 72
        }
      },
      "38": {
        start: {
          line: 59,
          column: 0
        },
        end: {
          line: 59,
          column: 40
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 44
          },
          end: {
            line: 2,
            column: 45
          }
        },
        loc: {
          start: {
            line: 2,
            column: 89
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "adopt",
        decl: {
          start: {
            line: 3,
            column: 13
          },
          end: {
            line: 3,
            column: 18
          }
        },
        loc: {
          start: {
            line: 3,
            column: 26
          },
          end: {
            line: 3,
            column: 112
          }
        },
        line: 3
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 3,
            column: 70
          },
          end: {
            line: 3,
            column: 71
          }
        },
        loc: {
          start: {
            line: 3,
            column: 89
          },
          end: {
            line: 3,
            column: 108
          }
        },
        line: 3
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 4,
            column: 36
          },
          end: {
            line: 4,
            column: 37
          }
        },
        loc: {
          start: {
            line: 4,
            column: 63
          },
          end: {
            line: 9,
            column: 5
          }
        },
        line: 4
      },
      "4": {
        name: "fulfilled",
        decl: {
          start: {
            line: 5,
            column: 17
          },
          end: {
            line: 5,
            column: 26
          }
        },
        loc: {
          start: {
            line: 5,
            column: 34
          },
          end: {
            line: 5,
            column: 99
          }
        },
        line: 5
      },
      "5": {
        name: "rejected",
        decl: {
          start: {
            line: 6,
            column: 17
          },
          end: {
            line: 6,
            column: 25
          }
        },
        loc: {
          start: {
            line: 6,
            column: 33
          },
          end: {
            line: 6,
            column: 102
          }
        },
        line: 6
      },
      "6": {
        name: "step",
        decl: {
          start: {
            line: 7,
            column: 17
          },
          end: {
            line: 7,
            column: 21
          }
        },
        loc: {
          start: {
            line: 7,
            column: 30
          },
          end: {
            line: 7,
            column: 118
          }
        },
        line: 7
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 16,
            column: 23
          },
          end: {
            line: 16,
            column: 24
          }
        },
        loc: {
          start: {
            line: 16,
            column: 43
          },
          end: {
            line: 58,
            column: 2
          }
        },
        line: 16
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 16,
            column: 77
          },
          end: {
            line: 16,
            column: 78
          }
        },
        loc: {
          start: {
            line: 16,
            column: 90
          },
          end: {
            line: 58,
            column: 1
          }
        },
        line: 16
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 16
          },
          end: {
            line: 10,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 17
          },
          end: {
            line: 2,
            column: 21
          }
        }, {
          start: {
            line: 2,
            column: 25
          },
          end: {
            line: 2,
            column: 39
          }
        }, {
          start: {
            line: 2,
            column: 44
          },
          end: {
            line: 10,
            column: 1
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 3,
            column: 35
          },
          end: {
            line: 3,
            column: 109
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 3,
            column: 56
          },
          end: {
            line: 3,
            column: 61
          }
        }, {
          start: {
            line: 3,
            column: 64
          },
          end: {
            line: 3,
            column: 109
          }
        }],
        line: 3
      },
      "2": {
        loc: {
          start: {
            line: 4,
            column: 16
          },
          end: {
            line: 4,
            column: 34
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 4,
            column: 16
          },
          end: {
            line: 4,
            column: 17
          }
        }, {
          start: {
            line: 4,
            column: 22
          },
          end: {
            line: 4,
            column: 33
          }
        }],
        line: 4
      },
      "3": {
        loc: {
          start: {
            line: 7,
            column: 32
          },
          end: {
            line: 7,
            column: 115
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 7,
            column: 46
          },
          end: {
            line: 7,
            column: 67
          }
        }, {
          start: {
            line: 7,
            column: 70
          },
          end: {
            line: 7,
            column: 115
          }
        }],
        line: 7
      },
      "4": {
        loc: {
          start: {
            line: 8,
            column: 51
          },
          end: {
            line: 8,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 8,
            column: 51
          },
          end: {
            line: 8,
            column: 61
          }
        }, {
          start: {
            line: 8,
            column: 65
          },
          end: {
            line: 8,
            column: 67
          }
        }],
        line: 8
      },
      "5": {
        loc: {
          start: {
            line: 22,
            column: 8
          },
          end: {
            line: 24,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 22,
            column: 8
          },
          end: {
            line: 24,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 22
      },
      "6": {
        loc: {
          start: {
            line: 22,
            column: 12
          },
          end: {
            line: 22,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 22,
            column: 12
          },
          end: {
            line: 22,
            column: 22
          }
        }, {
          start: {
            line: 22,
            column: 26
          },
          end: {
            line: 22,
            column: 58
          }
        }],
        line: 22
      },
      "7": {
        loc: {
          start: {
            line: 26,
            column: 8
          },
          end: {
            line: 28,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 26,
            column: 8
          },
          end: {
            line: 28,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 26
      },
      "8": {
        loc: {
          start: {
            line: 27,
            column: 20
          },
          end: {
            line: 27,
            column: 84
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 27,
            column: 67
          },
          end: {
            line: 27,
            column: 73
          }
        }, {
          start: {
            line: 27,
            column: 76
          },
          end: {
            line: 27,
            column: 84
          }
        }],
        line: 27
      },
      "9": {
        loc: {
          start: {
            line: 27,
            column: 20
          },
          end: {
            line: 27,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 27,
            column: 20
          },
          end: {
            line: 27,
            column: 47
          }
        }, {
          start: {
            line: 27,
            column: 51
          },
          end: {
            line: 27,
            column: 64
          }
        }],
        line: 27
      },
      "10": {
        loc: {
          start: {
            line: 29,
            column: 8
          },
          end: {
            line: 31,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 29,
            column: 8
          },
          end: {
            line: 31,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 29
      },
      "11": {
        loc: {
          start: {
            line: 38,
            column: 12
          },
          end: {
            line: 40,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 38,
            column: 12
          },
          end: {
            line: 40,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 38
      },
      "12": {
        loc: {
          start: {
            line: 38,
            column: 16
          },
          end: {
            line: 38,
            column: 73
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 38,
            column: 16
          },
          end: {
            line: 38,
            column: 38
          }
        }, {
          start: {
            line: 38,
            column: 42
          },
          end: {
            line: 38,
            column: 73
          }
        }],
        line: 38
      },
      "13": {
        loc: {
          start: {
            line: 48,
            column: 8
          },
          end: {
            line: 50,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 48,
            column: 8
          },
          end: {
            line: 50,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 48
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/yusukeyoshioka/projects/youtube/ai-chat/ai-chat-api/src/middleware/auth.ts",
      mappings: ";;;;;;;;;;;;AACA,sCAAwD;AACxD,0CAAuC;AASvC,4BAA4B;AACrB,MAAM,cAAc,GAAG,CAC5B,GAAY,EACZ,GAAa,EACb,IAAkB,EAClB,EAAE;;IACF,IAAI,CAAC;QACH,IAAI,KAAyB,CAAC;QAE9B,mEAAmE;QACnE,MAAM,UAAU,GAAG,GAAG,CAAC,OAAO,CAAC,aAAa,CAAC;QAC7C,IAAI,UAAU,IAAI,UAAU,CAAC,UAAU,CAAC,SAAS,CAAC,EAAE,CAAC;YACnD,KAAK,GAAG,UAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,0BAA0B;QAC7D,CAAC;QAED,gEAAgE;QAChE,IAAI,CAAC,KAAK,EAAE,CAAC;YACX,KAAK,GAAG,MAAA,GAAG,CAAC,OAAO,0CAAE,KAAK,CAAC;QAC7B,CAAC;QAED,IAAI,CAAC,KAAK,EAAE,CAAC;YACX,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,cAAc,EAAE,CAAC,CAAC;QACzD,CAAC;QAED,0CAA0C;QAC1C,IAAI,IAAI,CAAC;QACT,IAAI,CAAC;YACH,IAAI,GAAG,IAAA,iBAAW,EAAC,KAAK,CAAC,CAAC;QAC5B,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,IAAI,KAAK,YAAY,KAAK,IAAI,KAAK,CAAC,OAAO,KAAK,aAAa,EAAE,CAAC;gBAC9D,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,eAAe,EAAE,CAAC,CAAC;YAC1D,CAAC;YACD,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,eAAe,EAAE,CAAC,CAAC;QAC1D,CAAC;QAED,6BAA6B;QAC7B,MAAM,MAAM,GAAG,MAAM,eAAM,CAAC,IAAI,CAAC,UAAU,CAAC;YAC1C,KAAK,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,EAAE,EAAE;YACtB,MAAM,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE;SAC/C,CAAC,CAAC;QAEH,IAAI,CAAC,MAAM,EAAE,CAAC;YACZ,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,gBAAgB,EAAE,CAAC,CAAC;QAC3D,CAAC;QAED,GAAG,CAAC,IAAI,mCAAQ,IAAI,KAAE,KAAK,EAAE,MAAM,CAAC,KAAK,GAAE,CAAC;QAC5C,IAAI,EAAE,CAAC;IACT,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACf,OAAO,CAAC,KAAK,CAAC,wBAAwB,EAAE,KAAK,CAAC,CAAC;QAC/C,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,uBAAuB,EAAE,CAAC,CAAC;IAClE,CAAC;AACH,CAAC,CAAA,CAAC;AAlDW,QAAA,cAAc,kBAkDzB",
      names: [],
      sources: ["/Users/yusukeyoshioka/projects/youtube/ai-chat/ai-chat-api/src/middleware/auth.ts"],
      sourcesContent: ["import { Request, Response, NextFunction } from 'express';\nimport { verifyToken, UserPayload } from '../utils/jwt';\nimport { prisma } from '../lib/prisma';\n\n// Extend Express Request type to include user\ndeclare module 'express' {\n  interface Request {\n    user?: UserPayload & { roles?: string[] };\n  }\n}\n\n// Authentication middleware\nexport const authMiddleware = async (\n  req: Request,\n  res: Response,\n  next: NextFunction\n) => {\n  try {\n    let token: string | undefined;\n\n    // Try to get token from Authorization header first (for API calls)\n    const authHeader = req.headers.authorization;\n    if (authHeader && authHeader.startsWith('Bearer ')) {\n      token = authHeader.substring(7); // Remove 'Bearer ' prefix\n    }\n\n    // If no token in header, try cookies (for direct browser calls)\n    if (!token) {\n      token = req.cookies?.token;\n    }\n\n    if (!token) {\n      return res.status(401).json({ error: 'Unauthorized' });\n    }\n\n    // Verify token and attach user to request\n    let user;\n    try {\n      user = verifyToken(token);\n    } catch (error) {\n      if (error instanceof Error && error.message === 'jwt expired') {\n        return res.status(401).json({ error: 'Token expired' });\n      }\n      return res.status(401).json({ error: 'Invalid token' });\n    }\n\n    // Check if user still exists\n    const dbUser = await prisma.user.findUnique({\n      where: { id: user.id },\n      select: { id: true, email: true, roles: true },\n    });\n\n    if (!dbUser) {\n      return res.status(401).json({ error: 'User not found' });\n    }\n\n    req.user = { ...user, roles: dbUser.roles };\n    next();\n  } catch (error) {\n    console.error('Auth middleware error:', error);\n    return res.status(500).json({ error: 'Internal server error' });\n  }\n};\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "cf0fcb0dde63e3bb26a9c768dd57ce4cd2bc3ff8"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_zkwnq2utq = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_zkwnq2utq();
var __awaiter =
/* istanbul ignore next */
(cov_zkwnq2utq().s[0]++,
/* istanbul ignore next */
(cov_zkwnq2utq().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_zkwnq2utq().b[0][1]++, this.__awaiter) ||
/* istanbul ignore next */
(cov_zkwnq2utq().b[0][2]++, function (thisArg, _arguments, P, generator) {
  /* istanbul ignore next */
  cov_zkwnq2utq().f[0]++;
  function adopt(value) {
    /* istanbul ignore next */
    cov_zkwnq2utq().f[1]++;
    cov_zkwnq2utq().s[1]++;
    return value instanceof P ?
    /* istanbul ignore next */
    (cov_zkwnq2utq().b[1][0]++, value) :
    /* istanbul ignore next */
    (cov_zkwnq2utq().b[1][1]++, new P(function (resolve) {
      /* istanbul ignore next */
      cov_zkwnq2utq().f[2]++;
      cov_zkwnq2utq().s[2]++;
      resolve(value);
    }));
  }
  /* istanbul ignore next */
  cov_zkwnq2utq().s[3]++;
  return new (
  /* istanbul ignore next */
  (cov_zkwnq2utq().b[2][0]++, P) ||
  /* istanbul ignore next */
  (cov_zkwnq2utq().b[2][1]++, P = Promise))(function (resolve, reject) {
    /* istanbul ignore next */
    cov_zkwnq2utq().f[3]++;
    function fulfilled(value) {
      /* istanbul ignore next */
      cov_zkwnq2utq().f[4]++;
      cov_zkwnq2utq().s[4]++;
      try {
        /* istanbul ignore next */
        cov_zkwnq2utq().s[5]++;
        step(generator.next(value));
      } catch (e) {
        /* istanbul ignore next */
        cov_zkwnq2utq().s[6]++;
        reject(e);
      }
    }
    function rejected(value) {
      /* istanbul ignore next */
      cov_zkwnq2utq().f[5]++;
      cov_zkwnq2utq().s[7]++;
      try {
        /* istanbul ignore next */
        cov_zkwnq2utq().s[8]++;
        step(generator["throw"](value));
      } catch (e) {
        /* istanbul ignore next */
        cov_zkwnq2utq().s[9]++;
        reject(e);
      }
    }
    function step(result) {
      /* istanbul ignore next */
      cov_zkwnq2utq().f[6]++;
      cov_zkwnq2utq().s[10]++;
      result.done ?
      /* istanbul ignore next */
      (cov_zkwnq2utq().b[3][0]++, resolve(result.value)) :
      /* istanbul ignore next */
      (cov_zkwnq2utq().b[3][1]++, adopt(result.value).then(fulfilled, rejected));
    }
    /* istanbul ignore next */
    cov_zkwnq2utq().s[11]++;
    step((generator = generator.apply(thisArg,
    /* istanbul ignore next */
    (cov_zkwnq2utq().b[4][0]++, _arguments) ||
    /* istanbul ignore next */
    (cov_zkwnq2utq().b[4][1]++, []))).next());
  });
}));
/* istanbul ignore next */
cov_zkwnq2utq().s[12]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_zkwnq2utq().s[13]++;
exports.authMiddleware = void 0;
const jwt_1 =
/* istanbul ignore next */
(cov_zkwnq2utq().s[14]++, require("../utils/jwt"));
const prisma_1 =
/* istanbul ignore next */
(cov_zkwnq2utq().s[15]++, require("../lib/prisma"));
// Authentication middleware
/* istanbul ignore next */
cov_zkwnq2utq().s[16]++;
const authMiddleware = (req, res, next) => {
  /* istanbul ignore next */
  cov_zkwnq2utq().f[7]++;
  cov_zkwnq2utq().s[17]++;
  return __awaiter(void 0, void 0, void 0, function* () {
    /* istanbul ignore next */
    cov_zkwnq2utq().f[8]++;
    var _a;
    /* istanbul ignore next */
    cov_zkwnq2utq().s[18]++;
    try {
      let token;
      // Try to get token from Authorization header first (for API calls)
      const authHeader =
      /* istanbul ignore next */
      (cov_zkwnq2utq().s[19]++, req.headers.authorization);
      /* istanbul ignore next */
      cov_zkwnq2utq().s[20]++;
      if (
      /* istanbul ignore next */
      (cov_zkwnq2utq().b[6][0]++, authHeader) &&
      /* istanbul ignore next */
      (cov_zkwnq2utq().b[6][1]++, authHeader.startsWith('Bearer '))) {
        /* istanbul ignore next */
        cov_zkwnq2utq().b[5][0]++;
        cov_zkwnq2utq().s[21]++;
        token = authHeader.substring(7); // Remove 'Bearer ' prefix
      } else
      /* istanbul ignore next */
      {
        cov_zkwnq2utq().b[5][1]++;
      }
      // If no token in header, try cookies (for direct browser calls)
      cov_zkwnq2utq().s[22]++;
      if (!token) {
        /* istanbul ignore next */
        cov_zkwnq2utq().b[7][0]++;
        cov_zkwnq2utq().s[23]++;
        token =
        /* istanbul ignore next */
        (cov_zkwnq2utq().b[9][0]++, (_a = req.cookies) === null) ||
        /* istanbul ignore next */
        (cov_zkwnq2utq().b[9][1]++, _a === void 0) ?
        /* istanbul ignore next */
        (cov_zkwnq2utq().b[8][0]++, void 0) :
        /* istanbul ignore next */
        (cov_zkwnq2utq().b[8][1]++, _a.token);
      } else
      /* istanbul ignore next */
      {
        cov_zkwnq2utq().b[7][1]++;
      }
      cov_zkwnq2utq().s[24]++;
      if (!token) {
        /* istanbul ignore next */
        cov_zkwnq2utq().b[10][0]++;
        cov_zkwnq2utq().s[25]++;
        return res.status(401).json({
          error: 'Unauthorized'
        });
      } else
      /* istanbul ignore next */
      {
        cov_zkwnq2utq().b[10][1]++;
      }
      // Verify token and attach user to request
      let user;
      /* istanbul ignore next */
      cov_zkwnq2utq().s[26]++;
      try {
        /* istanbul ignore next */
        cov_zkwnq2utq().s[27]++;
        user = (0, jwt_1.verifyToken)(token);
      } catch (error) {
        /* istanbul ignore next */
        cov_zkwnq2utq().s[28]++;
        if (
        /* istanbul ignore next */
        (cov_zkwnq2utq().b[12][0]++, error instanceof Error) &&
        /* istanbul ignore next */
        (cov_zkwnq2utq().b[12][1]++, error.message === 'jwt expired')) {
          /* istanbul ignore next */
          cov_zkwnq2utq().b[11][0]++;
          cov_zkwnq2utq().s[29]++;
          return res.status(401).json({
            error: 'Token expired'
          });
        } else
        /* istanbul ignore next */
        {
          cov_zkwnq2utq().b[11][1]++;
        }
        cov_zkwnq2utq().s[30]++;
        return res.status(401).json({
          error: 'Invalid token'
        });
      }
      // Check if user still exists
      const dbUser =
      /* istanbul ignore next */
      (cov_zkwnq2utq().s[31]++, yield prisma_1.prisma.user.findUnique({
        where: {
          id: user.id
        },
        select: {
          id: true,
          email: true,
          roles: true
        }
      }));
      /* istanbul ignore next */
      cov_zkwnq2utq().s[32]++;
      if (!dbUser) {
        /* istanbul ignore next */
        cov_zkwnq2utq().b[13][0]++;
        cov_zkwnq2utq().s[33]++;
        return res.status(401).json({
          error: 'User not found'
        });
      } else
      /* istanbul ignore next */
      {
        cov_zkwnq2utq().b[13][1]++;
      }
      cov_zkwnq2utq().s[34]++;
      req.user = Object.assign(Object.assign({}, user), {
        roles: dbUser.roles
      });
      /* istanbul ignore next */
      cov_zkwnq2utq().s[35]++;
      next();
    } catch (error) {
      /* istanbul ignore next */
      cov_zkwnq2utq().s[36]++;
      console.error('Auth middleware error:', error);
      /* istanbul ignore next */
      cov_zkwnq2utq().s[37]++;
      return res.status(500).json({
        error: 'Internal server error'
      });
    }
  });
};
/* istanbul ignore next */
cov_zkwnq2utq().s[38]++;
exports.authMiddleware = authMiddleware;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,