{"version":3,"names":["cov_zkwnq2utq","actualCoverage","jwt_1","s","require","prisma_1","authMiddleware","req","res","next","f","__awaiter","token","authHeader","headers","authorization","b","startsWith","substring","_a","cookies","status","json","error","user","verifyToken","Error","message","dbUser","prisma","findUnique","where","id","select","email","roles","Object","assign","console","exports"],"sources":["/Users/yusukeyoshioka/projects/youtube/ai-chat/ai-chat-api/src/middleware/auth.ts"],"sourcesContent":["import { Request, Response, NextFunction } from 'express';\nimport { verifyToken, UserPayload } from '../utils/jwt';\nimport { prisma } from '../lib/prisma';\n\n// Extend Express Request type to include user\ndeclare module 'express' {\n  interface Request {\n    user?: UserPayload & { roles?: string[] };\n  }\n}\n\n// Authentication middleware\nexport const authMiddleware = async (\n  req: Request,\n  res: Response,\n  next: NextFunction\n) => {\n  try {\n    let token: string | undefined;\n\n    // Try to get token from Authorization header first (for API calls)\n    const authHeader = req.headers.authorization;\n    if (authHeader && authHeader.startsWith('Bearer ')) {\n      token = authHeader.substring(7); // Remove 'Bearer ' prefix\n    }\n\n    // If no token in header, try cookies (for direct browser calls)\n    if (!token) {\n      token = req.cookies?.token;\n    }\n\n    if (!token) {\n      return res.status(401).json({ error: 'Unauthorized' });\n    }\n\n    // Verify token and attach user to request\n    let user;\n    try {\n      user = verifyToken(token);\n    } catch (error) {\n      if (error instanceof Error && error.message === 'jwt expired') {\n        return res.status(401).json({ error: 'Token expired' });\n      }\n      return res.status(401).json({ error: 'Invalid token' });\n    }\n\n    // Check if user still exists\n    const dbUser = await prisma.user.findUnique({\n      where: { id: user.id },\n      select: { id: true, email: true, roles: true },\n    });\n\n    if (!dbUser) {\n      return res.status(401).json({ error: 'User not found' });\n    }\n\n    req.user = { ...user, roles: dbUser.roles };\n    next();\n  } catch (error) {\n    console.error('Auth middleware error:', error);\n    return res.status(500).json({ error: 'Internal server error' });\n  }\n};\n"],"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","ignoreList":[]}