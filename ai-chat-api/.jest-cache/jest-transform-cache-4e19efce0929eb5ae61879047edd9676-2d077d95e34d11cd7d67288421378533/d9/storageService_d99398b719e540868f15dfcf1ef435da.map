{"version":3,"names":["cov_2d8kdj2qjq","actualCoverage","aws_sdk_1","s","__importDefault","require","logger_1","s3","default","S3","endpoint","process","env","S3_ENDPOINT","accessKeyId","S3_ACCESS_KEY","secretAccessKey","S3_SECRET_KEY","s3ForcePathStyle","SecureStorageService","constructor","f","bucket","b","S3_BUCKET","getOrgPrefix","organizationId","uploadFile","key","body","contentType","fullKey","putObject","Bucket","Key","Body","ContentType","ServerSideEncryption","Tagging","promise","logger","info","error","Error","message","downloadFile","startsWith","result","getObject","tags","getObjectTagging","orgTag","_a","TagSet","find","tag","Value","listFiles","prefix","fullPrefix","listObjectsV2","Prefix","MaxKeys","Contents","deleteFile","deleteObject","getPresignedUrl","expiresIn","url","getSignedUrlPromise","Expires","setupOrganizationPolicy","exports","storageService"],"sources":["/Users/yusukeyoshioka/projects/youtube/ai-chat/ai-chat-api/src/services/storageService.ts"],"sourcesContent":["import AWS from 'aws-sdk';\nimport { logger } from '../lib/logger';\n\nconst s3 = new AWS.S3({\n  endpoint: process.env.S3_ENDPOINT,\n  accessKeyId: process.env.S3_ACCESS_KEY,\n  secretAccessKey: process.env.S3_SECRET_KEY,\n  s3ForcePathStyle: true, // for MinIO compatibility\n});\n\nexport class SecureStorageService {\n  private bucket: string;\n\n  constructor() {\n    this.bucket = process.env.S3_BUCKET || 'ai-chat-knowledge-base';\n  }\n\n  // Generate organization-specific prefix\n  private getOrgPrefix(organizationId: string): string {\n    return `organizations/${organizationId}/`;\n  }\n\n  // Upload file with organization isolation\n  async uploadFile(\n    organizationId: string,\n    key: string,\n    body: Buffer | Uint8Array | string,\n    contentType?: string\n  ): Promise<string> {\n    const fullKey = `${this.getOrgPrefix(organizationId)}${key}`;\n\n    try {\n      await s3\n        .putObject({\n          Bucket: this.bucket,\n          Key: fullKey,\n          Body: body,\n          ContentType: contentType,\n          // Set server-side encryption\n          ServerSideEncryption: 'AES256',\n          // Tag with organization ID for additional security\n          Tagging: `organizationId=${organizationId}`,\n        })\n        .promise();\n\n      logger.info('File uploaded successfully', {\n        organizationId,\n        key: fullKey,\n      });\n\n      return fullKey;\n    } catch (error) {\n      logger.error('Failed to upload file', {\n        organizationId,\n        key,\n        error: error instanceof Error ? error.message : error,\n      });\n      throw new Error('Failed to upload file');\n    }\n  }\n\n  // Download file with organization isolation\n  async downloadFile(organizationId: string, key: string): Promise<Buffer> {\n    const fullKey = key.startsWith(this.getOrgPrefix(organizationId))\n      ? key\n      : `${this.getOrgPrefix(organizationId)}${key}`;\n\n    try {\n      const result = await s3\n        .getObject({\n          Bucket: this.bucket,\n          Key: fullKey,\n        })\n        .promise();\n\n      // Verify organization tag\n      const tags = await s3\n        .getObjectTagging({\n          Bucket: this.bucket,\n          Key: fullKey,\n        })\n        .promise();\n\n      const orgTag = tags.TagSet?.find((tag) => tag.Key === 'organizationId');\n      if (orgTag?.Value !== organizationId) {\n        throw new Error('Access denied: Organization mismatch');\n      }\n\n      return result.Body as Buffer;\n    } catch (error) {\n      logger.error('Failed to download file', {\n        organizationId,\n        key,\n        error: error instanceof Error ? error.message : error,\n      });\n      throw new Error('Failed to download file');\n    }\n  }\n\n  // List files for organization\n  async listFiles(\n    organizationId: string,\n    prefix?: string\n  ): Promise<AWS.S3.ObjectList> {\n    const fullPrefix = `${this.getOrgPrefix(organizationId)}${prefix || ''}`;\n\n    try {\n      const result = await s3\n        .listObjectsV2({\n          Bucket: this.bucket,\n          Prefix: fullPrefix,\n          MaxKeys: 1000,\n        })\n        .promise();\n\n      return result.Contents || [];\n    } catch (error) {\n      logger.error('Failed to list files', {\n        organizationId,\n        prefix,\n        error: error instanceof Error ? error.message : error,\n      });\n      throw new Error('Failed to list files');\n    }\n  }\n\n  // Delete file with organization isolation\n  async deleteFile(organizationId: string, key: string): Promise<void> {\n    const fullKey = key.startsWith(this.getOrgPrefix(organizationId))\n      ? key\n      : `${this.getOrgPrefix(organizationId)}${key}`;\n\n    try {\n      // Verify organization tag before deletion\n      const tags = await s3\n        .getObjectTagging({\n          Bucket: this.bucket,\n          Key: fullKey,\n        })\n        .promise();\n\n      const orgTag = tags.TagSet?.find((tag) => tag.Key === 'organizationId');\n      if (orgTag?.Value !== organizationId) {\n        throw new Error('Access denied: Organization mismatch');\n      }\n\n      await s3\n        .deleteObject({\n          Bucket: this.bucket,\n          Key: fullKey,\n        })\n        .promise();\n\n      logger.info('File deleted successfully', {\n        organizationId,\n        key: fullKey,\n      });\n    } catch (error) {\n      logger.error('Failed to delete file', {\n        organizationId,\n        key,\n        error: error instanceof Error ? error.message : error,\n      });\n      throw new Error('Failed to delete file');\n    }\n  }\n\n  // Generate pre-signed URL for secure temporary access\n  async getPresignedUrl(\n    organizationId: string,\n    key: string,\n    expiresIn: number = 3600 // 1 hour default\n  ): Promise<string> {\n    const fullKey = key.startsWith(this.getOrgPrefix(organizationId))\n      ? key\n      : `${this.getOrgPrefix(organizationId)}${key}`;\n\n    try {\n      // Verify organization tag\n      const tags = await s3\n        .getObjectTagging({\n          Bucket: this.bucket,\n          Key: fullKey,\n        })\n        .promise();\n\n      const orgTag = tags.TagSet?.find((tag) => tag.Key === 'organizationId');\n      if (orgTag?.Value !== organizationId) {\n        throw new Error('Access denied: Organization mismatch');\n      }\n\n      const url = await s3.getSignedUrlPromise('getObject', {\n        Bucket: this.bucket,\n        Key: fullKey,\n        Expires: expiresIn,\n      });\n\n      return url;\n    } catch (error) {\n      logger.error('Failed to generate presigned URL', {\n        organizationId,\n        key,\n        error: error instanceof Error ? error.message : error,\n      });\n      throw new Error('Failed to generate presigned URL');\n    }\n  }\n\n  // Create organization bucket policy\n  async setupOrganizationPolicy(organizationId: string): Promise<void> {\n    // In a real implementation, this would create IAM policies\n    // or bucket policies specific to the organization\n    logger.info('Setting up organization storage policy', { organizationId });\n  }\n}\n\nexport const storageService = new SecureStorageService();\n"],"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","ignoreList":[]}