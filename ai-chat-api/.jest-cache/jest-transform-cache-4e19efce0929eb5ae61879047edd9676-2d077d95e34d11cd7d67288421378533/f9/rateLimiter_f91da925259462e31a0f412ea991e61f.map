{"file":"/Users/yusukeyoshioka/projects/youtube/ai-chat/ai-chat-api/src/utils/rateLimiter.ts","mappings":"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","names":[],"sources":["/Users/yusukeyoshioka/projects/youtube/ai-chat/ai-chat-api/src/utils/rateLimiter.ts"],"sourcesContent":["import Redis from 'ioredis';\n\ninterface RateLimitOptions {\n  widgetId: string;\n  limit: number;\n  period: number; // in seconds\n}\n\ninterface RateLimitResult {\n  allowed: boolean;\n  count: number;\n  resetTime: number;\n}\n\nclass RateLimiter {\n  private redis: Redis | null = null;\n  private memoryStore: Map<string, { count: number; resetTime: number }> =\n    new Map();\n\n  constructor() {\n    // Only try to connect to Redis if URL is provided\n    if (process.env.REDIS_URL) {\n      try {\n        this.redis = new Redis(process.env.REDIS_URL, {\n          maxRetriesPerRequest: 3,\n          lazyConnect: true, // Don't connect immediately\n        });\n\n        this.redis.on('connect', () => {\n          console.log('✅ Connected to Redis for rate limiting');\n        });\n\n        this.redis.on('error', (error) => {\n          console.warn(\n            '⚠️ Redis connection error, falling back to memory store:',\n            error.message\n          );\n          this.redis = null; // Fallback to memory store\n        });\n      } catch (error) {\n        console.warn(\n          '⚠️ Failed to initialize Redis, using in-memory store:',\n          error\n        );\n        this.redis = null;\n      }\n    } else {\n      console.log('ℹ️ No Redis URL provided, using in-memory rate limiter');\n    }\n  }\n\n  async incrementAndCheck(options: RateLimitOptions): Promise<RateLimitResult> {\n    const { widgetId, limit, period } = options;\n    const key = `rate_limit:${widgetId}`;\n    const now = Math.floor(Date.now() / 1000);\n    const resetTime = now + period;\n\n    if (this.redis) {\n      return this.incrementRedis(key, limit, period, resetTime);\n    } else {\n      return this.incrementMemory(key, limit, period, resetTime);\n    }\n  }\n\n  private async incrementRedis(\n    key: string,\n    limit: number,\n    period: number,\n    resetTime: number\n  ): Promise<RateLimitResult> {\n    const multi = this.redis!.multi();\n    multi.incr(key);\n    multi.expire(key, period);\n\n    const results = await multi.exec();\n    const count = (results?.[0]?.[1] as number) || 0;\n\n    return {\n      allowed: count <= limit,\n      count,\n      resetTime,\n    };\n  }\n\n  private incrementMemory(\n    key: string,\n    limit: number,\n    period: number,\n    resetTime: number\n  ): RateLimitResult {\n    const now = Math.floor(Date.now() / 1000);\n    const existing = this.memoryStore.get(key);\n\n    // Clean up expired entries\n    if (existing && existing.resetTime <= now) {\n      this.memoryStore.delete(key);\n    }\n\n    const current = this.memoryStore.get(key) || { count: 0, resetTime };\n    current.count += 1;\n\n    if (!this.memoryStore.has(key)) {\n      current.resetTime = resetTime;\n    }\n\n    this.memoryStore.set(key, current);\n\n    return {\n      allowed: current.count <= limit,\n      count: current.count,\n      resetTime: current.resetTime,\n    };\n  }\n\n  async disconnect(): Promise<void> {\n    if (this.redis) {\n      await this.redis.disconnect();\n    }\n  }\n}\n\n// Export singleton instance\nexport const rateLimiter = new RateLimiter();\nexport { RateLimitOptions, RateLimitResult };\n"],"version":3}