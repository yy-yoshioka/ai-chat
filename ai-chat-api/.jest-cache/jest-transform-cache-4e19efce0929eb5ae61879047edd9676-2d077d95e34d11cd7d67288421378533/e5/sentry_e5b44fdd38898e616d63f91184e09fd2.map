{"version":3,"names":["Sentry","cov_1m7dpwhfuj","s","__importStar","require","profiling_node_1","MetricsCollector","constructor","f","responseTimeBuffer","errorCount","requestCount","windowStartTime","Date","now","WINDOW_SIZE_MS","BUFFER_SIZE","getInstance","instance","b","recordResponseTime","responseTime","push","length","shift","checkWindowReset","recordError","checkAlertConditions","resetWindow","p95ResponseTime","calculateP95","errorRate","sendSlackAlert","timestamp","sorted","sort","a","index","Math","ceil","metrics","webhookUrl","process","env","SLACK_WEBHOOK_URL","console","warn","message","text","blocks","type","fields","toFixed","toISOString","NODE_ENV","elements","url","SENTRY_ORG","SENTRY_PROJECT","action_id","response","fetch","method","headers","body","JSON","stringify","ok","Error","status","log","error","captureException","getMetrics","initSentry","SENTRY_DSN","init","dsn","environment","integrations","nodeProfilingIntegration","httpIntegration","breadcrumbs","expressIntegration","mongooseIntegration","prismaIntegration","tracesSampleRate","profilesSampleRate","beforeSend","event","level","exports","metricsCollector"],"sources":["/Users/yusukeyoshioka/projects/youtube/ai-chat/ai-chat-api/src/lib/sentry.ts"],"sourcesContent":["import * as Sentry from '@sentry/node';\nimport { nodeProfilingIntegration } from '@sentry/profiling-node';\n\nexport interface AlertMetrics {\n  responseTime: number;\n  errorRate: number;\n  timestamp: Date;\n}\n\nclass MetricsCollector {\n  private static instance: MetricsCollector;\n  private responseTimeBuffer: number[] = [];\n  private errorCount = 0;\n  private requestCount = 0;\n  private windowStartTime = Date.now();\n  private readonly WINDOW_SIZE_MS = 60000; // 1 minute\n  private readonly BUFFER_SIZE = 100;\n\n  static getInstance(): MetricsCollector {\n    if (!MetricsCollector.instance) {\n      MetricsCollector.instance = new MetricsCollector();\n    }\n    return MetricsCollector.instance;\n  }\n\n  recordResponseTime(responseTime: number) {\n    this.responseTimeBuffer.push(responseTime);\n    if (this.responseTimeBuffer.length > this.BUFFER_SIZE) {\n      this.responseTimeBuffer.shift();\n    }\n    this.requestCount++;\n    this.checkWindowReset();\n  }\n\n  recordError() {\n    this.errorCount++;\n    this.checkWindowReset();\n  }\n\n  private checkWindowReset() {\n    const now = Date.now();\n    if (now - this.windowStartTime >= this.WINDOW_SIZE_MS) {\n      this.checkAlertConditions();\n      this.resetWindow();\n    }\n  }\n\n  private resetWindow() {\n    this.errorCount = 0;\n    this.requestCount = 0;\n    this.windowStartTime = Date.now();\n  }\n\n  private checkAlertConditions() {\n    const p95ResponseTime = this.calculateP95();\n    const errorRate =\n      this.requestCount > 0 ? (this.errorCount / this.requestCount) * 100 : 0;\n\n    if (p95ResponseTime > 1000 || errorRate > 1) {\n      this.sendSlackAlert({\n        responseTime: p95ResponseTime,\n        errorRate,\n        timestamp: new Date(),\n      });\n    }\n  }\n\n  private calculateP95(): number {\n    if (this.responseTimeBuffer.length === 0) return 0;\n\n    const sorted = [...this.responseTimeBuffer].sort((a, b) => a - b);\n    const index = Math.ceil(sorted.length * 0.95) - 1;\n    return sorted[index] || 0;\n  }\n\n  private async sendSlackAlert(metrics: AlertMetrics) {\n    const webhookUrl = process.env.SLACK_WEBHOOK_URL;\n    if (!webhookUrl) {\n      console.warn('SLACK_WEBHOOK_URL not configured');\n      return;\n    }\n\n    const message = {\n      text: '🚨 Performance Alert',\n      blocks: [\n        {\n          type: 'section',\n          text: {\n            type: 'mrkdwn',\n            text: '*🚨 AI Chat Performance Alert*',\n          },\n        },\n        {\n          type: 'section',\n          fields: [\n            {\n              type: 'mrkdwn',\n              text: `*P95 Response Time:*\\n${metrics.responseTime.toFixed(2)}ms`,\n            },\n            {\n              type: 'mrkdwn',\n              text: `*Error Rate:*\\n${metrics.errorRate.toFixed(2)}%`,\n            },\n            {\n              type: 'mrkdwn',\n              text: `*Timestamp:*\\n${metrics.timestamp.toISOString()}`,\n            },\n            {\n              type: 'mrkdwn',\n              text: `*Environment:*\\n${process.env.NODE_ENV || 'unknown'}`,\n            },\n          ],\n        },\n        {\n          type: 'section',\n          text: {\n            type: 'mrkdwn',\n            text:\n              metrics.responseTime > 1000\n                ? '⚠️ P95 response time exceeded 1 second threshold'\n                : '⚠️ Error rate exceeded 1% threshold',\n          },\n        },\n        {\n          type: 'actions',\n          elements: [\n            {\n              type: 'button',\n              text: {\n                type: 'plain_text',\n                text: 'View Sentry Dashboard',\n              },\n              url: `https://sentry.io/organizations/${process.env.SENTRY_ORG}/projects/${process.env.SENTRY_PROJECT}/`,\n              action_id: 'view_sentry',\n            },\n          ],\n        },\n      ],\n    };\n\n    try {\n      const response = await fetch(webhookUrl, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(message),\n      });\n\n      if (!response.ok) {\n        throw new Error(`Slack API error: ${response.status}`);\n      }\n\n      console.log('Slack alert sent successfully');\n    } catch (error) {\n      console.error('Failed to send Slack alert:', error);\n      Sentry.captureException(error);\n    }\n  }\n\n  getMetrics(): AlertMetrics {\n    return {\n      responseTime: this.calculateP95(),\n      errorRate:\n        this.requestCount > 0 ? (this.errorCount / this.requestCount) * 100 : 0,\n      timestamp: new Date(),\n    };\n  }\n}\n\nexport function initSentry() {\n  if (!process.env.SENTRY_DSN) {\n    console.warn('SENTRY_DSN not configured, skipping Sentry initialization');\n    return;\n  }\n\n  Sentry.init({\n    dsn: process.env.SENTRY_DSN,\n    environment: process.env.NODE_ENV || 'development',\n    integrations: [\n      nodeProfilingIntegration(),\n      Sentry.httpIntegration({ breadcrumbs: true }),\n      Sentry.expressIntegration(),\n      Sentry.mongooseIntegration(),\n      Sentry.prismaIntegration(),\n    ],\n    tracesSampleRate: process.env.NODE_ENV === 'production' ? 0.1 : 1.0,\n    profilesSampleRate: process.env.NODE_ENV === 'production' ? 0.1 : 1.0,\n    beforeSend(event) {\n      // Don't send events for handled errors in development\n      if (process.env.NODE_ENV === 'development' && event.level === 'error') {\n        console.error('Sentry event (dev):', event);\n        return null;\n      }\n      return event;\n    },\n  });\n\n  console.log('Sentry initialized');\n}\n\nexport const metricsCollector = MetricsCollector.getInstance();\n"],"mappingscAAA,GAAAC,CAAA,QAAAC,YAAA,CAAAC,OAAA;AACA,MAAAC,gBAAA;AAAA;AAAA,CAAAJ,cAAA,GAAAC,CAAA,QAAAE,OAAA;AAQA,MAAME,gBAAgB;EAAtBC,YAAA;IAAA;IAAAN,cAAA,GAAAO,CAAA;IAAAP,cAAA,GAAAC,CAAA;IAEU,KAAAO,kBAAkB,GAAa,EAAE;IAAC;IAAAR,cAAA,GAAAC,CAAA;IAClC,KAAAQ,UAAU,GAAG,CAAC;IAAC;IAAAT,cAAA,GAAAC,CAAA;IACf,KAAAS,YAAY,GAAG,CAAC;IAAC;IAAAV,cAAA,GAAAC,CAAA;IACjB,KAAAU,eAAe,GAAGC,IAAI,CAACC,GAAG,EAAE;IAAC;IAAAb,cAAA,GAAAC,CAAA;IACpB,KAAAa,cAAc,GAAG,KAAK,CAAC,CAAC;IAAA;IAAAd,cAAA,GAAAC,CAAA;IACxB,KAAAc,WAAW,GAAG,GAAG;EAwJpC;EAtJE,OAAOC,WAAWA,CAAA;IAAA;IAAAhB,cAAA,GAAAO,CAAA;IAAAP,cAAA,GAAAC,CAAA;IAChB,IAAI,CAACI,gBAAgB,CAACY,QAAQ,EAAE;MAAA;MAAAjB,cAAA,GAAAkB,CAAA;MAAAlB,cAAA,GAAAC,CAAA;MAC9BI,gBAAgB,CAACY,QAAQ,GAAG,IAAIZ,gBAAgB,EAAE;IACpD,CAAC;IAAA;IAAA;MAAAL,cAAA,GAAAkB,CAAA;IAAA;IAAAlB,cAAA,GAAAC,CAAA;IACD,OAAOI,gBAAgB,CAACY,QAAQ;EAClC;EAEAE,kBAAkBA,CAACC,YAAoB;IAAA;IAAApB,cAAA,GAAAO,CAAA;IAAAP,cAAA,GAAAC,CAAA;IACrC,IAAI,CAACO,kBAAkB,CAACa,IAAI,CAACD,YAAY,CAAC;IAAC;IAAApB,cAAA,GAAAC,CAAA;IAC3C,IAAI,IAAI,CAACO,kBAAkB,CAACc,MAAM,GAAG,IAAI,CAACP,WAAW,EAAE;MAAA;MAAAf,cAAA,GAAAkB,CAAA;MAAAlB,cAAA,GAAAC,CAAA;MACrD,IAAI,CAACO,kBAAkB,CAACe,KAAK,EAAE;IACjC,CAAC;IAAA;IAAA;MAAAvB,cAAA,GAAAkB,CAAA;IAAA;IAAAlB,cAAA,GAAAC,CAAA;IACD,IAAI,CAACS,YAAY,EAAE;IAAC;IAAAV,cAAA,GAAAC,CAAA;IACpB,IAAI,CAACuB,gBAAgB,EAAE;EACzB;EAEAC,WAAWA,CAAA;IAAA;IAAAzB,cAAA,GAAAO,CAAA;IAAAP,cAAA,GAAAC,CAAA;IACT,IAAI,CAACQ,UAAU,EAAE;IAAC;IAAAT,cAAA,GAAAC,CAAA;IAClB,IAAI,CAACuB,gBAAgB,EAAE;EACzB;EAEQA,gBAAgBA,CAAA;IAAA;IAAAxB,cAAA,GAAAO,CAAA;IACtB,MAAMM,GAAG;IAAA;IAAA,CAAAb,cAAA,GAAAC,CAAA,QAAGW,IAAI,CAACC,GAAG,EAAE;IAAC;IAAAb,cAAA,GAAAC,CAAA;IACvB,IAAIY,GAAG,GAAG,IAAI,CAACF,eAAe,IAAI,IAAI,CAACG,cAAc,EAAE;MAAA;MAAAd,cAAA,GAAAkB,CAAA;MAAAlB,cAAA,GAAAC,CAAA;MACrD,IAAI,CAACyB,oBAAoB,EAAE;MAAC;MAAA1B,cAAA,GAAAC,CAAA;MAC5B,IAAI,CAAC0B,WAAW,EAAE;IACpB,CAAC;IAAA;IAAA;MAAA3B,cAAA,GAAAkB,CAAA;IAAA;EACH;EAEQS,WAAWA,CAAA;IAAA;IAAA3B,cAAA,GAAAO,CAAA;IAAAP,cAAA,GAAAC,CAAA;IACjB,IAAI,CAACQ,UAAU,GAAG,CAAC;IAAC;IAAAT,cAAA,GAAAC,CAAA;IACpB,IAAI,CAACS,YAAY,GAAG,CAAC;IAAC;IAAAV,cAAA,GAAAC,CAAA;IACtB,IAAI,CAACU,eAAe,GAAGC,IAAI,CAACC,GAAG,EAAE;EACnC;EAEQa,oBAAoBA,CAAA;IAAA;IAAA1B,cAAA,GAAAO,CAAA;IAC1B,MAAMqB,eAAe;IAAA;IAAA,CAAA5B,cAAA,GAAAC,CAAA,QAAG,IAAI,CAAC4B,YAAY,EAAE;IAC3C,MAAMC,SAAS;IAAA;IAAA,CAAA9B,cAAA,GAAAC,CAAA,QACb,IAAI,CAACS,YAAY,GAAG,CAAC;IAAA;IAAA,CAAAV,cAAA,GAAAkB,CAAA,WAAI,IAAI,CAACT,UAAU,GAAG,IAAI,CAACC,YAAY,GAAI,GAAG;IAAA;IAAA,CAAAV,cAAA,GAAAkB,CAAA,WAAG,CAAC;IAAC;IAAAlB,cAAA,GAAAC,CAAA;IAE1E;IAAI;IAAA,CAAAD,cAAA,GAAAkB,CAAA,WAAAU,eAAe,GAAG,IAAI;IAAA;IAAA,CAAA5B,cAAA,GAAAkB,CAAA,WAAIY,SAAS,GAAG,CAAC,GAAE;MAAA;MAAA9B,cAAA,GAAAkB,CAAA;MAAAlB,cAAA,GAAAC,CAAA;MAC3C,IAAI,CAAC8B,cAAc,CAAC;QAClBX,YAAY,EAAEQ,eAAe;QAC7BE,SAAS;QACTE,SAAS,EAAE,IAAIpB,IAAI;OACpB,CAAC;IACJ,CAAC;IAAA;IAAA;MAAAZ,cAAA,GAAAkB,CAAA;IAAA;EACH;EAEQW,YAAYA,CAAA;IAAA;IAAA7B,cAAA,GAAAO,CAAA;IAAAP,cAAA,GAAAC,CAAA;IAClB,IAAI,IAAI,CAACO,kBAAkB,CAACc,MAAM,KAAK,CAAC,EAAE;MAAA;MAAAtB,cAAA,GAAAkB,CAAA;MAAAlB,cAAA,GAAAC,CAAA;MAAA,OAAO,CAAC;IAAA,CAAC;IAAA;IAAA;MAAAD,cAAA,GAAAkB,CAAA;IAAA;IAEnD,MAAMe,MAAM;IAAA;IAAA,CAAAjC,cAAA,GAAAC,CAAA,QAAG,CAAC,GAAG,IAAI,CAACO,kBAAkB,CAAC,CAAC0B,IAAI,CAAC,CAACC,CAAC,EAAEjB,CAAC,KAAK;MAAA;MAAAlB,cAAA,GAAAO,CAAA;MAAAP,cAAA,GAAAC,CAAA;MAAA,OAAAkC,CAAC,GAAGjB,CAAC;IAAD,CAAC,CAAC;IACjE,MAAMkB,KAAK;IAAA;IAAA,CAAApC,cAAA,GAAAC,CAAA,QAAGoC,IAAI,CAACC,IAAI,CAACL,MAAM,CAACX,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC;IAAC;IAAAtB,cAAA,GAAAC,CAAA;IAClD,OAAO,2BAAAD,cAAA,GAAAkB,CAAA,WAAAe,MAAM,CAACG,KAAK,CAAC;IAAA;IAAA,CAAApC,cAAA,GAAAkB,CAAA,WAAI,CAAC;EAC3B;EAEca,cAAcA,CAACQ,OAAqB;IAAA;IAAAvC,cAAA,GAAAO,CAAA;IAAAP,cAAA,GAAAC,CAAA;;;;MAChD,MAAMuC,UAAU;MAAA;MAAA,CAAAxC,cAAA,GAAAC,CAAA,QAAGwC,OAAO,CAACC,GAAG,CAACC,iBAAiB;MAAC;MAAA3C,cAAA,GAAAC,CAAA;MACjD,IAAI,CAACuC,UAAU,EAAE;QAAA;QAAAxC,cAAA,GAAAkB,CAAA;QAAAlB,cAAA,GAAAC,CAAA;QACf2C,OAAO,CAACC,IAAI,CAAC,kCAAkC,CAAC;QAAC;QAAA7C,cAAA,GAAAC,CAAA;QACjD;MACF,CAAC;MAAA;MAAA;QAAAD,cAAA,GAAAkB,CAAA;MAAA;MAED,MAAM4B,OAAO;MAAA;MAAA,CAAA9C,cAAA,GAAAC,CAAA,QAAG;QACd8C,IAAI,EAAE,sBAAsB;QAC5BC,MAAM,EAAE,CACN;UACEC,IAAI,EAAE,SAAS;UACfF,IAAI,EAAE;YACJE,IAAI,EAAE,QAAQ;YACdF,IAAI,EAAE;;SAET,EACD;UACEE,IAAI,EAAE,SAAS;UACfC,MAAM,EAAE,CACN;YACED,IAAI,EAAE,QAAQ;YACdF,IAAI,EAAE,yBAAyBR,OAAO,CAACnB,YAAY,CAAC+B,OAAO,CAAC,CAAC,CAAC;WAC/D,EACD;YACEF,IAAI,EAAE,QAAQ;YACdF,IAAI,EAAE,kBAAkBR,OAAO,CAACT,SAAS,CAACqB,OAAO,CAAC,CAAC,CAAC;WACrD,EACD;YACEF,IAAI,EAAE,QAAQ;YACdF,IAAI,EAAE,iBAAiBR,OAAO,CAACP,SAAS,CAACoB,WAAW,EAAE;WACvD,EACD;YACEH,IAAI,EAAE,QAAQ;YACdF,IAAI,EAAE;YAAmB;YAAA,CAAA/C,cAAA,GAAAkB,CAAA,WAAAuB,OAAO,CAACC,GAAG,CAACW,QAAQ;YAAA;YAAA,CAAArD,cAAA,GAAAkB,CAAA,WAAI,SAAS;WAC3D;SAEJ,EACD;UACE+B,IAAI,EAAE,SAAS;UACfF,IAAI,EAAE;YACJE,IAAI,EAAE,QAAQ;YACdF,IAAI,EACFR,OAAO,CAACnB,YAAY,GAAG,IAAI;YAAA;YAAA,CAAApB,cAAA,GAAAkB,CAAA,WACvB,kDAAkD;YAAA;YAAA,CAAAlB,cAAA,GAAAkB,CAAA,WAClD,qCAAqC;;SAE9C,EACD;UACE+B,IAAI,EAAE,SAAS;UACfK,QAAQ,EAAE,CACR;YACEL,IAAI,EAAE,QAAQ;YACdF,IAAI,EAAE;cACJE,IAAI,EAAE,YAAY;cAClBF,IAAI,EAAE;aACP;YACDQ,GAAG,EAAE,mCAAmCd,OAAO,CAACC,GAAG,CAACc,UAAU,aAAaf,OAAO,CAACC,GAAG,CAACe,cAAc,GAAG;YACxGC,SAAS,EAAE;WACZ;SAEJ;OAEJ;MAAC;MAAA1D,cAAA,GAAAC,CAAA;MAEF,IAAI;QACF,MAAM0D,QAAQ;QAAA;QAAA,CAAA3D,cAAA,GAAAC,CAAA,QAAG,MAAM2D,KAAK,CAACpB,UAAU,EAAE;UACvCqB,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YACP,cAAc,EAAE;WACjB;UACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACnB,OAAO;SAC7B,CAAC;QAAC;QAAA9C,cAAA,GAAAC,CAAA;QAEH,IAAI,CAAC0D,QAAQ,CAACO,EAAE,EAAE;UAAA;UAAAlE,cAAA,GAAAkB,CAAA;UAAAlB,cAAA,GAAAC,CAAA;UAChB,MAAM,IAAIkE,KAAK,CAAC,oBAAoBR,QAAQ,CAACS,MAAM,EAAE,CAAC;QACxD,CAAC;QAAA;QAAA;UAAApE,cAAA,GAAAkB,CAAA;QAAA;QAAAlB,cAAA,GAAAC,CAAA;QAED2C,OAAO,CAACyB,GAAG,CAAC,+BAA+B,CAAC;MAC9C,CAAC,CAAC,OAAOC,KAAK,EAAE;QAAA;QAAAtE,cAAA,GAAAC,CAAA;QACd2C,OAAO,CAAC0B,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;QAAC;QAAAtE,cAAA,GAAAC,CAAA;QACpDF,MAAM,CAACwE,gBAAgB,CAACD,KAAK,CAAC;MAChC;IACF,CAAC;;EAEDE,UAAUA,CAAA;IAAA;IAAAxE,cAAA,GAAAO,CAAA;IAAAP,cAAA,GAAAC,CAAA;IACR,OAAO;MACLmB,YAAY,EAAE,IAAI,CAACS,YAAY,EAAE;MACjCC,SAAS,EACP,IAAI,CAACpB,YAAY,GAAG,CAAC;MAAA;MAAA,CAAAV,cAAA,GAAAkB,CAAA,WAAI,IAAI,CAACT,UAAU,GAAG,IAAI,CAACC,YAAY,GAAI,GAAG;MAAA;MAAA,CAAAV,cAAA,GAAAkB,CAAA,WAAG,CAAC;MACzEc,SAAS,EAAE,IAAIpB,IAAI;KACpB;EACH;;AAGF,SAAgB6D,UAAUA,CAAA;EAAA;EAAAzE,cAAA,GAAAO,CAAA;EAAAP,cAAA,GAAAC,CAAA;EACxB,IAAI,CAACwC,OAAO,CAACC,GAAG,CAACgC,UAAU,EAAE;IAAA;IAAA1E,cAAA,GAAAkB,CAAA;IAAAlB,cAAA,GAAAC,CAAA;IAC3B2C,OAAO,CAACC,IAAI,CAAC,2DAA2D,CAAC;IAAC;IAAA7C,cAAA,GAAAC,CAAA;IAC1E;EACF,CAAC;EAAA;EAAA;IAAAD,cAAA,GAAAkB,CAAA;EAAA;EAAAlB,cAAA,GAAAC,CAAA;EAEDF,MAAM,CAAC4E,IAAI,CAAC;IACVC,GAAG,EAAEnC,OAAO,CAACC,GAAG,CAACgC,UAAU;IAC3BG,WAAW;IAAE;IAAA,CAAA7E,cAAA,GAAAkB,CAAA,WAAAuB,OAAO,CAACC,GAAG,CAACW,QAAQ;IAAA;IAAA,CAAArD,cAAA,GAAAkB,CAAA,WAAI,aAAa;IAClD4D,YAAY,EAAE,CACZ,IAAA1E,gBAAA,CAAA2E,wBAAwB,GAAE,EAC1BhF,MAAM,CAACiF,eAAe,CAAC;MAAEC,WAAW,EAAE;IAAI,CAAE,CAAC,EAC7ClF,MAAM,CAACmF,kBAAkB,EAAE,EAC3BnF,MAAM,CAACoF,mBAAmB,EAAE,EAC5BpF,MAAM,CAACqF,iBAAiB,EAAE,CAC3B;IACDC,gBAAgB,EAAE5C,OAAO,CAACC,GAAG,CAACW,QAAQ,KAAK,YAAY;IAAA;IAAA,CAAArD,cAAA,GAAAkB,CAAA,WAAG,GAAG;IAAA;IAAA,CAAAlB,cAAA,GAAAkB,CAAA,WAAG,GAAG;IACnEoE,kBAAkB,EAAE7C,OAAO,CAACC,GAAG,CAACW,QAAQ,KAAK,YAAY;IAAA;IAAA,CAAArD,cAAA,GAAAkB,CAAA,WAAG,GAAG;IAAA;IAAA,CAAAlB,cAAA,GAAAkB,CAAA,WAAG,GAAG;IACrEqE,UAAUA,CAACC,KAAK;MAAA;MAAAxF,cAAA,GAAAO,CAAA;MAAAP,cAAA,GAAAC,CAAA;MACd;MACA;MAAI;MAAA,CAAAD,cAAA,GAAAkB,CAAA,WAAAuB,OAAO,CAACC,GAAG,CAACW,QAAQ,KAAK,aAAa;MAAA;MAAA,CAAArD,cAAA,GAAAkB,CAAA,WAAIsE,KAAK,CAACC,KAAK,KAAK,OAAO,GAAE;QAAA;QAAAzF,cAAA,GAAAkB,CAAA;QAAAlB,cAAA,GAAAC,CAAA;QACrE2C,OAAO,CAAC0B,KAAK,CAAC,qBAAqB,EAAEkB,KAAK,CAAC;QAAC;QAAAxF,cAAA,GAAAC,CAAA;QAC5C,OAAO,IAAI;MACb,CAAC;MAAA;MAAA;QAAAD,cAAA,GAAAkB,CAAA;MAAA;MAAAlB,cAAA,GAAAC,CAAA;MACD,OAAOuF,KAAK;IACd;GACD,CAAC;EAAC;EAAAxF,cAAA,GAAAC,CAAA;EAEH2C,OAAO,CAACyB,GAAG,CAAC,oBAAoB,CAAC;AACnC;AAAC;AAAArE,cAAA,GAAAC,CAAA;AA7BDyF,OAAA,CAAAjB,UAAA,GAAAA,UAAA;AA6BC;AAAAzE,cAAA,GAAAC,CAAA;AAEYyF,OAAA,CAAAC,gBAAgB,GAAGtF,gBAAgB,CAACW,WAAW,EAAE","ignoreList":[]}