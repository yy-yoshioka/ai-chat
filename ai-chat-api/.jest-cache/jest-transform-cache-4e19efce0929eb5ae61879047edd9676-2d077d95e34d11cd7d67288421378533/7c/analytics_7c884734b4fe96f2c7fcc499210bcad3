bc1db0ab9faebdaa904cd83e51dba15a
"use strict";

/* istanbul ignore next */
function cov_y3p1hgsb9() {
  var path = "/Users/yusukeyoshioka/projects/youtube/ai-chat/ai-chat-api/src/lib/analytics.ts";
  var hash = "5197459387417c5ae19241b5560ac6e79750802e";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/yusukeyoshioka/projects/youtube/ai-chat/ai-chat-api/src/lib/analytics.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 16
        },
        end: {
          line: 10,
          column: 1
        }
      },
      "1": {
        start: {
          line: 3,
          column: 28
        },
        end: {
          line: 3,
          column: 110
        }
      },
      "2": {
        start: {
          line: 3,
          column: 91
        },
        end: {
          line: 3,
          column: 106
        }
      },
      "3": {
        start: {
          line: 4,
          column: 4
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "4": {
        start: {
          line: 5,
          column: 36
        },
        end: {
          line: 5,
          column: 97
        }
      },
      "5": {
        start: {
          line: 5,
          column: 42
        },
        end: {
          line: 5,
          column: 70
        }
      },
      "6": {
        start: {
          line: 5,
          column: 85
        },
        end: {
          line: 5,
          column: 95
        }
      },
      "7": {
        start: {
          line: 6,
          column: 35
        },
        end: {
          line: 6,
          column: 100
        }
      },
      "8": {
        start: {
          line: 6,
          column: 41
        },
        end: {
          line: 6,
          column: 73
        }
      },
      "9": {
        start: {
          line: 6,
          column: 88
        },
        end: {
          line: 6,
          column: 98
        }
      },
      "10": {
        start: {
          line: 7,
          column: 32
        },
        end: {
          line: 7,
          column: 116
        }
      },
      "11": {
        start: {
          line: 8,
          column: 8
        },
        end: {
          line: 8,
          column: 78
        }
      },
      "12": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 11,
          column: 62
        }
      },
      "13": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 12,
          column: 203
        }
      },
      "14": {
        start: {
          line: 13,
          column: 17
        },
        end: {
          line: 13,
          column: 36
        }
      },
      "15": {
        start: {
          line: 19,
          column: 4
        },
        end: {
          line: 42,
          column: 7
        }
      },
      "16": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 41,
          column: 9
        }
      },
      "17": {
        start: {
          line: 21,
          column: 12
        },
        end: {
          line: 36,
          column: 15
        }
      },
      "18": {
        start: {
          line: 39,
          column: 12
        },
        end: {
          line: 39,
          column: 59
        }
      },
      "19": {
        start: {
          line: 44,
          column: 0
        },
        end: {
          line: 44,
          column: 32
        }
      },
      "20": {
        start: {
          line: 49,
          column: 4
        },
        end: {
          line: 54,
          column: 6
        }
      },
      "21": {
        start: {
          line: 56,
          column: 0
        },
        end: {
          line: 56,
          column: 42
        }
      },
      "22": {
        start: {
          line: 61,
          column: 22
        },
        end: {
          line: 61,
          column: 49
        }
      },
      "23": {
        start: {
          line: 62,
          column: 15
        },
        end: {
          line: 62,
          column: 59
        }
      },
      "24": {
        start: {
          line: 63,
          column: 22
        },
        end: {
          line: 63,
          column: 63
        }
      },
      "25": {
        start: {
          line: 64,
          column: 4
        },
        end: {
          line: 66,
          column: 22
        }
      },
      "26": {
        start: {
          line: 68,
          column: 0
        },
        end: {
          line: 68,
          column: 46
        }
      },
      "27": {
        start: {
          line: 72,
          column: 0
        },
        end: {
          line: 92,
          column: 2
        }
      },
      "28": {
        start: {
          line: 97,
          column: 4
        },
        end: {
          line: 101,
          column: 7
        }
      },
      "29": {
        start: {
          line: 98,
          column: 8
        },
        end: {
          line: 100,
          column: 18
        }
      },
      "30": {
        start: {
          line: 103,
          column: 0
        },
        end: {
          line: 103,
          column: 38
        }
      },
      "31": {
        start: {
          line: 108,
          column: 4
        },
        end: {
          line: 113,
          column: 7
        }
      },
      "32": {
        start: {
          line: 109,
          column: 8
        },
        end: {
          line: 112,
          column: 18
        }
      },
      "33": {
        start: {
          line: 115,
          column: 0
        },
        end: {
          line: 115,
          column: 44
        }
      },
      "34": {
        start: {
          line: 120,
          column: 4
        },
        end: {
          line: 122,
          column: 7
        }
      },
      "35": {
        start: {
          line: 121,
          column: 8
        },
        end: {
          line: 121,
          column: 293
        }
      },
      "36": {
        start: {
          line: 124,
          column: 0
        },
        end: {
          line: 124,
          column: 42
        }
      },
      "37": {
        start: {
          line: 129,
          column: 4
        },
        end: {
          line: 246,
          column: 7
        }
      },
      "38": {
        start: {
          line: 130,
          column: 28
        },
        end: {
          line: 133,
          column: 82
        }
      },
      "39": {
        start: {
          line: 135,
          column: 28
        },
        end: {
          line: 135,
          column: 85
        }
      },
      "40": {
        start: {
          line: 137,
          column: 30
        },
        end: {
          line: 140,
          column: 10
        }
      },
      "41": {
        start: {
          line: 141,
          column: 35
        },
        end: {
          line: 144,
          column: 10
        }
      },
      "42": {
        start: {
          line: 145,
          column: 28
        },
        end: {
          line: 145,
          column: 76
        }
      },
      "43": {
        start: {
          line: 147,
          column: 35
        },
        end: {
          line: 150,
          column: 10
        }
      },
      "44": {
        start: {
          line: 151,
          column: 31
        },
        end: {
          line: 151,
          column: 56
        }
      },
      "45": {
        start: {
          line: 153,
          column: 33
        },
        end: {
          line: 157,
          column: 10
        }
      },
      "46": {
        start: {
          line: 158,
          column: 29
        },
        end: {
          line: 158,
          column: 31
        }
      },
      "47": {
        start: {
          line: 159,
          column: 8
        },
        end: {
          line: 161,
          column: 11
        }
      },
      "48": {
        start: {
          line: 160,
          column: 12
        },
        end: {
          line: 160,
          column: 58
        }
      },
      "49": {
        start: {
          line: 163,
          column: 23
        },
        end: {
          line: 171,
          column: 10
        }
      },
      "50": {
        start: {
          line: 172,
          column: 30
        },
        end: {
          line: 172,
          column: 39
        }
      },
      "51": {
        start: {
          line: 173,
          column: 8
        },
        end: {
          line: 189,
          column: 11
        }
      },
      "52": {
        start: {
          line: 174,
          column: 25
        },
        end: {
          line: 174,
          column: 68
        }
      },
      "53": {
        start: {
          line: 175,
          column: 12
        },
        end: {
          line: 181,
          column: 13
        }
      },
      "54": {
        start: {
          line: 176,
          column: 16
        },
        end: {
          line: 180,
          column: 19
        }
      },
      "55": {
        start: {
          line: 182,
          column: 29
        },
        end: {
          line: 182,
          column: 52
        }
      },
      "56": {
        start: {
          line: 183,
          column: 12
        },
        end: {
          line: 183,
          column: 63
        }
      },
      "57": {
        start: {
          line: 184,
          column: 27
        },
        end: {
          line: 184,
          column: 60
        }
      },
      "58": {
        start: {
          line: 185,
          column: 12
        },
        end: {
          line: 186,
          column: 43
        }
      },
      "59": {
        start: {
          line: 186,
          column: 16
        },
        end: {
          line: 186,
          column: 43
        }
      },
      "60": {
        start: {
          line: 187,
          column: 12
        },
        end: {
          line: 188,
          column: 55
        }
      },
      "61": {
        start: {
          line: 188,
          column: 16
        },
        end: {
          line: 188,
          column: 55
        }
      },
      "62": {
        start: {
          line: 190,
          column: 27
        },
        end: {
          line: 197,
          column: 57
        }
      },
      "63": {
        start: {
          line: 191,
          column: 37
        },
        end: {
          line: 196,
          column: 9
        }
      },
      "64": {
        start: {
          line: 197,
          column: 28
        },
        end: {
          line: 197,
          column: 56
        }
      },
      "65": {
        start: {
          line: 199,
          column: 29
        },
        end: {
          line: 205,
          column: 10
        }
      },
      "66": {
        start: {
          line: 206,
          column: 25
        },
        end: {
          line: 209,
          column: 11
        }
      },
      "67": {
        start: {
          line: 206,
          column: 53
        },
        end: {
          line: 209,
          column: 9
        }
      },
      "68": {
        start: {
          line: 211,
          column: 28
        },
        end: {
          line: 216,
          column: 9
        }
      },
      "69": {
        start: {
          line: 217,
          column: 33
        },
        end: {
          line: 217,
          column: 35
        }
      },
      "70": {
        start: {
          line: 218,
          column: 28
        },
        end: {
          line: 218,
          column: 29
        }
      },
      "71": {
        start: {
          line: 219,
          column: 8
        },
        end: {
          line: 236,
          column: 9
        }
      },
      "72": {
        start: {
          line: 220,
          column: 26
        },
        end: {
          line: 223,
          column: 14
        }
      },
      "73": {
        start: {
          line: 224,
          column: 30
        },
        end: {
          line: 224,
          column: 42
        }
      },
      "74": {
        start: {
          line: 225,
          column: 35
        },
        end: {
          line: 229,
          column: 23
        }
      },
      "75": {
        start: {
          line: 230,
          column: 12
        },
        end: {
          line: 234,
          column: 15
        }
      },
      "76": {
        start: {
          line: 235,
          column: 12
        },
        end: {
          line: 235,
          column: 38
        }
      },
      "77": {
        start: {
          line: 237,
          column: 8
        },
        end: {
          line: 245,
          column: 10
        }
      },
      "78": {
        start: {
          line: 248,
          column: 0
        },
        end: {
          line: 248,
          column: 36
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 44
          },
          end: {
            line: 2,
            column: 45
          }
        },
        loc: {
          start: {
            line: 2,
            column: 89
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "adopt",
        decl: {
          start: {
            line: 3,
            column: 13
          },
          end: {
            line: 3,
            column: 18
          }
        },
        loc: {
          start: {
            line: 3,
            column: 26
          },
          end: {
            line: 3,
            column: 112
          }
        },
        line: 3
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 3,
            column: 70
          },
          end: {
            line: 3,
            column: 71
          }
        },
        loc: {
          start: {
            line: 3,
            column: 89
          },
          end: {
            line: 3,
            column: 108
          }
        },
        line: 3
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 4,
            column: 36
          },
          end: {
            line: 4,
            column: 37
          }
        },
        loc: {
          start: {
            line: 4,
            column: 63
          },
          end: {
            line: 9,
            column: 5
          }
        },
        line: 4
      },
      "4": {
        name: "fulfilled",
        decl: {
          start: {
            line: 5,
            column: 17
          },
          end: {
            line: 5,
            column: 26
          }
        },
        loc: {
          start: {
            line: 5,
            column: 34
          },
          end: {
            line: 5,
            column: 99
          }
        },
        line: 5
      },
      "5": {
        name: "rejected",
        decl: {
          start: {
            line: 6,
            column: 17
          },
          end: {
            line: 6,
            column: 25
          }
        },
        loc: {
          start: {
            line: 6,
            column: 33
          },
          end: {
            line: 6,
            column: 102
          }
        },
        line: 6
      },
      "6": {
        name: "step",
        decl: {
          start: {
            line: 7,
            column: 17
          },
          end: {
            line: 7,
            column: 21
          }
        },
        loc: {
          start: {
            line: 7,
            column: 30
          },
          end: {
            line: 7,
            column: 118
          }
        },
        line: 7
      },
      "7": {
        name: "trackEvent",
        decl: {
          start: {
            line: 17,
            column: 9
          },
          end: {
            line: 17,
            column: 19
          }
        },
        loc: {
          start: {
            line: 17,
            column: 28
          },
          end: {
            line: 43,
            column: 1
          }
        },
        line: 17
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 19,
            column: 43
          },
          end: {
            line: 19,
            column: 44
          }
        },
        loc: {
          start: {
            line: 19,
            column: 56
          },
          end: {
            line: 42,
            column: 5
          }
        },
        line: 19
      },
      "9": {
        name: "getEventContext",
        decl: {
          start: {
            line: 48,
            column: 9
          },
          end: {
            line: 48,
            column: 24
          }
        },
        loc: {
          start: {
            line: 48,
            column: 30
          },
          end: {
            line: 55,
            column: 1
          }
        },
        line: 48
      },
      "10": {
        name: "generateSessionId",
        decl: {
          start: {
            line: 60,
            column: 9
          },
          end: {
            line: 60,
            column: 26
          }
        },
        loc: {
          start: {
            line: 60,
            column: 32
          },
          end: {
            line: 67,
            column: 1
          }
        },
        line: 60
      },
      "11": {
        name: "trackIdentify",
        decl: {
          start: {
            line: 96,
            column: 9
          },
          end: {
            line: 96,
            column: 22
          }
        },
        loc: {
          start: {
            line: 96,
            column: 31
          },
          end: {
            line: 102,
            column: 1
          }
        },
        line: 96
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 97,
            column: 43
          },
          end: {
            line: 97,
            column: 44
          }
        },
        loc: {
          start: {
            line: 97,
            column: 56
          },
          end: {
            line: 101,
            column: 5
          }
        },
        line: 97
      },
      "13": {
        name: "trackMessageSent",
        decl: {
          start: {
            line: 107,
            column: 9
          },
          end: {
            line: 107,
            column: 25
          }
        },
        loc: {
          start: {
            line: 107,
            column: 34
          },
          end: {
            line: 114,
            column: 1
          }
        },
        line: 107
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 108,
            column: 43
          },
          end: {
            line: 108,
            column: 44
          }
        },
        loc: {
          start: {
            line: 108,
            column: 56
          },
          end: {
            line: 113,
            column: 5
          }
        },
        line: 108
      },
      "15": {
        name: "trackConversion",
        decl: {
          start: {
            line: 119,
            column: 9
          },
          end: {
            line: 119,
            column: 24
          }
        },
        loc: {
          start: {
            line: 119,
            column: 33
          },
          end: {
            line: 123,
            column: 1
          }
        },
        line: 119
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 120,
            column: 43
          },
          end: {
            line: 120,
            column: 44
          }
        },
        loc: {
          start: {
            line: 120,
            column: 56
          },
          end: {
            line: 122,
            column: 5
          }
        },
        line: 120
      },
      "17": {
        name: "getAnalytics",
        decl: {
          start: {
            line: 128,
            column: 9
          },
          end: {
            line: 128,
            column: 21
          }
        },
        loc: {
          start: {
            line: 128,
            column: 30
          },
          end: {
            line: 247,
            column: 1
          }
        },
        line: 128
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 129,
            column: 43
          },
          end: {
            line: 129,
            column: 44
          }
        },
        loc: {
          start: {
            line: 129,
            column: 56
          },
          end: {
            line: 246,
            column: 5
          }
        },
        line: 129
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 159,
            column: 33
          },
          end: {
            line: 159,
            column: 34
          }
        },
        loc: {
          start: {
            line: 159,
            column: 43
          },
          end: {
            line: 161,
            column: 9
          }
        },
        line: 159
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 173,
            column: 23
          },
          end: {
            line: 173,
            column: 24
          }
        },
        loc: {
          start: {
            line: 173,
            column: 34
          },
          end: {
            line: 189,
            column: 9
          }
        },
        line: 173
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 191,
            column: 17
          },
          end: {
            line: 191,
            column: 18
          }
        },
        loc: {
          start: {
            line: 191,
            column: 37
          },
          end: {
            line: 196,
            column: 9
          }
        },
        line: 191
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 197,
            column: 18
          },
          end: {
            line: 197,
            column: 19
          }
        },
        loc: {
          start: {
            line: 197,
            column: 28
          },
          end: {
            line: 197,
            column: 56
          }
        },
        line: 197
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 206,
            column: 42
          },
          end: {
            line: 206,
            column: 43
          }
        },
        loc: {
          start: {
            line: 206,
            column: 53
          },
          end: {
            line: 209,
            column: 9
          }
        },
        line: 206
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 16
          },
          end: {
            line: 10,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 17
          },
          end: {
            line: 2,
            column: 21
          }
        }, {
          start: {
            line: 2,
            column: 25
          },
          end: {
            line: 2,
            column: 39
          }
        }, {
          start: {
            line: 2,
            column: 44
          },
          end: {
            line: 10,
            column: 1
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 3,
            column: 35
          },
          end: {
            line: 3,
            column: 109
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 3,
            column: 56
          },
          end: {
            line: 3,
            column: 61
          }
        }, {
          start: {
            line: 3,
            column: 64
          },
          end: {
            line: 3,
            column: 109
          }
        }],
        line: 3
      },
      "2": {
        loc: {
          start: {
            line: 4,
            column: 16
          },
          end: {
            line: 4,
            column: 34
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 4,
            column: 16
          },
          end: {
            line: 4,
            column: 17
          }
        }, {
          start: {
            line: 4,
            column: 22
          },
          end: {
            line: 4,
            column: 33
          }
        }],
        line: 4
      },
      "3": {
        loc: {
          start: {
            line: 7,
            column: 32
          },
          end: {
            line: 7,
            column: 115
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 7,
            column: 46
          },
          end: {
            line: 7,
            column: 67
          }
        }, {
          start: {
            line: 7,
            column: 70
          },
          end: {
            line: 7,
            column: 115
          }
        }],
        line: 7
      },
      "4": {
        loc: {
          start: {
            line: 8,
            column: 51
          },
          end: {
            line: 8,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 8,
            column: 51
          },
          end: {
            line: 8,
            column: 61
          }
        }, {
          start: {
            line: 8,
            column: 65
          },
          end: {
            line: 8,
            column: 67
          }
        }],
        line: 8
      },
      "5": {
        loc: {
          start: {
            line: 30,
            column: 32
          },
          end: {
            line: 30,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 30,
            column: 32
          },
          end: {
            line: 30,
            column: 49
          }
        }, {
          start: {
            line: 30,
            column: 53
          },
          end: {
            line: 30,
            column: 55
          }
        }],
        line: 30
      },
      "6": {
        loc: {
          start: {
            line: 31,
            column: 31
          },
          end: {
            line: 31,
            column: 102
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 31,
            column: 81
          },
          end: {
            line: 31,
            column: 87
          }
        }, {
          start: {
            line: 31,
            column: 90
          },
          end: {
            line: 31,
            column: 102
          }
        }],
        line: 31
      },
      "7": {
        loc: {
          start: {
            line: 31,
            column: 31
          },
          end: {
            line: 31,
            column: 78
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 31,
            column: 31
          },
          end: {
            line: 31,
            column: 61
          }
        }, {
          start: {
            line: 31,
            column: 65
          },
          end: {
            line: 31,
            column: 78
          }
        }],
        line: 31
      },
      "8": {
        loc: {
          start: {
            line: 32,
            column: 31
          },
          end: {
            line: 32,
            column: 102
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 32,
            column: 81
          },
          end: {
            line: 32,
            column: 87
          }
        }, {
          start: {
            line: 32,
            column: 90
          },
          end: {
            line: 32,
            column: 102
          }
        }],
        line: 32
      },
      "9": {
        loc: {
          start: {
            line: 32,
            column: 31
          },
          end: {
            line: 32,
            column: 78
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 32,
            column: 31
          },
          end: {
            line: 32,
            column: 61
          }
        }, {
          start: {
            line: 32,
            column: 65
          },
          end: {
            line: 32,
            column: 78
          }
        }],
        line: 32
      },
      "10": {
        loc: {
          start: {
            line: 33,
            column: 30
          },
          end: {
            line: 33,
            column: 100
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 33,
            column: 80
          },
          end: {
            line: 33,
            column: 86
          }
        }, {
          start: {
            line: 33,
            column: 89
          },
          end: {
            line: 33,
            column: 100
          }
        }],
        line: 33
      },
      "11": {
        loc: {
          start: {
            line: 33,
            column: 30
          },
          end: {
            line: 33,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 33,
            column: 30
          },
          end: {
            line: 33,
            column: 60
          }
        }, {
          start: {
            line: 33,
            column: 64
          },
          end: {
            line: 33,
            column: 77
          }
        }],
        line: 33
      },
      "12": {
        loc: {
          start: {
            line: 34,
            column: 29
          },
          end: {
            line: 34,
            column: 98
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 34,
            column: 79
          },
          end: {
            line: 34,
            column: 85
          }
        }, {
          start: {
            line: 34,
            column: 88
          },
          end: {
            line: 34,
            column: 98
          }
        }],
        line: 34
      },
      "13": {
        loc: {
          start: {
            line: 34,
            column: 29
          },
          end: {
            line: 34,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 34,
            column: 29
          },
          end: {
            line: 34,
            column: 59
          }
        }, {
          start: {
            line: 34,
            column: 63
          },
          end: {
            line: 34,
            column: 76
          }
        }],
        line: 34
      },
      "14": {
        loc: {
          start: {
            line: 51,
            column: 19
          },
          end: {
            line: 51,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 51,
            column: 19
          },
          end: {
            line: 51,
            column: 25
          }
        }, {
          start: {
            line: 51,
            column: 29
          },
          end: {
            line: 51,
            column: 57
          }
        }],
        line: 51
      },
      "15": {
        loc: {
          start: {
            line: 61,
            column: 22
          },
          end: {
            line: 61,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 61,
            column: 22
          },
          end: {
            line: 61,
            column: 43
          }
        }, {
          start: {
            line: 61,
            column: 47
          },
          end: {
            line: 61,
            column: 49
          }
        }],
        line: 61
      },
      "16": {
        loc: {
          start: {
            line: 62,
            column: 15
          },
          end: {
            line: 62,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 62,
            column: 15
          },
          end: {
            line: 62,
            column: 21
          }
        }, {
          start: {
            line: 62,
            column: 25
          },
          end: {
            line: 62,
            column: 53
          }
        }, {
          start: {
            line: 62,
            column: 57
          },
          end: {
            line: 62,
            column: 59
          }
        }],
        line: 62
      },
      "17": {
        loc: {
          start: {
            line: 99,
            column: 24
          },
          end: {
            line: 99,
            column: 43
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 99,
            column: 24
          },
          end: {
            line: 99,
            column: 37
          }
        }, {
          start: {
            line: 99,
            column: 41
          },
          end: {
            line: 99,
            column: 43
          }
        }],
        line: 99
      },
      "18": {
        loc: {
          start: {
            line: 111,
            column: 29
          },
          end: {
            line: 111,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 111,
            column: 29
          },
          end: {
            line: 111,
            column: 47
          }
        }, {
          start: {
            line: 111,
            column: 51
          },
          end: {
            line: 111,
            column: 57
          }
        }],
        line: 111
      },
      "19": {
        loc: {
          start: {
            line: 121,
            column: 242
          },
          end: {
            line: 121,
            column: 266
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 121,
            column: 242
          },
          end: {
            line: 121,
            column: 257
          }
        }, {
          start: {
            line: 121,
            column: 261
          },
          end: {
            line: 121,
            column: 266
          }
        }],
        line: 121
      },
      "20": {
        loc: {
          start: {
            line: 130,
            column: 104
          },
          end: {
            line: 130,
            column: 152
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 130,
            column: 104
          },
          end: {
            line: 130,
            column: 119
          }
        }, {
          start: {
            line: 130,
            column: 123
          },
          end: {
            line: 130,
            column: 152
          }
        }],
        line: 130
      },
      "21": {
        loc: {
          start: {
            line: 133,
            column: 19
          },
          end: {
            line: 133,
            column: 80
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 133,
            column: 19
          },
          end: {
            line: 133,
            column: 36
          }
        }, {
          start: {
            line: 133,
            column: 40
          },
          end: {
            line: 133,
            column: 80
          }
        }],
        line: 133
      },
      "22": {
        loc: {
          start: {
            line: 175,
            column: 12
          },
          end: {
            line: 181,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 175,
            column: 12
          },
          end: {
            line: 181,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 175
      },
      "23": {
        loc: {
          start: {
            line: 184,
            column: 27
          },
          end: {
            line: 184,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 184,
            column: 27
          },
          end: {
            line: 184,
            column: 39
          }
        }, {
          start: {
            line: 184,
            column: 43
          },
          end: {
            line: 184,
            column: 60
          }
        }],
        line: 184
      },
      "24": {
        loc: {
          start: {
            line: 185,
            column: 12
          },
          end: {
            line: 186,
            column: 43
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 185,
            column: 12
          },
          end: {
            line: 186,
            column: 43
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 185
      },
      "25": {
        loc: {
          start: {
            line: 187,
            column: 12
          },
          end: {
            line: 188,
            column: 55
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 187,
            column: 12
          },
          end: {
            line: 188,
            column: 55
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 187
      },
      "26": {
        loc: {
          start: {
            line: 207,
            column: 17
          },
          end: {
            line: 207,
            column: 35
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 207,
            column: 17
          },
          end: {
            line: 207,
            column: 29
          }
        }, {
          start: {
            line: 207,
            column: 33
          },
          end: {
            line: 207,
            column: 35
          }
        }],
        line: 207
      },
      "27": {
        loc: {
          start: {
            line: 225,
            column: 35
          },
          end: {
            line: 229,
            column: 23
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 226,
            column: 18
          },
          end: {
            line: 226,
            column: 21
          }
        }, {
          start: {
            line: 227,
            column: 18
          },
          end: {
            line: 229,
            column: 23
          }
        }],
        line: 225
      },
      "28": {
        loc: {
          start: {
            line: 227,
            column: 18
          },
          end: {
            line: 229,
            column: 23
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 228,
            column: 22
          },
          end: {
            line: 228,
            column: 55
          }
        }, {
          start: {
            line: 229,
            column: 22
          },
          end: {
            line: 229,
            column: 23
          }
        }],
        line: 227
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/yusukeyoshioka/projects/youtube/ai-chat/ai-chat-api/src/lib/analytics.ts",
      mappings: "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",
      names: [],
      sources: ["/Users/yusukeyoshioka/projects/youtube/ai-chat/ai-chat-api/src/lib/analytics.ts"],
      sourcesContent: ["import { prisma } from './prisma';\nimport { Request } from 'express';\n\nexport interface EventProperties {\n  [key: string]:\n    | string\n    | number\n    | boolean\n    | null\n    | undefined\n    | EventProperties\n    | EventProperties[];\n}\n\nexport interface EventContext {\n  userAgent?: string;\n  ipAddress?: string;\n  referrer?: string;\n  pageUrl?: string;\n}\n\nexport interface TrackEventParams {\n  companyId: string;\n  widgetId?: string;\n  userId?: string;\n  anonymousId?: string;\n  sessionId?: string;\n  eventType: string;\n  eventName?: string;\n  properties?: EventProperties;\n  context?: EventContext;\n}\n\n/**\n * Track an event\n */\nexport async function trackEvent(params: TrackEventParams): Promise<void> {\n  try {\n    await prisma.event.create({\n      data: {\n        companyId: params.companyId,\n        widgetId: params.widgetId,\n        userId: params.userId,\n        anonymousId: params.anonymousId,\n        sessionId: params.sessionId,\n        eventType: params.eventType,\n        eventName: params.eventName,\n        properties: params.properties || {},\n        userAgent: params.context?.userAgent,\n        ipAddress: params.context?.ipAddress,\n        referrer: params.context?.referrer,\n        pageUrl: params.context?.pageUrl,\n      },\n    });\n  } catch (error) {\n    console.error('Failed to track event:', error);\n    // Don't throw error to avoid breaking the main flow\n  }\n}\n\n/**\n * Extract context from Express request\n */\nexport function getEventContext(req: Request): EventContext {\n  return {\n    userAgent: req.get('User-Agent'),\n    ipAddress: req.ip || req.connection.remoteAddress,\n    referrer: req.get('Referer'),\n    pageUrl: req.get('Origin'),\n  };\n}\n\n/**\n * Generate session ID from request\n */\nexport function generateSessionId(req: Request): string {\n  const userAgent = req.get('User-Agent') || '';\n  const ip = req.ip || req.connection.remoteAddress || '';\n  const timestamp = Math.floor(Date.now() / (1000 * 60 * 30)); // 30-minute sessions\n\n  return Buffer.from(`${ip}-${userAgent}-${timestamp}`)\n    .toString('base64')\n    .slice(0, 32);\n}\n\n/**\n * Predefined event types\n */\nexport const EventTypes = {\n  // User identification\n  IDENTIFY: 'identify',\n\n  // Widget interactions\n  WIDGET_LOADED: 'widget_loaded',\n  WIDGET_OPENED: 'widget_opened',\n  WIDGET_CLOSED: 'widget_closed',\n\n  // Chat interactions\n  MESSAGE_SENT: 'message_sent',\n  MESSAGE_RECEIVED: 'message_received',\n  CONVERSATION_STARTED: 'conversation_started',\n  CONVERSATION_ENDED: 'conversation_ended',\n\n  // Conversions\n  CONVERSION: 'conversion',\n  SIGNUP: 'signup',\n  PURCHASE: 'purchase',\n  LEAD_GENERATED: 'lead_generated',\n\n  // Errors\n  ERROR: 'error',\n  WIDGET_ERROR: 'widget_error',\n} as const;\n\n/**\n * Track user identification\n */\nexport async function trackIdentify(params: {\n  companyId: string;\n  widgetId?: string;\n  userId?: string;\n  anonymousId?: string;\n  sessionId: string;\n  traits?: EventProperties;\n  context: EventContext;\n}): Promise<void> {\n  await trackEvent({\n    ...params,\n    eventType: EventTypes.IDENTIFY,\n    properties: {\n      traits: params.traits || {},\n    },\n  });\n}\n\n/**\n * Track message sent\n */\nexport async function trackMessageSent(params: {\n  companyId: string;\n  widgetId: string;\n  userId?: string;\n  anonymousId?: string;\n  sessionId: string;\n  messageLength: number;\n  messageType?: string;\n  context: EventContext;\n}): Promise<void> {\n  await trackEvent({\n    ...params,\n    eventType: EventTypes.MESSAGE_SENT,\n    properties: {\n      messageLength: params.messageLength,\n      messageType: params.messageType || 'text',\n    },\n  });\n}\n\n/**\n * Track conversion\n */\nexport async function trackConversion(params: {\n  companyId: string;\n  widgetId?: string;\n  userId?: string;\n  anonymousId?: string;\n  sessionId: string;\n  conversionType: string;\n  value?: number;\n  currency?: string;\n  properties?: EventProperties;\n  context: EventContext;\n}): Promise<void> {\n  await trackEvent({\n    ...params,\n    eventType: EventTypes.CONVERSION,\n    eventName: params.conversionType,\n    properties: {\n      conversionType: params.conversionType,\n      value: params.value,\n      currency: params.currency || 'USD',\n      ...params.properties,\n    },\n  });\n}\n\n/**\n * Get analytics data for a company\n */\nexport async function getAnalytics(params: {\n  companyId: string;\n  widgetId?: string;\n  startDate: Date;\n  endDate: Date;\n  eventTypes?: string[];\n}): Promise<{\n  totalEvents: number;\n  uniqueUsers: number;\n  uniqueSessions: number;\n  eventsByType: Record<string, number>;\n  dailyStats: Array<{\n    date: string;\n    events: number;\n    users: number;\n    sessions: number;\n  }>;\n  topPages: Array<{\n    url: string;\n    events: number;\n  }>;\n  conversionFunnel: Array<{\n    step: string;\n    users: number;\n    conversionRate: number;\n  }>;\n}> {\n  const whereClause = {\n    companyId: params.companyId,\n    ...(params.widgetId && { widgetId: params.widgetId }),\n    createdAt: {\n      gte: params.startDate,\n      lte: params.endDate,\n    },\n    ...(params.eventTypes && { eventType: { in: params.eventTypes } }),\n  };\n\n  // Total events\n  const totalEvents = await prisma.event.count({ where: whereClause });\n\n  // Unique users (including anonymous)\n  const uniqueUserIds = await prisma.event.groupBy({\n    by: ['userId'],\n    where: { ...whereClause, userId: { not: null } },\n  });\n\n  const uniqueAnonymousIds = await prisma.event.groupBy({\n    by: ['anonymousId'],\n    where: { ...whereClause, anonymousId: { not: null }, userId: null },\n  });\n\n  const uniqueUsers = uniqueUserIds.length + uniqueAnonymousIds.length;\n\n  // Unique sessions\n  const uniqueSessionsData = await prisma.event.groupBy({\n    by: ['sessionId'],\n    where: { ...whereClause, sessionId: { not: null } },\n  });\n  const uniqueSessions = uniqueSessionsData.length;\n\n  // Events by type\n  const eventsByTypeData = await prisma.event.groupBy({\n    by: ['eventType'],\n    where: whereClause,\n    _count: { id: true },\n  });\n\n  const eventsByType: Record<string, number> = {};\n  eventsByTypeData.forEach((item) => {\n    eventsByType[item.eventType] = item._count.id;\n  });\n\n  // Daily stats - using simpler approach without raw SQL\n  const events = await prisma.event.findMany({\n    where: whereClause,\n    select: {\n      createdAt: true,\n      userId: true,\n      anonymousId: true,\n      sessionId: true,\n    },\n  });\n\n  const dailyStatsMap = new Map<\n    string,\n    { events: Set<string>; users: Set<string>; sessions: Set<string> }\n  >();\n\n  events.forEach((event) => {\n    const date = event.createdAt.toISOString().split('T')[0];\n    if (!dailyStatsMap.has(date)) {\n      dailyStatsMap.set(date, {\n        events: new Set(),\n        users: new Set(),\n        sessions: new Set(),\n      });\n    }\n\n    const dayStats = dailyStatsMap.get(date)!;\n    dayStats.events.add(event.createdAt.toISOString());\n\n    const userId = event.userId || event.anonymousId;\n    if (userId) dayStats.users.add(userId);\n\n    if (event.sessionId) dayStats.sessions.add(event.sessionId);\n  });\n\n  const dailyStats = Array.from(dailyStatsMap.entries())\n    .map(([date, stats]) => ({\n      date,\n      events: stats.events.size,\n      users: stats.users.size,\n      sessions: stats.sessions.size,\n    }))\n    .sort((a, b) => a.date.localeCompare(b.date));\n\n  // Top pages\n  const topPagesData = await prisma.event.groupBy({\n    by: ['pageUrl'],\n    where: { ...whereClause, pageUrl: { not: null } },\n    _count: { id: true },\n    orderBy: { _count: { id: 'desc' } },\n    take: 10,\n  });\n\n  const topPages = topPagesData.map((item) => ({\n    url: item.pageUrl || '',\n    events: item._count.id,\n  }));\n\n  // Conversion funnel (simplified)\n  const funnelSteps = [\n    { step: 'Widget Loaded', eventType: EventTypes.WIDGET_LOADED },\n    { step: 'Widget Opened', eventType: EventTypes.WIDGET_OPENED },\n    { step: 'Message Sent', eventType: EventTypes.MESSAGE_SENT },\n    { step: 'Conversion', eventType: EventTypes.CONVERSION },\n  ];\n\n  const conversionFunnel = [];\n  let previousUsers = 0;\n\n  for (const [index, step] of funnelSteps.entries()) {\n    const users = await prisma.event.groupBy({\n      by: ['userId', 'anonymousId'],\n      where: {\n        ...whereClause,\n        eventType: step.eventType,\n      },\n    });\n\n    const userCount = users.length;\n    const conversionRate =\n      index === 0\n        ? 100\n        : previousUsers > 0\n          ? (userCount / previousUsers) * 100\n          : 0;\n\n    conversionFunnel.push({\n      step: step.step,\n      users: userCount,\n      conversionRate: Math.round(conversionRate * 100) / 100,\n    });\n\n    previousUsers = userCount;\n  }\n\n  return {\n    totalEvents,\n    uniqueUsers,\n    uniqueSessions,\n    eventsByType,\n    dailyStats,\n    topPages,\n    conversionFunnel,\n  };\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "5197459387417c5ae19241b5560ac6e79750802e"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_y3p1hgsb9 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_y3p1hgsb9();
var __awaiter =
/* istanbul ignore next */
(cov_y3p1hgsb9().s[0]++,
/* istanbul ignore next */
(cov_y3p1hgsb9().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_y3p1hgsb9().b[0][1]++, this.__awaiter) ||
/* istanbul ignore next */
(cov_y3p1hgsb9().b[0][2]++, function (thisArg, _arguments, P, generator) {
  /* istanbul ignore next */
  cov_y3p1hgsb9().f[0]++;
  function adopt(value) {
    /* istanbul ignore next */
    cov_y3p1hgsb9().f[1]++;
    cov_y3p1hgsb9().s[1]++;
    return value instanceof P ?
    /* istanbul ignore next */
    (cov_y3p1hgsb9().b[1][0]++, value) :
    /* istanbul ignore next */
    (cov_y3p1hgsb9().b[1][1]++, new P(function (resolve) {
      /* istanbul ignore next */
      cov_y3p1hgsb9().f[2]++;
      cov_y3p1hgsb9().s[2]++;
      resolve(value);
    }));
  }
  /* istanbul ignore next */
  cov_y3p1hgsb9().s[3]++;
  return new (
  /* istanbul ignore next */
  (cov_y3p1hgsb9().b[2][0]++, P) ||
  /* istanbul ignore next */
  (cov_y3p1hgsb9().b[2][1]++, P = Promise))(function (resolve, reject) {
    /* istanbul ignore next */
    cov_y3p1hgsb9().f[3]++;
    function fulfilled(value) {
      /* istanbul ignore next */
      cov_y3p1hgsb9().f[4]++;
      cov_y3p1hgsb9().s[4]++;
      try {
        /* istanbul ignore next */
        cov_y3p1hgsb9().s[5]++;
        step(generator.next(value));
      } catch (e) {
        /* istanbul ignore next */
        cov_y3p1hgsb9().s[6]++;
        reject(e);
      }
    }
    function rejected(value) {
      /* istanbul ignore next */
      cov_y3p1hgsb9().f[5]++;
      cov_y3p1hgsb9().s[7]++;
      try {
        /* istanbul ignore next */
        cov_y3p1hgsb9().s[8]++;
        step(generator["throw"](value));
      } catch (e) {
        /* istanbul ignore next */
        cov_y3p1hgsb9().s[9]++;
        reject(e);
      }
    }
    function step(result) {
      /* istanbul ignore next */
      cov_y3p1hgsb9().f[6]++;
      cov_y3p1hgsb9().s[10]++;
      result.done ?
      /* istanbul ignore next */
      (cov_y3p1hgsb9().b[3][0]++, resolve(result.value)) :
      /* istanbul ignore next */
      (cov_y3p1hgsb9().b[3][1]++, adopt(result.value).then(fulfilled, rejected));
    }
    /* istanbul ignore next */
    cov_y3p1hgsb9().s[11]++;
    step((generator = generator.apply(thisArg,
    /* istanbul ignore next */
    (cov_y3p1hgsb9().b[4][0]++, _arguments) ||
    /* istanbul ignore next */
    (cov_y3p1hgsb9().b[4][1]++, []))).next());
  });
}));
/* istanbul ignore next */
cov_y3p1hgsb9().s[12]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_y3p1hgsb9().s[13]++;
exports.getAnalytics = exports.trackConversion = exports.trackMessageSent = exports.trackIdentify = exports.EventTypes = exports.generateSessionId = exports.getEventContext = exports.trackEvent = void 0;
const prisma_1 =
/* istanbul ignore next */
(cov_y3p1hgsb9().s[14]++, require("./prisma"));
/**
 * Track an event
 */
function trackEvent(params) {
  /* istanbul ignore next */
  cov_y3p1hgsb9().f[7]++;
  var _a, _b, _c, _d;
  /* istanbul ignore next */
  cov_y3p1hgsb9().s[15]++;
  return __awaiter(this, void 0, void 0, function* () {
    /* istanbul ignore next */
    cov_y3p1hgsb9().f[8]++;
    cov_y3p1hgsb9().s[16]++;
    try {
      /* istanbul ignore next */
      cov_y3p1hgsb9().s[17]++;
      yield prisma_1.prisma.event.create({
        data: {
          companyId: params.companyId,
          widgetId: params.widgetId,
          userId: params.userId,
          anonymousId: params.anonymousId,
          sessionId: params.sessionId,
          eventType: params.eventType,
          eventName: params.eventName,
          properties:
          /* istanbul ignore next */
          (cov_y3p1hgsb9().b[5][0]++, params.properties) ||
          /* istanbul ignore next */
          (cov_y3p1hgsb9().b[5][1]++, {}),
          userAgent:
          /* istanbul ignore next */
          (cov_y3p1hgsb9().b[7][0]++, (_a = params.context) === null) ||
          /* istanbul ignore next */
          (cov_y3p1hgsb9().b[7][1]++, _a === void 0) ?
          /* istanbul ignore next */
          (cov_y3p1hgsb9().b[6][0]++, void 0) :
          /* istanbul ignore next */
          (cov_y3p1hgsb9().b[6][1]++, _a.userAgent),
          ipAddress:
          /* istanbul ignore next */
          (cov_y3p1hgsb9().b[9][0]++, (_b = params.context) === null) ||
          /* istanbul ignore next */
          (cov_y3p1hgsb9().b[9][1]++, _b === void 0) ?
          /* istanbul ignore next */
          (cov_y3p1hgsb9().b[8][0]++, void 0) :
          /* istanbul ignore next */
          (cov_y3p1hgsb9().b[8][1]++, _b.ipAddress),
          referrer:
          /* istanbul ignore next */
          (cov_y3p1hgsb9().b[11][0]++, (_c = params.context) === null) ||
          /* istanbul ignore next */
          (cov_y3p1hgsb9().b[11][1]++, _c === void 0) ?
          /* istanbul ignore next */
          (cov_y3p1hgsb9().b[10][0]++, void 0) :
          /* istanbul ignore next */
          (cov_y3p1hgsb9().b[10][1]++, _c.referrer),
          pageUrl:
          /* istanbul ignore next */
          (cov_y3p1hgsb9().b[13][0]++, (_d = params.context) === null) ||
          /* istanbul ignore next */
          (cov_y3p1hgsb9().b[13][1]++, _d === void 0) ?
          /* istanbul ignore next */
          (cov_y3p1hgsb9().b[12][0]++, void 0) :
          /* istanbul ignore next */
          (cov_y3p1hgsb9().b[12][1]++, _d.pageUrl)
        }
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_y3p1hgsb9().s[18]++;
      console.error('Failed to track event:', error);
      // Don't throw error to avoid breaking the main flow
    }
  });
}
/* istanbul ignore next */
cov_y3p1hgsb9().s[19]++;
exports.trackEvent = trackEvent;
/**
 * Extract context from Express request
 */
function getEventContext(req) {
  /* istanbul ignore next */
  cov_y3p1hgsb9().f[9]++;
  cov_y3p1hgsb9().s[20]++;
  return {
    userAgent: req.get('User-Agent'),
    ipAddress:
    /* istanbul ignore next */
    (cov_y3p1hgsb9().b[14][0]++, req.ip) ||
    /* istanbul ignore next */
    (cov_y3p1hgsb9().b[14][1]++, req.connection.remoteAddress),
    referrer: req.get('Referer'),
    pageUrl: req.get('Origin')
  };
}
/* istanbul ignore next */
cov_y3p1hgsb9().s[21]++;
exports.getEventContext = getEventContext;
/**
 * Generate session ID from request
 */
function generateSessionId(req) {
  /* istanbul ignore next */
  cov_y3p1hgsb9().f[10]++;
  const userAgent =
  /* istanbul ignore next */
  (cov_y3p1hgsb9().s[22]++,
  /* istanbul ignore next */
  (cov_y3p1hgsb9().b[15][0]++, req.get('User-Agent')) ||
  /* istanbul ignore next */
  (cov_y3p1hgsb9().b[15][1]++, ''));
  const ip =
  /* istanbul ignore next */
  (cov_y3p1hgsb9().s[23]++,
  /* istanbul ignore next */
  (cov_y3p1hgsb9().b[16][0]++, req.ip) ||
  /* istanbul ignore next */
  (cov_y3p1hgsb9().b[16][1]++, req.connection.remoteAddress) ||
  /* istanbul ignore next */
  (cov_y3p1hgsb9().b[16][2]++, ''));
  const timestamp =
  /* istanbul ignore next */
  (cov_y3p1hgsb9().s[24]++, Math.floor(Date.now() / (1000 * 60 * 30))); // 30-minute sessions
  /* istanbul ignore next */
  cov_y3p1hgsb9().s[25]++;
  return Buffer.from(`${ip}-${userAgent}-${timestamp}`).toString('base64').slice(0, 32);
}
/* istanbul ignore next */
cov_y3p1hgsb9().s[26]++;
exports.generateSessionId = generateSessionId;
/**
 * Predefined event types
 */
/* istanbul ignore next */
cov_y3p1hgsb9().s[27]++;
exports.EventTypes = {
  // User identification
  IDENTIFY: 'identify',
  // Widget interactions
  WIDGET_LOADED: 'widget_loaded',
  WIDGET_OPENED: 'widget_opened',
  WIDGET_CLOSED: 'widget_closed',
  // Chat interactions
  MESSAGE_SENT: 'message_sent',
  MESSAGE_RECEIVED: 'message_received',
  CONVERSATION_STARTED: 'conversation_started',
  CONVERSATION_ENDED: 'conversation_ended',
  // Conversions
  CONVERSION: 'conversion',
  SIGNUP: 'signup',
  PURCHASE: 'purchase',
  LEAD_GENERATED: 'lead_generated',
  // Errors
  ERROR: 'error',
  WIDGET_ERROR: 'widget_error'
};
/**
 * Track user identification
 */
function trackIdentify(params) {
  /* istanbul ignore next */
  cov_y3p1hgsb9().f[11]++;
  cov_y3p1hgsb9().s[28]++;
  return __awaiter(this, void 0, void 0, function* () {
    /* istanbul ignore next */
    cov_y3p1hgsb9().f[12]++;
    cov_y3p1hgsb9().s[29]++;
    yield trackEvent(Object.assign(Object.assign({}, params), {
      eventType: exports.EventTypes.IDENTIFY,
      properties: {
        traits:
        /* istanbul ignore next */
        (cov_y3p1hgsb9().b[17][0]++, params.traits) ||
        /* istanbul ignore next */
        (cov_y3p1hgsb9().b[17][1]++, {})
      }
    }));
  });
}
/* istanbul ignore next */
cov_y3p1hgsb9().s[30]++;
exports.trackIdentify = trackIdentify;
/**
 * Track message sent
 */
function trackMessageSent(params) {
  /* istanbul ignore next */
  cov_y3p1hgsb9().f[13]++;
  cov_y3p1hgsb9().s[31]++;
  return __awaiter(this, void 0, void 0, function* () {
    /* istanbul ignore next */
    cov_y3p1hgsb9().f[14]++;
    cov_y3p1hgsb9().s[32]++;
    yield trackEvent(Object.assign(Object.assign({}, params), {
      eventType: exports.EventTypes.MESSAGE_SENT,
      properties: {
        messageLength: params.messageLength,
        messageType:
        /* istanbul ignore next */
        (cov_y3p1hgsb9().b[18][0]++, params.messageType) ||
        /* istanbul ignore next */
        (cov_y3p1hgsb9().b[18][1]++, 'text')
      }
    }));
  });
}
/* istanbul ignore next */
cov_y3p1hgsb9().s[33]++;
exports.trackMessageSent = trackMessageSent;
/**
 * Track conversion
 */
function trackConversion(params) {
  /* istanbul ignore next */
  cov_y3p1hgsb9().f[15]++;
  cov_y3p1hgsb9().s[34]++;
  return __awaiter(this, void 0, void 0, function* () {
    /* istanbul ignore next */
    cov_y3p1hgsb9().f[16]++;
    cov_y3p1hgsb9().s[35]++;
    yield trackEvent(Object.assign(Object.assign({}, params), {
      eventType: exports.EventTypes.CONVERSION,
      eventName: params.conversionType,
      properties: Object.assign({
        conversionType: params.conversionType,
        value: params.value,
        currency:
        /* istanbul ignore next */
        (cov_y3p1hgsb9().b[19][0]++, params.currency) ||
        /* istanbul ignore next */
        (cov_y3p1hgsb9().b[19][1]++, 'USD')
      }, params.properties)
    }));
  });
}
/* istanbul ignore next */
cov_y3p1hgsb9().s[36]++;
exports.trackConversion = trackConversion;
/**
 * Get analytics data for a company
 */
function getAnalytics(params) {
  /* istanbul ignore next */
  cov_y3p1hgsb9().f[17]++;
  cov_y3p1hgsb9().s[37]++;
  return __awaiter(this, void 0, void 0, function* () {
    /* istanbul ignore next */
    cov_y3p1hgsb9().f[18]++;
    const whereClause =
    /* istanbul ignore next */
    (cov_y3p1hgsb9().s[38]++, Object.assign(Object.assign(Object.assign({
      companyId: params.companyId
    },
    /* istanbul ignore next */
    (cov_y3p1hgsb9().b[20][0]++, params.widgetId) &&
    /* istanbul ignore next */
    (cov_y3p1hgsb9().b[20][1]++, {
      widgetId: params.widgetId
    })), {
      createdAt: {
        gte: params.startDate,
        lte: params.endDate
      }
    }),
    /* istanbul ignore next */
    (cov_y3p1hgsb9().b[21][0]++, params.eventTypes) &&
    /* istanbul ignore next */
    (cov_y3p1hgsb9().b[21][1]++, {
      eventType: {
        in: params.eventTypes
      }
    })));
    // Total events
    const totalEvents =
    /* istanbul ignore next */
    (cov_y3p1hgsb9().s[39]++, yield prisma_1.prisma.event.count({
      where: whereClause
    }));
    // Unique users (including anonymous)
    const uniqueUserIds =
    /* istanbul ignore next */
    (cov_y3p1hgsb9().s[40]++, yield prisma_1.prisma.event.groupBy({
      by: ['userId'],
      where: Object.assign(Object.assign({}, whereClause), {
        userId: {
          not: null
        }
      })
    }));
    const uniqueAnonymousIds =
    /* istanbul ignore next */
    (cov_y3p1hgsb9().s[41]++, yield prisma_1.prisma.event.groupBy({
      by: ['anonymousId'],
      where: Object.assign(Object.assign({}, whereClause), {
        anonymousId: {
          not: null
        },
        userId: null
      })
    }));
    const uniqueUsers =
    /* istanbul ignore next */
    (cov_y3p1hgsb9().s[42]++, uniqueUserIds.length + uniqueAnonymousIds.length);
    // Unique sessions
    const uniqueSessionsData =
    /* istanbul ignore next */
    (cov_y3p1hgsb9().s[43]++, yield prisma_1.prisma.event.groupBy({
      by: ['sessionId'],
      where: Object.assign(Object.assign({}, whereClause), {
        sessionId: {
          not: null
        }
      })
    }));
    const uniqueSessions =
    /* istanbul ignore next */
    (cov_y3p1hgsb9().s[44]++, uniqueSessionsData.length);
    // Events by type
    const eventsByTypeData =
    /* istanbul ignore next */
    (cov_y3p1hgsb9().s[45]++, yield prisma_1.prisma.event.groupBy({
      by: ['eventType'],
      where: whereClause,
      _count: {
        id: true
      }
    }));
    const eventsByType =
    /* istanbul ignore next */
    (cov_y3p1hgsb9().s[46]++, {});
    /* istanbul ignore next */
    cov_y3p1hgsb9().s[47]++;
    eventsByTypeData.forEach(item => {
      /* istanbul ignore next */
      cov_y3p1hgsb9().f[19]++;
      cov_y3p1hgsb9().s[48]++;
      eventsByType[item.eventType] = item._count.id;
    });
    // Daily stats - using simpler approach without raw SQL
    const events =
    /* istanbul ignore next */
    (cov_y3p1hgsb9().s[49]++, yield prisma_1.prisma.event.findMany({
      where: whereClause,
      select: {
        createdAt: true,
        userId: true,
        anonymousId: true,
        sessionId: true
      }
    }));
    const dailyStatsMap =
    /* istanbul ignore next */
    (cov_y3p1hgsb9().s[50]++, new Map());
    /* istanbul ignore next */
    cov_y3p1hgsb9().s[51]++;
    events.forEach(event => {
      /* istanbul ignore next */
      cov_y3p1hgsb9().f[20]++;
      const date =
      /* istanbul ignore next */
      (cov_y3p1hgsb9().s[52]++, event.createdAt.toISOString().split('T')[0]);
      /* istanbul ignore next */
      cov_y3p1hgsb9().s[53]++;
      if (!dailyStatsMap.has(date)) {
        /* istanbul ignore next */
        cov_y3p1hgsb9().b[22][0]++;
        cov_y3p1hgsb9().s[54]++;
        dailyStatsMap.set(date, {
          events: new Set(),
          users: new Set(),
          sessions: new Set()
        });
      } else
      /* istanbul ignore next */
      {
        cov_y3p1hgsb9().b[22][1]++;
      }
      const dayStats =
      /* istanbul ignore next */
      (cov_y3p1hgsb9().s[55]++, dailyStatsMap.get(date));
      /* istanbul ignore next */
      cov_y3p1hgsb9().s[56]++;
      dayStats.events.add(event.createdAt.toISOString());
      const userId =
      /* istanbul ignore next */
      (cov_y3p1hgsb9().s[57]++,
      /* istanbul ignore next */
      (cov_y3p1hgsb9().b[23][0]++, event.userId) ||
      /* istanbul ignore next */
      (cov_y3p1hgsb9().b[23][1]++, event.anonymousId));
      /* istanbul ignore next */
      cov_y3p1hgsb9().s[58]++;
      if (userId) {
        /* istanbul ignore next */
        cov_y3p1hgsb9().b[24][0]++;
        cov_y3p1hgsb9().s[59]++;
        dayStats.users.add(userId);
      } else
      /* istanbul ignore next */
      {
        cov_y3p1hgsb9().b[24][1]++;
      }
      cov_y3p1hgsb9().s[60]++;
      if (event.sessionId) {
        /* istanbul ignore next */
        cov_y3p1hgsb9().b[25][0]++;
        cov_y3p1hgsb9().s[61]++;
        dayStats.sessions.add(event.sessionId);
      } else
      /* istanbul ignore next */
      {
        cov_y3p1hgsb9().b[25][1]++;
      }
    });
    const dailyStats =
    /* istanbul ignore next */
    (cov_y3p1hgsb9().s[62]++, Array.from(dailyStatsMap.entries()).map(([date, stats]) => {
      /* istanbul ignore next */
      cov_y3p1hgsb9().f[21]++;
      cov_y3p1hgsb9().s[63]++;
      return {
        date,
        events: stats.events.size,
        users: stats.users.size,
        sessions: stats.sessions.size
      };
    }).sort((a, b) => {
      /* istanbul ignore next */
      cov_y3p1hgsb9().f[22]++;
      cov_y3p1hgsb9().s[64]++;
      return a.date.localeCompare(b.date);
    }));
    // Top pages
    const topPagesData =
    /* istanbul ignore next */
    (cov_y3p1hgsb9().s[65]++, yield prisma_1.prisma.event.groupBy({
      by: ['pageUrl'],
      where: Object.assign(Object.assign({}, whereClause), {
        pageUrl: {
          not: null
        }
      }),
      _count: {
        id: true
      },
      orderBy: {
        _count: {
          id: 'desc'
        }
      },
      take: 10
    }));
    const topPages =
    /* istanbul ignore next */
    (cov_y3p1hgsb9().s[66]++, topPagesData.map(item => {
      /* istanbul ignore next */
      cov_y3p1hgsb9().f[23]++;
      cov_y3p1hgsb9().s[67]++;
      return {
        url:
        /* istanbul ignore next */
        (cov_y3p1hgsb9().b[26][0]++, item.pageUrl) ||
        /* istanbul ignore next */
        (cov_y3p1hgsb9().b[26][1]++, ''),
        events: item._count.id
      };
    }));
    // Conversion funnel (simplified)
    const funnelSteps =
    /* istanbul ignore next */
    (cov_y3p1hgsb9().s[68]++, [{
      step: 'Widget Loaded',
      eventType: exports.EventTypes.WIDGET_LOADED
    }, {
      step: 'Widget Opened',
      eventType: exports.EventTypes.WIDGET_OPENED
    }, {
      step: 'Message Sent',
      eventType: exports.EventTypes.MESSAGE_SENT
    }, {
      step: 'Conversion',
      eventType: exports.EventTypes.CONVERSION
    }]);
    const conversionFunnel =
    /* istanbul ignore next */
    (cov_y3p1hgsb9().s[69]++, []);
    let previousUsers =
    /* istanbul ignore next */
    (cov_y3p1hgsb9().s[70]++, 0);
    /* istanbul ignore next */
    cov_y3p1hgsb9().s[71]++;
    for (const [index, step] of funnelSteps.entries()) {
      const users =
      /* istanbul ignore next */
      (cov_y3p1hgsb9().s[72]++, yield prisma_1.prisma.event.groupBy({
        by: ['userId', 'anonymousId'],
        where: Object.assign(Object.assign({}, whereClause), {
          eventType: step.eventType
        })
      }));
      const userCount =
      /* istanbul ignore next */
      (cov_y3p1hgsb9().s[73]++, users.length);
      const conversionRate =
      /* istanbul ignore next */
      (cov_y3p1hgsb9().s[74]++, index === 0 ?
      /* istanbul ignore next */
      (cov_y3p1hgsb9().b[27][0]++, 100) :
      /* istanbul ignore next */
      (cov_y3p1hgsb9().b[27][1]++, previousUsers > 0 ?
      /* istanbul ignore next */
      (cov_y3p1hgsb9().b[28][0]++, userCount / previousUsers * 100) :
      /* istanbul ignore next */
      (cov_y3p1hgsb9().b[28][1]++, 0)));
      /* istanbul ignore next */
      cov_y3p1hgsb9().s[75]++;
      conversionFunnel.push({
        step: step.step,
        users: userCount,
        conversionRate: Math.round(conversionRate * 100) / 100
      });
      /* istanbul ignore next */
      cov_y3p1hgsb9().s[76]++;
      previousUsers = userCount;
    }
    /* istanbul ignore next */
    cov_y3p1hgsb9().s[77]++;
    return {
      totalEvents,
      uniqueUsers,
      uniqueSessions,
      eventsByType,
      dailyStats,
      topPages,
      conversionFunnel
    };
  });
}
/* istanbul ignore next */
cov_y3p1hgsb9().s[78]++;
exports.getAnalytics = getAnalytics;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,