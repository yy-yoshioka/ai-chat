{"file":"/Users/yusukeyoshioka/projects/youtube/ai-chat/ai-chat-api/tests/unit/utils/jwt.test.ts","mappings":"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","names":[],"sources":["/Users/yusukeyoshioka/projects/youtube/ai-chat/ai-chat-api/tests/unit/utils/jwt.test.ts"],"sourcesContent":["import jwt from 'jsonwebtoken';\nimport { Response } from 'express';\nimport { signToken, verifyToken } from '../../../src/utils/jwt';\n\ndescribe('JWT Utils', () => {\n  let mockResponse: Partial<Response>;\n\n  beforeEach(() => {\n    mockResponse = {\n      cookie: jest.fn(),\n    };\n  });\n\n  describe('signToken', () => {\n    it('should sign a token and set cookie', () => {\n      const user = { id: '123', email: 'test@example.com', isAdmin: false };\n\n      const token = signToken(user, mockResponse as Response);\n\n      expect(token).toBeDefined();\n      expect(mockResponse.cookie).toHaveBeenCalledWith(\n        'token',\n        token,\n        expect.objectContaining({\n          httpOnly: true,\n          maxAge: 7 * 24 * 60 * 60 * 1000,\n          secure: false, // NODE_ENV is test\n          sameSite: 'lax',\n        })\n      );\n    });\n\n    it('should set secure cookie in production', () => {\n      const originalEnv = process.env.NODE_ENV;\n      process.env.NODE_ENV = 'production';\n\n      const user = { id: '123', email: 'test@example.com' };\n      signToken(user, mockResponse as Response);\n\n      expect(mockResponse.cookie).toHaveBeenCalledWith(\n        'token',\n        expect.any(String),\n        expect.objectContaining({\n          secure: true,\n          sameSite: 'strict',\n        })\n      );\n\n      process.env.NODE_ENV = originalEnv;\n    });\n\n    it('should throw error if JWT_SECRET is not defined', () => {\n      const originalSecret = process.env.JWT_SECRET;\n      delete process.env.JWT_SECRET;\n\n      expect(() => {\n        signToken(\n          { id: '123', email: 'test@example.com' },\n          mockResponse as Response\n        );\n      }).toThrow('JWT_SECRET is not defined');\n\n      process.env.JWT_SECRET = originalSecret;\n    });\n  });\n\n  describe('verifyToken', () => {\n    it('should verify a valid token', () => {\n      const payload = { id: '123', email: 'test@example.com' };\n      const token = jwt.sign(payload, process.env.JWT_SECRET!);\n\n      const decoded = verifyToken(token);\n\n      expect(decoded.id).toBe(payload.id);\n      expect(decoded.email).toBe(payload.email);\n    });\n\n    it('should throw error for invalid token', () => {\n      expect(() => {\n        verifyToken('invalid-token');\n      }).toThrow('Invalid token');\n    });\n\n    it('should throw error for expired token', () => {\n      const token = jwt.sign(\n        { id: '123', email: 'test@example.com' },\n        process.env.JWT_SECRET!,\n        { expiresIn: '-1s' }\n      );\n\n      expect(() => {\n        verifyToken(token);\n      }).toThrow('jwt expired');\n    });\n\n    it('should throw error if JWT_SECRET is not defined', () => {\n      const originalSecret = process.env.JWT_SECRET;\n      delete process.env.JWT_SECRET;\n\n      expect(() => {\n        verifyToken('some-token');\n      }).toThrow('JWT_SECRET is not defined');\n\n      process.env.JWT_SECRET = originalSecret;\n    });\n  });\n});\n"],"version":3}