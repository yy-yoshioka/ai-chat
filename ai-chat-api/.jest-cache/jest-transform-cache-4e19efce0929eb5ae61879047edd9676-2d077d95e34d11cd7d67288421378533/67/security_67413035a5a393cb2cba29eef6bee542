be770dea781a18f20ce2fa2ebd76bd4e
"use strict";

/* istanbul ignore next */
function cov_m75zvody8() {
  var path = "/Users/yusukeyoshioka/projects/youtube/ai-chat/ai-chat-api/src/routes/security.ts";
  var hash = "d4193c4dba5cb3063b851a21ec5ee06307122131";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/yusukeyoshioka/projects/youtube/ai-chat/ai-chat-api/src/routes/security.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 22
        },
        end: {
          line: 12,
          column: 3
        }
      },
      "1": {
        start: {
          line: 3,
          column: 4
        },
        end: {
          line: 3,
          column: 33
        }
      },
      "2": {
        start: {
          line: 3,
          column: 26
        },
        end: {
          line: 3,
          column: 33
        }
      },
      "3": {
        start: {
          line: 4,
          column: 15
        },
        end: {
          line: 4,
          column: 52
        }
      },
      "4": {
        start: {
          line: 5,
          column: 4
        },
        end: {
          line: 7,
          column: 5
        }
      },
      "5": {
        start: {
          line: 6,
          column: 6
        },
        end: {
          line: 6,
          column: 68
        }
      },
      "6": {
        start: {
          line: 6,
          column: 51
        },
        end: {
          line: 6,
          column: 63
        }
      },
      "7": {
        start: {
          line: 8,
          column: 4
        },
        end: {
          line: 8,
          column: 39
        }
      },
      "8": {
        start: {
          line: 10,
          column: 4
        },
        end: {
          line: 10,
          column: 33
        }
      },
      "9": {
        start: {
          line: 10,
          column: 26
        },
        end: {
          line: 10,
          column: 33
        }
      },
      "10": {
        start: {
          line: 11,
          column: 4
        },
        end: {
          line: 11,
          column: 17
        }
      },
      "11": {
        start: {
          line: 13,
          column: 25
        },
        end: {
          line: 17,
          column: 2
        }
      },
      "12": {
        start: {
          line: 14,
          column: 4
        },
        end: {
          line: 14,
          column: 72
        }
      },
      "13": {
        start: {
          line: 16,
          column: 4
        },
        end: {
          line: 16,
          column: 21
        }
      },
      "14": {
        start: {
          line: 18,
          column: 19
        },
        end: {
          line: 24,
          column: 1
        }
      },
      "15": {
        start: {
          line: 19,
          column: 4
        },
        end: {
          line: 19,
          column: 42
        }
      },
      "16": {
        start: {
          line: 19,
          column: 31
        },
        end: {
          line: 19,
          column: 42
        }
      },
      "17": {
        start: {
          line: 20,
          column: 17
        },
        end: {
          line: 20,
          column: 19
        }
      },
      "18": {
        start: {
          line: 21,
          column: 4
        },
        end: {
          line: 21,
          column: 141
        }
      },
      "19": {
        start: {
          line: 21,
          column: 21
        },
        end: {
          line: 21,
          column: 141
        }
      },
      "20": {
        start: {
          line: 21,
          column: 40
        },
        end: {
          line: 21,
          column: 141
        }
      },
      "21": {
        start: {
          line: 21,
          column: 109
        },
        end: {
          line: 21,
          column: 141
        }
      },
      "22": {
        start: {
          line: 22,
          column: 4
        },
        end: {
          line: 22,
          column: 36
        }
      },
      "23": {
        start: {
          line: 23,
          column: 4
        },
        end: {
          line: 23,
          column: 18
        }
      },
      "24": {
        start: {
          line: 25,
          column: 16
        },
        end: {
          line: 33,
          column: 1
        }
      },
      "25": {
        start: {
          line: 26,
          column: 28
        },
        end: {
          line: 26,
          column: 110
        }
      },
      "26": {
        start: {
          line: 26,
          column: 91
        },
        end: {
          line: 26,
          column: 106
        }
      },
      "27": {
        start: {
          line: 27,
          column: 4
        },
        end: {
          line: 32,
          column: 7
        }
      },
      "28": {
        start: {
          line: 28,
          column: 36
        },
        end: {
          line: 28,
          column: 97
        }
      },
      "29": {
        start: {
          line: 28,
          column: 42
        },
        end: {
          line: 28,
          column: 70
        }
      },
      "30": {
        start: {
          line: 28,
          column: 85
        },
        end: {
          line: 28,
          column: 95
        }
      },
      "31": {
        start: {
          line: 29,
          column: 35
        },
        end: {
          line: 29,
          column: 100
        }
      },
      "32": {
        start: {
          line: 29,
          column: 41
        },
        end: {
          line: 29,
          column: 73
        }
      },
      "33": {
        start: {
          line: 29,
          column: 88
        },
        end: {
          line: 29,
          column: 98
        }
      },
      "34": {
        start: {
          line: 30,
          column: 32
        },
        end: {
          line: 30,
          column: 116
        }
      },
      "35": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 31,
          column: 78
        }
      },
      "36": {
        start: {
          line: 34,
          column: 22
        },
        end: {
          line: 36,
          column: 1
        }
      },
      "37": {
        start: {
          line: 35,
          column: 4
        },
        end: {
          line: 35,
          column: 62
        }
      },
      "38": {
        start: {
          line: 37,
          column: 0
        },
        end: {
          line: 37,
          column: 62
        }
      },
      "39": {
        start: {
          line: 38,
          column: 18
        },
        end: {
          line: 38,
          column: 53
        }
      },
      "40": {
        start: {
          line: 39,
          column: 15
        },
        end: {
          line: 39,
          column: 44
        }
      },
      "41": {
        start: {
          line: 40,
          column: 19
        },
        end: {
          line: 40,
          column: 52
        }
      },
      "42": {
        start: {
          line: 41,
          column: 17
        },
        end: {
          line: 41,
          column: 42
        }
      },
      "43": {
        start: {
          line: 42,
          column: 20
        },
        end: {
          line: 42,
          column: 68
        }
      },
      "44": {
        start: {
          line: 43,
          column: 24
        },
        end: {
          line: 43,
          column: 76
        }
      },
      "45": {
        start: {
          line: 44,
          column: 25
        },
        end: {
          line: 44,
          column: 61
        }
      },
      "46": {
        start: {
          line: 45,
          column: 15
        },
        end: {
          line: 45,
          column: 41
        }
      },
      "47": {
        start: {
          line: 47,
          column: 0
        },
        end: {
          line: 55,
          column: 4
        }
      },
      "48": {
        start: {
          line: 47,
          column: 123
        },
        end: {
          line: 55,
          column: 2
        }
      },
      "49": {
        start: {
          line: 48,
          column: 4
        },
        end: {
          line: 54,
          column: 5
        }
      },
      "50": {
        start: {
          line: 49,
          column: 22
        },
        end: {
          line: 49,
          column: 80
        }
      },
      "51": {
        start: {
          line: 50,
          column: 8
        },
        end: {
          line: 50,
          column: 24
        }
      },
      "52": {
        start: {
          line: 53,
          column: 8
        },
        end: {
          line: 53,
          column: 65
        }
      },
      "53": {
        start: {
          line: 57,
          column: 0
        },
        end: {
          line: 65,
          column: 4
        }
      },
      "54": {
        start: {
          line: 57,
          column: 143
        },
        end: {
          line: 65,
          column: 2
        }
      },
      "55": {
        start: {
          line: 58,
          column: 4
        },
        end: {
          line: 64,
          column: 5
        }
      },
      "56": {
        start: {
          line: 59,
          column: 28
        },
        end: {
          line: 59,
          column: 103
        }
      },
      "57": {
        start: {
          line: 60,
          column: 8
        },
        end: {
          line: 60,
          column: 34
        }
      },
      "58": {
        start: {
          line: 63,
          column: 8
        },
        end: {
          line: 63,
          column: 71
        }
      },
      "59": {
        start: {
          line: 67,
          column: 0
        },
        end: {
          line: 81,
          column: 4
        }
      },
      "60": {
        start: {
          line: 67,
          column: 148
        },
        end: {
          line: 81,
          column: 2
        }
      },
      "61": {
        start: {
          line: 68,
          column: 4
        },
        end: {
          line: 80,
          column: 5
        }
      },
      "62": {
        start: {
          line: 69,
          column: 21
        },
        end: {
          line: 69,
          column: 75
        }
      },
      "63": {
        start: {
          line: 70,
          column: 8
        },
        end: {
          line: 70,
          column: 111
        }
      },
      "64": {
        start: {
          line: 71,
          column: 8
        },
        end: {
          line: 71,
          column: 65
        }
      },
      "65": {
        start: {
          line: 74,
          column: 8
        },
        end: {
          line: 79,
          column: 9
        }
      },
      "66": {
        start: {
          line: 75,
          column: 12
        },
        end: {
          line: 75,
          column: 68
        }
      },
      "67": {
        start: {
          line: 78,
          column: 12
        },
        end: {
          line: 78,
          column: 74
        }
      },
      "68": {
        start: {
          line: 83,
          column: 0
        },
        end: {
          line: 91,
          column: 4
        }
      },
      "69": {
        start: {
          line: 83,
          column: 162
        },
        end: {
          line: 91,
          column: 2
        }
      },
      "70": {
        start: {
          line: 84,
          column: 4
        },
        end: {
          line: 90,
          column: 5
        }
      },
      "71": {
        start: {
          line: 85,
          column: 8
        },
        end: {
          line: 85,
          column: 118
        }
      },
      "72": {
        start: {
          line: 86,
          column: 8
        },
        end: {
          line: 86,
          column: 65
        }
      },
      "73": {
        start: {
          line: 89,
          column: 8
        },
        end: {
          line: 89,
          column: 71
        }
      },
      "74": {
        start: {
          line: 93,
          column: 0
        },
        end: {
          line: 107,
          column: 4
        }
      },
      "75": {
        start: {
          line: 93,
          column: 126
        },
        end: {
          line: 107,
          column: 2
        }
      },
      "76": {
        start: {
          line: 94,
          column: 4
        },
        end: {
          line: 106,
          column: 5
        }
      },
      "77": {
        start: {
          line: 95,
          column: 22
        },
        end: {
          line: 95,
          column: 81
        }
      },
      "78": {
        start: {
          line: 96,
          column: 23
        },
        end: {
          line: 96,
          column: 134
        }
      },
      "79": {
        start: {
          line: 97,
          column: 8
        },
        end: {
          line: 97,
          column: 25
        }
      },
      "80": {
        start: {
          line: 100,
          column: 8
        },
        end: {
          line: 105,
          column: 9
        }
      },
      "81": {
        start: {
          line: 101,
          column: 12
        },
        end: {
          line: 101,
          column: 72
        }
      },
      "82": {
        start: {
          line: 104,
          column: 12
        },
        end: {
          line: 104,
          column: 82
        }
      },
      "83": {
        start: {
          line: 109,
          column: 0
        },
        end: {
          line: 117,
          column: 4
        }
      },
      "84": {
        start: {
          line: 109,
          column: 131
        },
        end: {
          line: 117,
          column: 2
        }
      },
      "85": {
        start: {
          line: 110,
          column: 4
        },
        end: {
          line: 116,
          column: 5
        }
      },
      "86": {
        start: {
          line: 111,
          column: 26
        },
        end: {
          line: 111,
          column: 88
        }
      },
      "87": {
        start: {
          line: 112,
          column: 8
        },
        end: {
          line: 112,
          column: 28
        }
      },
      "88": {
        start: {
          line: 115,
          column: 8
        },
        end: {
          line: 115,
          column: 78
        }
      },
      "89": {
        start: {
          line: 118,
          column: 0
        },
        end: {
          line: 118,
          column: 25
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 74
          },
          end: {
            line: 2,
            column: 75
          }
        },
        loc: {
          start: {
            line: 2,
            column: 96
          },
          end: {
            line: 9,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 6,
            column: 38
          },
          end: {
            line: 6,
            column: 39
          }
        },
        loc: {
          start: {
            line: 6,
            column: 49
          },
          end: {
            line: 6,
            column: 65
          }
        },
        line: 6
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 9,
            column: 6
          },
          end: {
            line: 9,
            column: 7
          }
        },
        loc: {
          start: {
            line: 9,
            column: 28
          },
          end: {
            line: 12,
            column: 1
          }
        },
        line: 9
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 13,
            column: 80
          },
          end: {
            line: 13,
            column: 81
          }
        },
        loc: {
          start: {
            line: 13,
            column: 95
          },
          end: {
            line: 15,
            column: 1
          }
        },
        line: 13
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 15,
            column: 5
          },
          end: {
            line: 15,
            column: 6
          }
        },
        loc: {
          start: {
            line: 15,
            column: 20
          },
          end: {
            line: 17,
            column: 1
          }
        },
        line: 15
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 18,
            column: 50
          },
          end: {
            line: 18,
            column: 51
          }
        },
        loc: {
          start: {
            line: 18,
            column: 65
          },
          end: {
            line: 24,
            column: 1
          }
        },
        line: 18
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 25,
            column: 44
          },
          end: {
            line: 25,
            column: 45
          }
        },
        loc: {
          start: {
            line: 25,
            column: 89
          },
          end: {
            line: 33,
            column: 1
          }
        },
        line: 25
      },
      "7": {
        name: "adopt",
        decl: {
          start: {
            line: 26,
            column: 13
          },
          end: {
            line: 26,
            column: 18
          }
        },
        loc: {
          start: {
            line: 26,
            column: 26
          },
          end: {
            line: 26,
            column: 112
          }
        },
        line: 26
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 26,
            column: 70
          },
          end: {
            line: 26,
            column: 71
          }
        },
        loc: {
          start: {
            line: 26,
            column: 89
          },
          end: {
            line: 26,
            column: 108
          }
        },
        line: 26
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 27,
            column: 36
          },
          end: {
            line: 27,
            column: 37
          }
        },
        loc: {
          start: {
            line: 27,
            column: 63
          },
          end: {
            line: 32,
            column: 5
          }
        },
        line: 27
      },
      "10": {
        name: "fulfilled",
        decl: {
          start: {
            line: 28,
            column: 17
          },
          end: {
            line: 28,
            column: 26
          }
        },
        loc: {
          start: {
            line: 28,
            column: 34
          },
          end: {
            line: 28,
            column: 99
          }
        },
        line: 28
      },
      "11": {
        name: "rejected",
        decl: {
          start: {
            line: 29,
            column: 17
          },
          end: {
            line: 29,
            column: 25
          }
        },
        loc: {
          start: {
            line: 29,
            column: 33
          },
          end: {
            line: 29,
            column: 102
          }
        },
        line: 29
      },
      "12": {
        name: "step",
        decl: {
          start: {
            line: 30,
            column: 17
          },
          end: {
            line: 30,
            column: 21
          }
        },
        loc: {
          start: {
            line: 30,
            column: 30
          },
          end: {
            line: 30,
            column: 118
          }
        },
        line: 30
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 34,
            column: 56
          },
          end: {
            line: 34,
            column: 57
          }
        },
        loc: {
          start: {
            line: 34,
            column: 71
          },
          end: {
            line: 36,
            column: 1
          }
        },
        line: 34
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 47,
            column: 109
          },
          end: {
            line: 47,
            column: 110
          }
        },
        loc: {
          start: {
            line: 47,
            column: 123
          },
          end: {
            line: 55,
            column: 2
          }
        },
        line: 47
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 47,
            column: 157
          },
          end: {
            line: 47,
            column: 158
          }
        },
        loc: {
          start: {
            line: 47,
            column: 170
          },
          end: {
            line: 55,
            column: 1
          }
        },
        line: 47
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 57,
            column: 129
          },
          end: {
            line: 57,
            column: 130
          }
        },
        loc: {
          start: {
            line: 57,
            column: 143
          },
          end: {
            line: 65,
            column: 2
          }
        },
        line: 57
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 57,
            column: 177
          },
          end: {
            line: 57,
            column: 178
          }
        },
        loc: {
          start: {
            line: 57,
            column: 190
          },
          end: {
            line: 65,
            column: 1
          }
        },
        line: 57
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 67,
            column: 134
          },
          end: {
            line: 67,
            column: 135
          }
        },
        loc: {
          start: {
            line: 67,
            column: 148
          },
          end: {
            line: 81,
            column: 2
          }
        },
        line: 67
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 67,
            column: 182
          },
          end: {
            line: 67,
            column: 183
          }
        },
        loc: {
          start: {
            line: 67,
            column: 195
          },
          end: {
            line: 81,
            column: 1
          }
        },
        line: 67
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 83,
            column: 148
          },
          end: {
            line: 83,
            column: 149
          }
        },
        loc: {
          start: {
            line: 83,
            column: 162
          },
          end: {
            line: 91,
            column: 2
          }
        },
        line: 83
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 83,
            column: 196
          },
          end: {
            line: 83,
            column: 197
          }
        },
        loc: {
          start: {
            line: 83,
            column: 209
          },
          end: {
            line: 91,
            column: 1
          }
        },
        line: 83
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 93,
            column: 112
          },
          end: {
            line: 93,
            column: 113
          }
        },
        loc: {
          start: {
            line: 93,
            column: 126
          },
          end: {
            line: 107,
            column: 2
          }
        },
        line: 93
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 93,
            column: 160
          },
          end: {
            line: 93,
            column: 161
          }
        },
        loc: {
          start: {
            line: 93,
            column: 173
          },
          end: {
            line: 107,
            column: 1
          }
        },
        line: 93
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 109,
            column: 117
          },
          end: {
            line: 109,
            column: 118
          }
        },
        loc: {
          start: {
            line: 109,
            column: 131
          },
          end: {
            line: 117,
            column: 2
          }
        },
        line: 109
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 109,
            column: 165
          },
          end: {
            line: 109,
            column: 166
          }
        },
        loc: {
          start: {
            line: 109,
            column: 178
          },
          end: {
            line: 117,
            column: 1
          }
        },
        line: 109
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 22
          },
          end: {
            line: 12,
            column: 3
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 23
          },
          end: {
            line: 2,
            column: 27
          }
        }, {
          start: {
            line: 2,
            column: 31
          },
          end: {
            line: 2,
            column: 51
          }
        }, {
          start: {
            line: 2,
            column: 57
          },
          end: {
            line: 12,
            column: 2
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 2,
            column: 57
          },
          end: {
            line: 12,
            column: 2
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 2,
            column: 74
          },
          end: {
            line: 9,
            column: 1
          }
        }, {
          start: {
            line: 9,
            column: 6
          },
          end: {
            line: 12,
            column: 1
          }
        }],
        line: 2
      },
      "2": {
        loc: {
          start: {
            line: 3,
            column: 4
          },
          end: {
            line: 3,
            column: 33
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 3,
            column: 4
          },
          end: {
            line: 3,
            column: 33
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 3
      },
      "3": {
        loc: {
          start: {
            line: 5,
            column: 4
          },
          end: {
            line: 7,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 5,
            column: 4
          },
          end: {
            line: 7,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 5
      },
      "4": {
        loc: {
          start: {
            line: 5,
            column: 8
          },
          end: {
            line: 5,
            column: 85
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 5,
            column: 8
          },
          end: {
            line: 5,
            column: 13
          }
        }, {
          start: {
            line: 5,
            column: 18
          },
          end: {
            line: 5,
            column: 84
          }
        }],
        line: 5
      },
      "5": {
        loc: {
          start: {
            line: 5,
            column: 18
          },
          end: {
            line: 5,
            column: 84
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 5,
            column: 34
          },
          end: {
            line: 5,
            column: 47
          }
        }, {
          start: {
            line: 5,
            column: 50
          },
          end: {
            line: 5,
            column: 84
          }
        }],
        line: 5
      },
      "6": {
        loc: {
          start: {
            line: 5,
            column: 50
          },
          end: {
            line: 5,
            column: 84
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 5,
            column: 50
          },
          end: {
            line: 5,
            column: 63
          }
        }, {
          start: {
            line: 5,
            column: 67
          },
          end: {
            line: 5,
            column: 84
          }
        }],
        line: 5
      },
      "7": {
        loc: {
          start: {
            line: 10,
            column: 4
          },
          end: {
            line: 10,
            column: 33
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 10,
            column: 4
          },
          end: {
            line: 10,
            column: 33
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 10
      },
      "8": {
        loc: {
          start: {
            line: 13,
            column: 25
          },
          end: {
            line: 17,
            column: 2
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 13,
            column: 26
          },
          end: {
            line: 13,
            column: 30
          }
        }, {
          start: {
            line: 13,
            column: 34
          },
          end: {
            line: 13,
            column: 57
          }
        }, {
          start: {
            line: 13,
            column: 63
          },
          end: {
            line: 17,
            column: 1
          }
        }],
        line: 13
      },
      "9": {
        loc: {
          start: {
            line: 13,
            column: 63
          },
          end: {
            line: 17,
            column: 1
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 13,
            column: 80
          },
          end: {
            line: 15,
            column: 1
          }
        }, {
          start: {
            line: 15,
            column: 5
          },
          end: {
            line: 17,
            column: 1
          }
        }],
        line: 13
      },
      "10": {
        loc: {
          start: {
            line: 18,
            column: 19
          },
          end: {
            line: 24,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 18,
            column: 20
          },
          end: {
            line: 18,
            column: 24
          }
        }, {
          start: {
            line: 18,
            column: 28
          },
          end: {
            line: 18,
            column: 45
          }
        }, {
          start: {
            line: 18,
            column: 50
          },
          end: {
            line: 24,
            column: 1
          }
        }],
        line: 18
      },
      "11": {
        loc: {
          start: {
            line: 19,
            column: 4
          },
          end: {
            line: 19,
            column: 42
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 19,
            column: 4
          },
          end: {
            line: 19,
            column: 42
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 19
      },
      "12": {
        loc: {
          start: {
            line: 19,
            column: 8
          },
          end: {
            line: 19,
            column: 29
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 19,
            column: 8
          },
          end: {
            line: 19,
            column: 11
          }
        }, {
          start: {
            line: 19,
            column: 15
          },
          end: {
            line: 19,
            column: 29
          }
        }],
        line: 19
      },
      "13": {
        loc: {
          start: {
            line: 21,
            column: 4
          },
          end: {
            line: 21,
            column: 141
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 21,
            column: 4
          },
          end: {
            line: 21,
            column: 141
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 21
      },
      "14": {
        loc: {
          start: {
            line: 21,
            column: 40
          },
          end: {
            line: 21,
            column: 141
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 21,
            column: 40
          },
          end: {
            line: 21,
            column: 141
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 21
      },
      "15": {
        loc: {
          start: {
            line: 21,
            column: 44
          },
          end: {
            line: 21,
            column: 107
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 21,
            column: 44
          },
          end: {
            line: 21,
            column: 59
          }
        }, {
          start: {
            line: 21,
            column: 63
          },
          end: {
            line: 21,
            column: 107
          }
        }],
        line: 21
      },
      "16": {
        loc: {
          start: {
            line: 25,
            column: 16
          },
          end: {
            line: 33,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 25,
            column: 17
          },
          end: {
            line: 25,
            column: 21
          }
        }, {
          start: {
            line: 25,
            column: 25
          },
          end: {
            line: 25,
            column: 39
          }
        }, {
          start: {
            line: 25,
            column: 44
          },
          end: {
            line: 33,
            column: 1
          }
        }],
        line: 25
      },
      "17": {
        loc: {
          start: {
            line: 26,
            column: 35
          },
          end: {
            line: 26,
            column: 109
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 26,
            column: 56
          },
          end: {
            line: 26,
            column: 61
          }
        }, {
          start: {
            line: 26,
            column: 64
          },
          end: {
            line: 26,
            column: 109
          }
        }],
        line: 26
      },
      "18": {
        loc: {
          start: {
            line: 27,
            column: 16
          },
          end: {
            line: 27,
            column: 34
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 27,
            column: 16
          },
          end: {
            line: 27,
            column: 17
          }
        }, {
          start: {
            line: 27,
            column: 22
          },
          end: {
            line: 27,
            column: 33
          }
        }],
        line: 27
      },
      "19": {
        loc: {
          start: {
            line: 30,
            column: 32
          },
          end: {
            line: 30,
            column: 115
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 30,
            column: 46
          },
          end: {
            line: 30,
            column: 67
          }
        }, {
          start: {
            line: 30,
            column: 70
          },
          end: {
            line: 30,
            column: 115
          }
        }],
        line: 30
      },
      "20": {
        loc: {
          start: {
            line: 31,
            column: 51
          },
          end: {
            line: 31,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 31,
            column: 51
          },
          end: {
            line: 31,
            column: 61
          }
        }, {
          start: {
            line: 31,
            column: 65
          },
          end: {
            line: 31,
            column: 67
          }
        }],
        line: 31
      },
      "21": {
        loc: {
          start: {
            line: 34,
            column: 22
          },
          end: {
            line: 36,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 34,
            column: 23
          },
          end: {
            line: 34,
            column: 27
          }
        }, {
          start: {
            line: 34,
            column: 31
          },
          end: {
            line: 34,
            column: 51
          }
        }, {
          start: {
            line: 34,
            column: 56
          },
          end: {
            line: 36,
            column: 1
          }
        }],
        line: 34
      },
      "22": {
        loc: {
          start: {
            line: 35,
            column: 11
          },
          end: {
            line: 35,
            column: 61
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 35,
            column: 37
          },
          end: {
            line: 35,
            column: 40
          }
        }, {
          start: {
            line: 35,
            column: 43
          },
          end: {
            line: 35,
            column: 61
          }
        }],
        line: 35
      },
      "23": {
        loc: {
          start: {
            line: 35,
            column: 12
          },
          end: {
            line: 35,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 35,
            column: 12
          },
          end: {
            line: 35,
            column: 15
          }
        }, {
          start: {
            line: 35,
            column: 19
          },
          end: {
            line: 35,
            column: 33
          }
        }],
        line: 35
      },
      "24": {
        loc: {
          start: {
            line: 74,
            column: 8
          },
          end: {
            line: 79,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 74,
            column: 8
          },
          end: {
            line: 79,
            column: 9
          }
        }, {
          start: {
            line: 77,
            column: 13
          },
          end: {
            line: 79,
            column: 9
          }
        }],
        line: 74
      },
      "25": {
        loc: {
          start: {
            line: 74,
            column: 12
          },
          end: {
            line: 74,
            column: 63
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 74,
            column: 12
          },
          end: {
            line: 74,
            column: 34
          }
        }, {
          start: {
            line: 74,
            column: 38
          },
          end: {
            line: 74,
            column: 63
          }
        }],
        line: 74
      },
      "26": {
        loc: {
          start: {
            line: 100,
            column: 8
          },
          end: {
            line: 105,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 100,
            column: 8
          },
          end: {
            line: 105,
            column: 9
          }
        }, {
          start: {
            line: 103,
            column: 13
          },
          end: {
            line: 105,
            column: 9
          }
        }],
        line: 100
      },
      "27": {
        loc: {
          start: {
            line: 100,
            column: 12
          },
          end: {
            line: 100,
            column: 63
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 100,
            column: 12
          },
          end: {
            line: 100,
            column: 34
          }
        }, {
          start: {
            line: 100,
            column: 38
          },
          end: {
            line: 100,
            column: 63
          }
        }],
        line: 100
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0, 0],
      "9": [0, 0],
      "10": [0, 0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/yusukeyoshioka/projects/youtube/ai-chat/ai-chat-api/src/routes/security.ts",
      mappings: "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",
      names: [],
      sources: ["/Users/yusukeyoshioka/projects/youtube/ai-chat/ai-chat-api/src/routes/security.ts"],
      sourcesContent: ["import express from 'express';\nimport { authMiddleware as requireAuth } from '../middleware/auth';\nimport { requirePermission } from '../middleware/security';\nimport { Permission } from '@prisma/client';\nimport * as rbacService from '../services/rbacService';\nimport * as securityService from '../services/securityService';\nimport {\n  permissionGrantSchema,\n  securityReportQuerySchema,\n} from '../schemas/securitySchema';\n\nconst router = express.Router();\n\n// Get organization users with permissions\nrouter.get(\n  '/users',\n  requireAuth,\n  requirePermission(Permission.ORG_READ),\n  async (req, res) => {\n    try {\n      const users = await rbacService.getOrganizationUsers(req.organizationId!);\n      res.json(users);\n    } catch (error) {\n      res.status(500).json({ error: 'Failed to fetch users' });\n    }\n  }\n);\n\n// Get user permissions\nrouter.get(\n  '/users/:userId/permissions',\n  requireAuth,\n  requirePermission(Permission.ORG_READ),\n  async (req, res) => {\n    try {\n      const permissions = await rbacService.getUserPermissions(\n        req.params.userId,\n        req.organizationId!\n      );\n      res.json({ permissions });\n    } catch (error) {\n      res.status(500).json({ error: 'Failed to fetch permissions' });\n    }\n  }\n);\n\n// Grant permission to user\nrouter.post(\n  '/users/:userId/permissions',\n  requireAuth,\n  requirePermission(Permission.SYSTEM_ADMIN),\n  async (req, res) => {\n    try {\n      const data = permissionGrantSchema.parse(req.body);\n\n      await rbacService.grantPermission(\n        req.params.userId,\n        req.organizationId!,\n        data.permission,\n        req.user!.id\n      );\n\n      res.json({ message: 'Permission granted successfully' });\n    } catch (error) {\n      if (error instanceof Error && error.name === 'ZodError') {\n        res.status(400).json({ error: 'Invalid request data' });\n      } else {\n        res.status(500).json({ error: 'Failed to grant permission' });\n      }\n    }\n  }\n);\n\n// Revoke permission from user\nrouter.delete(\n  '/users/:userId/permissions/:permission',\n  requireAuth,\n  requirePermission(Permission.SYSTEM_ADMIN),\n  async (req, res) => {\n    try {\n      await rbacService.revokePermission(\n        req.params.userId,\n        req.organizationId!,\n        req.params.permission as Permission,\n        req.user!.id\n      );\n\n      res.json({ message: 'Permission revoked successfully' });\n    } catch (error) {\n      res.status(500).json({ error: 'Failed to revoke permission' });\n    }\n  }\n);\n\n// Get security report\nrouter.get(\n  '/report',\n  requireAuth,\n  requirePermission(Permission.AUDIT_READ),\n  async (req, res) => {\n    try {\n      const query = securityReportQuerySchema.parse(req.query);\n\n      const report = await securityService.getSecurityReport(\n        req.organizationId!,\n        new Date(query.startDate),\n        new Date(query.endDate)\n      );\n\n      res.json(report);\n    } catch (error) {\n      if (error instanceof Error && error.name === 'ZodError') {\n        res.status(400).json({ error: 'Invalid query parameters' });\n      } else {\n        res.status(500).json({ error: 'Failed to generate security report' });\n      }\n    }\n  }\n);\n\n// Get anomalous activity\nrouter.get(\n  '/anomalies',\n  requireAuth,\n  requirePermission(Permission.SYSTEM_ADMIN),\n  async (req, res) => {\n    try {\n      const anomalies = await securityService.getAnomalousActivity(\n        req.organizationId!\n      );\n      res.json(anomalies);\n    } catch (error) {\n      res.status(500).json({ error: 'Failed to fetch anomalous activity' });\n    }\n  }\n);\n\nexport default router;\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "d4193c4dba5cb3063b851a21ec5ee06307122131"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_m75zvody8 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_m75zvody8();
var __createBinding =
/* istanbul ignore next */
(cov_m75zvody8().s[0]++,
/* istanbul ignore next */
(cov_m75zvody8().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_m75zvody8().b[0][1]++, this.__createBinding) ||
/* istanbul ignore next */
(cov_m75zvody8().b[0][2]++, Object.create ?
/* istanbul ignore next */
(cov_m75zvody8().b[1][0]++, function (o, m, k, k2) {
  /* istanbul ignore next */
  cov_m75zvody8().f[0]++;
  cov_m75zvody8().s[1]++;
  if (k2 === undefined) {
    /* istanbul ignore next */
    cov_m75zvody8().b[2][0]++;
    cov_m75zvody8().s[2]++;
    k2 = k;
  } else
  /* istanbul ignore next */
  {
    cov_m75zvody8().b[2][1]++;
  }
  var desc =
  /* istanbul ignore next */
  (cov_m75zvody8().s[3]++, Object.getOwnPropertyDescriptor(m, k));
  /* istanbul ignore next */
  cov_m75zvody8().s[4]++;
  if (
  /* istanbul ignore next */
  (cov_m75zvody8().b[4][0]++, !desc) ||
  /* istanbul ignore next */
  (cov_m75zvody8().b[4][1]++, "get" in desc ?
  /* istanbul ignore next */
  (cov_m75zvody8().b[5][0]++, !m.__esModule) :
  /* istanbul ignore next */
  (cov_m75zvody8().b[5][1]++,
  /* istanbul ignore next */
  (cov_m75zvody8().b[6][0]++, desc.writable) ||
  /* istanbul ignore next */
  (cov_m75zvody8().b[6][1]++, desc.configurable)))) {
    /* istanbul ignore next */
    cov_m75zvody8().b[3][0]++;
    cov_m75zvody8().s[5]++;
    desc = {
      enumerable: true,
      get: function () {
        /* istanbul ignore next */
        cov_m75zvody8().f[1]++;
        cov_m75zvody8().s[6]++;
        return m[k];
      }
    };
  } else
  /* istanbul ignore next */
  {
    cov_m75zvody8().b[3][1]++;
  }
  cov_m75zvody8().s[7]++;
  Object.defineProperty(o, k2, desc);
}) :
/* istanbul ignore next */
(cov_m75zvody8().b[1][1]++, function (o, m, k, k2) {
  /* istanbul ignore next */
  cov_m75zvody8().f[2]++;
  cov_m75zvody8().s[8]++;
  if (k2 === undefined) {
    /* istanbul ignore next */
    cov_m75zvody8().b[7][0]++;
    cov_m75zvody8().s[9]++;
    k2 = k;
  } else
  /* istanbul ignore next */
  {
    cov_m75zvody8().b[7][1]++;
  }
  cov_m75zvody8().s[10]++;
  o[k2] = m[k];
})));
var __setModuleDefault =
/* istanbul ignore next */
(cov_m75zvody8().s[11]++,
/* istanbul ignore next */
(cov_m75zvody8().b[8][0]++, this) &&
/* istanbul ignore next */
(cov_m75zvody8().b[8][1]++, this.__setModuleDefault) ||
/* istanbul ignore next */
(cov_m75zvody8().b[8][2]++, Object.create ?
/* istanbul ignore next */
(cov_m75zvody8().b[9][0]++, function (o, v) {
  /* istanbul ignore next */
  cov_m75zvody8().f[3]++;
  cov_m75zvody8().s[12]++;
  Object.defineProperty(o, "default", {
    enumerable: true,
    value: v
  });
}) :
/* istanbul ignore next */
(cov_m75zvody8().b[9][1]++, function (o, v) {
  /* istanbul ignore next */
  cov_m75zvody8().f[4]++;
  cov_m75zvody8().s[13]++;
  o["default"] = v;
})));
var __importStar =
/* istanbul ignore next */
(cov_m75zvody8().s[14]++,
/* istanbul ignore next */
(cov_m75zvody8().b[10][0]++, this) &&
/* istanbul ignore next */
(cov_m75zvody8().b[10][1]++, this.__importStar) ||
/* istanbul ignore next */
(cov_m75zvody8().b[10][2]++, function (mod) {
  /* istanbul ignore next */
  cov_m75zvody8().f[5]++;
  cov_m75zvody8().s[15]++;
  if (
  /* istanbul ignore next */
  (cov_m75zvody8().b[12][0]++, mod) &&
  /* istanbul ignore next */
  (cov_m75zvody8().b[12][1]++, mod.__esModule)) {
    /* istanbul ignore next */
    cov_m75zvody8().b[11][0]++;
    cov_m75zvody8().s[16]++;
    return mod;
  } else
  /* istanbul ignore next */
  {
    cov_m75zvody8().b[11][1]++;
  }
  var result =
  /* istanbul ignore next */
  (cov_m75zvody8().s[17]++, {});
  /* istanbul ignore next */
  cov_m75zvody8().s[18]++;
  if (mod != null) {
    /* istanbul ignore next */
    cov_m75zvody8().b[13][0]++;
    cov_m75zvody8().s[19]++;
    for (var k in mod) {
      /* istanbul ignore next */
      cov_m75zvody8().s[20]++;
      if (
      /* istanbul ignore next */
      (cov_m75zvody8().b[15][0]++, k !== "default") &&
      /* istanbul ignore next */
      (cov_m75zvody8().b[15][1]++, Object.prototype.hasOwnProperty.call(mod, k))) {
        /* istanbul ignore next */
        cov_m75zvody8().b[14][0]++;
        cov_m75zvody8().s[21]++;
        __createBinding(result, mod, k);
      } else
      /* istanbul ignore next */
      {
        cov_m75zvody8().b[14][1]++;
      }
    }
  } else
  /* istanbul ignore next */
  {
    cov_m75zvody8().b[13][1]++;
  }
  cov_m75zvody8().s[22]++;
  __setModuleDefault(result, mod);
  /* istanbul ignore next */
  cov_m75zvody8().s[23]++;
  return result;
}));
var __awaiter =
/* istanbul ignore next */
(cov_m75zvody8().s[24]++,
/* istanbul ignore next */
(cov_m75zvody8().b[16][0]++, this) &&
/* istanbul ignore next */
(cov_m75zvody8().b[16][1]++, this.__awaiter) ||
/* istanbul ignore next */
(cov_m75zvody8().b[16][2]++, function (thisArg, _arguments, P, generator) {
  /* istanbul ignore next */
  cov_m75zvody8().f[6]++;
  function adopt(value) {
    /* istanbul ignore next */
    cov_m75zvody8().f[7]++;
    cov_m75zvody8().s[25]++;
    return value instanceof P ?
    /* istanbul ignore next */
    (cov_m75zvody8().b[17][0]++, value) :
    /* istanbul ignore next */
    (cov_m75zvody8().b[17][1]++, new P(function (resolve) {
      /* istanbul ignore next */
      cov_m75zvody8().f[8]++;
      cov_m75zvody8().s[26]++;
      resolve(value);
    }));
  }
  /* istanbul ignore next */
  cov_m75zvody8().s[27]++;
  return new (
  /* istanbul ignore next */
  (cov_m75zvody8().b[18][0]++, P) ||
  /* istanbul ignore next */
  (cov_m75zvody8().b[18][1]++, P = Promise))(function (resolve, reject) {
    /* istanbul ignore next */
    cov_m75zvody8().f[9]++;
    function fulfilled(value) {
      /* istanbul ignore next */
      cov_m75zvody8().f[10]++;
      cov_m75zvody8().s[28]++;
      try {
        /* istanbul ignore next */
        cov_m75zvody8().s[29]++;
        step(generator.next(value));
      } catch (e) {
        /* istanbul ignore next */
        cov_m75zvody8().s[30]++;
        reject(e);
      }
    }
    function rejected(value) {
      /* istanbul ignore next */
      cov_m75zvody8().f[11]++;
      cov_m75zvody8().s[31]++;
      try {
        /* istanbul ignore next */
        cov_m75zvody8().s[32]++;
        step(generator["throw"](value));
      } catch (e) {
        /* istanbul ignore next */
        cov_m75zvody8().s[33]++;
        reject(e);
      }
    }
    function step(result) {
      /* istanbul ignore next */
      cov_m75zvody8().f[12]++;
      cov_m75zvody8().s[34]++;
      result.done ?
      /* istanbul ignore next */
      (cov_m75zvody8().b[19][0]++, resolve(result.value)) :
      /* istanbul ignore next */
      (cov_m75zvody8().b[19][1]++, adopt(result.value).then(fulfilled, rejected));
    }
    /* istanbul ignore next */
    cov_m75zvody8().s[35]++;
    step((generator = generator.apply(thisArg,
    /* istanbul ignore next */
    (cov_m75zvody8().b[20][0]++, _arguments) ||
    /* istanbul ignore next */
    (cov_m75zvody8().b[20][1]++, []))).next());
  });
}));
var __importDefault =
/* istanbul ignore next */
(cov_m75zvody8().s[36]++,
/* istanbul ignore next */
(cov_m75zvody8().b[21][0]++, this) &&
/* istanbul ignore next */
(cov_m75zvody8().b[21][1]++, this.__importDefault) ||
/* istanbul ignore next */
(cov_m75zvody8().b[21][2]++, function (mod) {
  /* istanbul ignore next */
  cov_m75zvody8().f[13]++;
  cov_m75zvody8().s[37]++;
  return /* istanbul ignore next */(cov_m75zvody8().b[23][0]++, mod) &&
  /* istanbul ignore next */
  (cov_m75zvody8().b[23][1]++, mod.__esModule) ?
  /* istanbul ignore next */
  (cov_m75zvody8().b[22][0]++, mod) :
  /* istanbul ignore next */
  (cov_m75zvody8().b[22][1]++, {
    "default": mod
  });
}));
/* istanbul ignore next */
cov_m75zvody8().s[38]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
const express_1 =
/* istanbul ignore next */
(cov_m75zvody8().s[39]++, __importDefault(require("express")));
const auth_1 =
/* istanbul ignore next */
(cov_m75zvody8().s[40]++, require("../middleware/auth"));
const security_1 =
/* istanbul ignore next */
(cov_m75zvody8().s[41]++, require("../middleware/security"));
const client_1 =
/* istanbul ignore next */
(cov_m75zvody8().s[42]++, require("@prisma/client"));
const rbacService =
/* istanbul ignore next */
(cov_m75zvody8().s[43]++, __importStar(require("../services/rbacService")));
const securityService =
/* istanbul ignore next */
(cov_m75zvody8().s[44]++, __importStar(require("../services/securityService")));
const securitySchema_1 =
/* istanbul ignore next */
(cov_m75zvody8().s[45]++, require("../schemas/securitySchema"));
const router =
/* istanbul ignore next */
(cov_m75zvody8().s[46]++, express_1.default.Router());
// Get organization users with permissions
/* istanbul ignore next */
cov_m75zvody8().s[47]++;
router.get('/users', auth_1.authMiddleware, (0, security_1.requirePermission)(client_1.Permission.ORG_READ), (req, res) => {
  /* istanbul ignore next */
  cov_m75zvody8().f[14]++;
  cov_m75zvody8().s[48]++;
  return __awaiter(void 0, void 0, void 0, function* () {
    /* istanbul ignore next */
    cov_m75zvody8().f[15]++;
    cov_m75zvody8().s[49]++;
    try {
      const users =
      /* istanbul ignore next */
      (cov_m75zvody8().s[50]++, yield rbacService.getOrganizationUsers(req.organizationId));
      /* istanbul ignore next */
      cov_m75zvody8().s[51]++;
      res.json(users);
    } catch (error) {
      /* istanbul ignore next */
      cov_m75zvody8().s[52]++;
      res.status(500).json({
        error: 'Failed to fetch users'
      });
    }
  });
});
// Get user permissions
/* istanbul ignore next */
cov_m75zvody8().s[53]++;
router.get('/users/:userId/permissions', auth_1.authMiddleware, (0, security_1.requirePermission)(client_1.Permission.ORG_READ), (req, res) => {
  /* istanbul ignore next */
  cov_m75zvody8().f[16]++;
  cov_m75zvody8().s[54]++;
  return __awaiter(void 0, void 0, void 0, function* () {
    /* istanbul ignore next */
    cov_m75zvody8().f[17]++;
    cov_m75zvody8().s[55]++;
    try {
      const permissions =
      /* istanbul ignore next */
      (cov_m75zvody8().s[56]++, yield rbacService.getUserPermissions(req.params.userId, req.organizationId));
      /* istanbul ignore next */
      cov_m75zvody8().s[57]++;
      res.json({
        permissions
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_m75zvody8().s[58]++;
      res.status(500).json({
        error: 'Failed to fetch permissions'
      });
    }
  });
});
// Grant permission to user
/* istanbul ignore next */
cov_m75zvody8().s[59]++;
router.post('/users/:userId/permissions', auth_1.authMiddleware, (0, security_1.requirePermission)(client_1.Permission.SYSTEM_ADMIN), (req, res) => {
  /* istanbul ignore next */
  cov_m75zvody8().f[18]++;
  cov_m75zvody8().s[60]++;
  return __awaiter(void 0, void 0, void 0, function* () {
    /* istanbul ignore next */
    cov_m75zvody8().f[19]++;
    cov_m75zvody8().s[61]++;
    try {
      const data =
      /* istanbul ignore next */
      (cov_m75zvody8().s[62]++, securitySchema_1.permissionGrantSchema.parse(req.body));
      /* istanbul ignore next */
      cov_m75zvody8().s[63]++;
      yield rbacService.grantPermission(req.params.userId, req.organizationId, data.permission, req.user.id);
      /* istanbul ignore next */
      cov_m75zvody8().s[64]++;
      res.json({
        message: 'Permission granted successfully'
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_m75zvody8().s[65]++;
      if (
      /* istanbul ignore next */
      (cov_m75zvody8().b[25][0]++, error instanceof Error) &&
      /* istanbul ignore next */
      (cov_m75zvody8().b[25][1]++, error.name === 'ZodError')) {
        /* istanbul ignore next */
        cov_m75zvody8().b[24][0]++;
        cov_m75zvody8().s[66]++;
        res.status(400).json({
          error: 'Invalid request data'
        });
      } else {
        /* istanbul ignore next */
        cov_m75zvody8().b[24][1]++;
        cov_m75zvody8().s[67]++;
        res.status(500).json({
          error: 'Failed to grant permission'
        });
      }
    }
  });
});
// Revoke permission from user
/* istanbul ignore next */
cov_m75zvody8().s[68]++;
router.delete('/users/:userId/permissions/:permission', auth_1.authMiddleware, (0, security_1.requirePermission)(client_1.Permission.SYSTEM_ADMIN), (req, res) => {
  /* istanbul ignore next */
  cov_m75zvody8().f[20]++;
  cov_m75zvody8().s[69]++;
  return __awaiter(void 0, void 0, void 0, function* () {
    /* istanbul ignore next */
    cov_m75zvody8().f[21]++;
    cov_m75zvody8().s[70]++;
    try {
      /* istanbul ignore next */
      cov_m75zvody8().s[71]++;
      yield rbacService.revokePermission(req.params.userId, req.organizationId, req.params.permission, req.user.id);
      /* istanbul ignore next */
      cov_m75zvody8().s[72]++;
      res.json({
        message: 'Permission revoked successfully'
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_m75zvody8().s[73]++;
      res.status(500).json({
        error: 'Failed to revoke permission'
      });
    }
  });
});
// Get security report
/* istanbul ignore next */
cov_m75zvody8().s[74]++;
router.get('/report', auth_1.authMiddleware, (0, security_1.requirePermission)(client_1.Permission.AUDIT_READ), (req, res) => {
  /* istanbul ignore next */
  cov_m75zvody8().f[22]++;
  cov_m75zvody8().s[75]++;
  return __awaiter(void 0, void 0, void 0, function* () {
    /* istanbul ignore next */
    cov_m75zvody8().f[23]++;
    cov_m75zvody8().s[76]++;
    try {
      const query =
      /* istanbul ignore next */
      (cov_m75zvody8().s[77]++, securitySchema_1.securityReportQuerySchema.parse(req.query));
      const report =
      /* istanbul ignore next */
      (cov_m75zvody8().s[78]++, yield securityService.getSecurityReport(req.organizationId, new Date(query.startDate), new Date(query.endDate)));
      /* istanbul ignore next */
      cov_m75zvody8().s[79]++;
      res.json(report);
    } catch (error) {
      /* istanbul ignore next */
      cov_m75zvody8().s[80]++;
      if (
      /* istanbul ignore next */
      (cov_m75zvody8().b[27][0]++, error instanceof Error) &&
      /* istanbul ignore next */
      (cov_m75zvody8().b[27][1]++, error.name === 'ZodError')) {
        /* istanbul ignore next */
        cov_m75zvody8().b[26][0]++;
        cov_m75zvody8().s[81]++;
        res.status(400).json({
          error: 'Invalid query parameters'
        });
      } else {
        /* istanbul ignore next */
        cov_m75zvody8().b[26][1]++;
        cov_m75zvody8().s[82]++;
        res.status(500).json({
          error: 'Failed to generate security report'
        });
      }
    }
  });
});
// Get anomalous activity
/* istanbul ignore next */
cov_m75zvody8().s[83]++;
router.get('/anomalies', auth_1.authMiddleware, (0, security_1.requirePermission)(client_1.Permission.SYSTEM_ADMIN), (req, res) => {
  /* istanbul ignore next */
  cov_m75zvody8().f[24]++;
  cov_m75zvody8().s[84]++;
  return __awaiter(void 0, void 0, void 0, function* () {
    /* istanbul ignore next */
    cov_m75zvody8().f[25]++;
    cov_m75zvody8().s[85]++;
    try {
      const anomalies =
      /* istanbul ignore next */
      (cov_m75zvody8().s[86]++, yield securityService.getAnomalousActivity(req.organizationId));
      /* istanbul ignore next */
      cov_m75zvody8().s[87]++;
      res.json(anomalies);
    } catch (error) {
      /* istanbul ignore next */
      cov_m75zvody8().s[88]++;
      res.status(500).json({
        error: 'Failed to fetch anomalous activity'
      });
    }
  });
});
/* istanbul ignore next */
cov_m75zvody8().s[89]++;
exports.default = router;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,