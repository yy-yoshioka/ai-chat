{"version":3,"names":["express_1","cov_m75zvody8","s","__importDefault","require","auth_1","security_1","client_1","rbacService","__importStar","securityService","securitySchema_1","router","default","Router","get","authMiddleware","requirePermission","Permission","ORG_READ","req","res","f","__awaiter","users","getOrganizationUsers","organizationId","json","error","status","permissions","getUserPermissions","params","userId","post","SYSTEM_ADMIN","data","permissionGrantSchema","parse","body","grantPermission","permission","user","id","message","b","Error","name","delete","revokePermission","AUDIT_READ","query","securityReportQuerySchema","report","getSecurityReport","Date","startDate","endDate","anomalies","getAnomalousActivity","exports"],"sources":["/Users/yusukeyoshioka/projects/youtube/ai-chat/ai-chat-api/src/routes/security.ts"],"sourcesContent":["import express from 'express';\nimport { authMiddleware as requireAuth } from '../middleware/auth';\nimport { requirePermission } from '../middleware/security';\nimport { Permission } from '@prisma/client';\nimport * as rbacService from '../services/rbacService';\nimport * as securityService from '../services/securityService';\nimport {\n  permissionGrantSchema,\n  securityReportQuerySchema,\n} from '../schemas/securitySchema';\n\nconst router = express.Router();\n\n// Get organization users with permissions\nrouter.get(\n  '/users',\n  requireAuth,\n  requirePermission(Permission.ORG_READ),\n  async (req, res) => {\n    try {\n      const users = await rbacService.getOrganizationUsers(req.organizationId!);\n      res.json(users);\n    } catch (error) {\n      res.status(500).json({ error: 'Failed to fetch users' });\n    }\n  }\n);\n\n// Get user permissions\nrouter.get(\n  '/users/:userId/permissions',\n  requireAuth,\n  requirePermission(Permission.ORG_READ),\n  async (req, res) => {\n    try {\n      const permissions = await rbacService.getUserPermissions(\n        req.params.userId,\n        req.organizationId!\n      );\n      res.json({ permissions });\n    } catch (error) {\n      res.status(500).json({ error: 'Failed to fetch permissions' });\n    }\n  }\n);\n\n// Grant permission to user\nrouter.post(\n  '/users/:userId/permissions',\n  requireAuth,\n  requirePermission(Permission.SYSTEM_ADMIN),\n  async (req, res) => {\n    try {\n      const data = permissionGrantSchema.parse(req.body);\n\n      await rbacService.grantPermission(\n        req.params.userId,\n        req.organizationId!,\n        data.permission,\n        req.user!.id\n      );\n\n      res.json({ message: 'Permission granted successfully' });\n    } catch (error) {\n      if (error instanceof Error && error.name === 'ZodError') {\n        res.status(400).json({ error: 'Invalid request data' });\n      } else {\n        res.status(500).json({ error: 'Failed to grant permission' });\n      }\n    }\n  }\n);\n\n// Revoke permission from user\nrouter.delete(\n  '/users/:userId/permissions/:permission',\n  requireAuth,\n  requirePermission(Permission.SYSTEM_ADMIN),\n  async (req, res) => {\n    try {\n      await rbacService.revokePermission(\n        req.params.userId,\n        req.organizationId!,\n        req.params.permission as Permission,\n        req.user!.id\n      );\n\n      res.json({ message: 'Permission revoked successfully' });\n    } catch (error) {\n      res.status(500).json({ error: 'Failed to revoke permission' });\n    }\n  }\n);\n\n// Get security report\nrouter.get(\n  '/report',\n  requireAuth,\n  requirePermission(Permission.AUDIT_READ),\n  async (req, res) => {\n    try {\n      const query = securityReportQuerySchema.parse(req.query);\n\n      const report = await securityService.getSecurityReport(\n        req.organizationId!,\n        new Date(query.startDate),\n        new Date(query.endDate)\n      );\n\n      res.json(report);\n    } catch (error) {\n      if (error instanceof Error && error.name === 'ZodError') {\n        res.status(400).json({ error: 'Invalid query parameters' });\n      } else {\n        res.status(500).json({ error: 'Failed to generate security report' });\n      }\n    }\n  }\n);\n\n// Get anomalous activity\nrouter.get(\n  '/anomalies',\n  requireAuth,\n  requirePermission(Permission.SYSTEM_ADMIN),\n  async (req, res) => {\n    try {\n      const anomalies = await securityService.getAnomalousActivity(\n        req.organizationId!\n      );\n      res.json(anomalies);\n    } catch (error) {\n      res.status(500).json({ error: 'Failed to fetch anomalous activity' });\n    }\n  }\n);\n\nexport default router;\n"],"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","ignoreList":[]}