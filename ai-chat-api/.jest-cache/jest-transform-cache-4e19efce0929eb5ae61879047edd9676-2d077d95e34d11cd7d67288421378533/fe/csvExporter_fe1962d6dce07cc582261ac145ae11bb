4c84141ddf2fd4f44c3a0adaaf563317
"use strict";

/* istanbul ignore next */
function cov_6ilyeas22() {
  var path = "/Users/yusukeyoshioka/projects/youtube/ai-chat/ai-chat-api/src/utils/csvExporter.ts";
  var hash = "addd7859954b5c896e3501c8d93a9f2ee5e5e1a5";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/yusukeyoshioka/projects/youtube/ai-chat/ai-chat-api/src/utils/csvExporter.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 113
        }
      },
      "2": {
        start: {
          line: 4,
          column: 19
        },
        end: {
          line: 4,
          column: 38
        }
      },
      "3": {
        start: {
          line: 5,
          column: 20
        },
        end: {
          line: 28,
          column: 1
        }
      },
      "4": {
        start: {
          line: 6,
          column: 80
        },
        end: {
          line: 6,
          column: 87
        }
      },
      "5": {
        start: {
          line: 8,
          column: 4
        },
        end: {
          line: 10,
          column: 5
        }
      },
      "6": {
        start: {
          line: 9,
          column: 8
        },
        end: {
          line: 9,
          column: 18
        }
      },
      "7": {
        start: {
          line: 12,
          column: 26
        },
        end: {
          line: 15,
          column: 5
        }
      },
      "8": {
        start: {
          line: 17,
          column: 4
        },
        end: {
          line: 19,
          column: 5
        }
      },
      "9": {
        start: {
          line: 18,
          column: 8
        },
        end: {
          line: 18,
          column: 38
        }
      },
      "10": {
        start: {
          line: 21,
          column: 19
        },
        end: {
          line: 21,
          column: 55
        }
      },
      "11": {
        start: {
          line: 22,
          column: 14
        },
        end: {
          line: 22,
          column: 32
        }
      },
      "12": {
        start: {
          line: 24,
          column: 4
        },
        end: {
          line: 26,
          column: 5
        }
      },
      "13": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 25,
          column: 29
        }
      },
      "14": {
        start: {
          line: 27,
          column: 4
        },
        end: {
          line: 27,
          column: 15
        }
      },
      "15": {
        start: {
          line: 29,
          column: 0
        },
        end: {
          line: 29,
          column: 34
        }
      },
      "16": {
        start: {
          line: 31,
          column: 25
        },
        end: {
          line: 43,
          column: 1
        }
      },
      "17": {
        start: {
          line: 32,
          column: 4
        },
        end: {
          line: 33,
          column: 18
        }
      },
      "18": {
        start: {
          line: 33,
          column: 8
        },
        end: {
          line: 33,
          column: 18
        }
      },
      "19": {
        start: {
          line: 34,
          column: 14
        },
        end: {
          line: 34,
          column: 62
        }
      },
      "20": {
        start: {
          line: 36,
          column: 17
        },
        end: {
          line: 36,
          column: 32
        }
      },
      "21": {
        start: {
          line: 37,
          column: 18
        },
        end: {
          line: 37,
          column: 59
        }
      },
      "22": {
        start: {
          line: 38,
          column: 16
        },
        end: {
          line: 38,
          column: 52
        }
      },
      "23": {
        start: {
          line: 39,
          column: 18
        },
        end: {
          line: 39,
          column: 55
        }
      },
      "24": {
        start: {
          line: 40,
          column: 20
        },
        end: {
          line: 40,
          column: 59
        }
      },
      "25": {
        start: {
          line: 41,
          column: 20
        },
        end: {
          line: 41,
          column: 59
        }
      },
      "26": {
        start: {
          line: 42,
          column: 4
        },
        end: {
          line: 42,
          column: 68
        }
      },
      "27": {
        start: {
          line: 44,
          column: 0
        },
        end: {
          line: 44,
          column: 44
        }
      },
      "28": {
        start: {
          line: 46,
          column: 23
        },
        end: {
          line: 63,
          column: 1
        }
      },
      "29": {
        start: {
          line: 47,
          column: 4
        },
        end: {
          line: 49,
          column: 5
        }
      },
      "30": {
        start: {
          line: 48,
          column: 8
        },
        end: {
          line: 48,
          column: 18
        }
      },
      "31": {
        start: {
          line: 51,
          column: 4
        },
        end: {
          line: 53,
          column: 5
        }
      },
      "32": {
        start: {
          line: 52,
          column: 8
        },
        end: {
          line: 52,
          column: 36
        }
      },
      "33": {
        start: {
          line: 55,
          column: 4
        },
        end: {
          line: 57,
          column: 5
        }
      },
      "34": {
        start: {
          line: 56,
          column: 8
        },
        end: {
          line: 56,
          column: 37
        }
      },
      "35": {
        start: {
          line: 59,
          column: 14
        },
        end: {
          line: 59,
          column: 27
        }
      },
      "36": {
        start: {
          line: 61,
          column: 4
        },
        end: {
          line: 61,
          column: 40
        }
      },
      "37": {
        start: {
          line: 62,
          column: 4
        },
        end: {
          line: 62,
          column: 15
        }
      },
      "38": {
        start: {
          line: 64,
          column: 0
        },
        end: {
          line: 64,
          column: 40
        }
      },
      "39": {
        start: {
          line: 66,
          column: 0
        },
        end: {
          line: 113,
          column: 2
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 5,
            column: 20
          },
          end: {
            line: 5,
            column: 21
          }
        },
        loc: {
          start: {
            line: 5,
            column: 44
          },
          end: {
            line: 28,
            column: 1
          }
        },
        line: 5
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 31,
            column: 25
          },
          end: {
            line: 31,
            column: 26
          }
        },
        loc: {
          start: {
            line: 31,
            column: 35
          },
          end: {
            line: 43,
            column: 1
          }
        },
        line: 31
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 46,
            column: 23
          },
          end: {
            line: 46,
            column: 24
          }
        },
        loc: {
          start: {
            line: 46,
            column: 34
          },
          end: {
            line: 63,
            column: 1
          }
        },
        line: 46
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 5,
            column: 27
          },
          end: {
            line: 5,
            column: 39
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 5,
            column: 37
          },
          end: {
            line: 5,
            column: 39
          }
        }],
        line: 5
      },
      "1": {
        loc: {
          start: {
            line: 6,
            column: 20
          },
          end: {
            line: 6,
            column: 35
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 6,
            column: 32
          },
          end: {
            line: 6,
            column: 35
          }
        }],
        line: 6
      },
      "2": {
        loc: {
          start: {
            line: 6,
            column: 37
          },
          end: {
            line: 6,
            column: 58
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 6,
            column: 54
          },
          end: {
            line: 6,
            column: 58
          }
        }],
        line: 6
      },
      "3": {
        loc: {
          start: {
            line: 6,
            column: 60
          },
          end: {
            line: 6,
            column: 74
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 6,
            column: 70
          },
          end: {
            line: 6,
            column: 74
          }
        }],
        line: 6
      },
      "4": {
        loc: {
          start: {
            line: 8,
            column: 4
          },
          end: {
            line: 10,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 8,
            column: 4
          },
          end: {
            line: 10,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 8
      },
      "5": {
        loc: {
          start: {
            line: 8,
            column: 8
          },
          end: {
            line: 8,
            column: 34
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 8,
            column: 8
          },
          end: {
            line: 8,
            column: 13
          }
        }, {
          start: {
            line: 8,
            column: 17
          },
          end: {
            line: 8,
            column: 34
          }
        }],
        line: 8
      },
      "6": {
        loc: {
          start: {
            line: 17,
            column: 4
          },
          end: {
            line: 19,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 17,
            column: 4
          },
          end: {
            line: 19,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 17
      },
      "7": {
        loc: {
          start: {
            line: 17,
            column: 8
          },
          end: {
            line: 17,
            column: 35
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 17,
            column: 8
          },
          end: {
            line: 17,
            column: 14
          }
        }, {
          start: {
            line: 17,
            column: 18
          },
          end: {
            line: 17,
            column: 35
          }
        }],
        line: 17
      },
      "8": {
        loc: {
          start: {
            line: 24,
            column: 4
          },
          end: {
            line: 26,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 24,
            column: 4
          },
          end: {
            line: 26,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 24
      },
      "9": {
        loc: {
          start: {
            line: 32,
            column: 4
          },
          end: {
            line: 33,
            column: 18
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 32,
            column: 4
          },
          end: {
            line: 33,
            column: 18
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 32
      },
      "10": {
        loc: {
          start: {
            line: 34,
            column: 14
          },
          end: {
            line: 34,
            column: 62
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 34,
            column: 41
          },
          end: {
            line: 34,
            column: 55
          }
        }, {
          start: {
            line: 34,
            column: 58
          },
          end: {
            line: 34,
            column: 62
          }
        }],
        line: 34
      },
      "11": {
        loc: {
          start: {
            line: 47,
            column: 4
          },
          end: {
            line: 49,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 47,
            column: 4
          },
          end: {
            line: 49,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 47
      },
      "12": {
        loc: {
          start: {
            line: 47,
            column: 8
          },
          end: {
            line: 47,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 47,
            column: 8
          },
          end: {
            line: 47,
            column: 22
          }
        }, {
          start: {
            line: 47,
            column: 26
          },
          end: {
            line: 47,
            column: 45
          }
        }],
        line: 47
      },
      "13": {
        loc: {
          start: {
            line: 51,
            column: 4
          },
          end: {
            line: 53,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 51,
            column: 4
          },
          end: {
            line: 53,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 51
      },
      "14": {
        loc: {
          start: {
            line: 52,
            column: 15
          },
          end: {
            line: 52,
            column: 35
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 52,
            column: 23
          },
          end: {
            line: 52,
            column: 28
          }
        }, {
          start: {
            line: 52,
            column: 31
          },
          end: {
            line: 52,
            column: 35
          }
        }],
        line: 52
      },
      "15": {
        loc: {
          start: {
            line: 55,
            column: 4
          },
          end: {
            line: 57,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 55,
            column: 4
          },
          end: {
            line: 57,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 55
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0
    },
    b: {
      "0": [0],
      "1": [0],
      "2": [0],
      "3": [0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/yusukeyoshioka/projects/youtube/ai-chat/ai-chat-api/src/utils/csvExporter.ts",
      mappings: ";;;AAAA,uCAAkC;AAS3B,MAAM,WAAW,GAAG,CACzB,IAA+B,EAC/B,UAA4B,EAAE,EACtB,EAAE;IACV,MAAM,EACJ,MAAM,EACN,SAAS,GAAG,GAAG,EACf,cAAc,GAAG,IAAI,EACrB,OAAO,GAAG,IAAI,GACf,GAAG,OAAO,CAAC;IAEZ,kCAAkC;IAClC,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,MAAM,KAAK,CAAC,EAAE,CAAC;QAC/B,OAAO,EAAE,CAAC;IACZ,CAAC;IAED,2BAA2B;IAC3B,MAAM,aAAa,GAIf;QACF,SAAS;QACT,MAAM,EAAE,cAAc;KACvB,CAAC;IAEF,oCAAoC;IACpC,IAAI,MAAM,IAAI,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;QAChC,aAAa,CAAC,MAAM,GAAG,MAAM,CAAC;IAChC,CAAC;IAED,iCAAiC;IACjC,MAAM,MAAM,GAAG,IAAI,iBAAM,CAAC,aAAa,CAAC,CAAC;IACzC,IAAI,GAAG,GAAG,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;IAE7B,wCAAwC;IACxC,IAAI,OAAO,EAAE,CAAC;QACZ,GAAG,GAAG,QAAQ,GAAG,GAAG,CAAC;IACvB,CAAC;IAED,OAAO,GAAG,CAAC;AACb,CAAC,CAAC;AAzCW,QAAA,WAAW,eAyCtB;AAEF,0CAA0C;AACnC,MAAM,gBAAgB,GAAG,CAAC,IAA0B,EAAU,EAAE;IACrE,IAAI,CAAC,IAAI;QAAE,OAAO,EAAE,CAAC;IAErB,MAAM,CAAC,GAAG,OAAO,IAAI,KAAK,QAAQ,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;IAE3D,gCAAgC;IAChC,MAAM,IAAI,GAAG,CAAC,CAAC,WAAW,EAAE,CAAC;IAC7B,MAAM,KAAK,GAAG,MAAM,CAAC,CAAC,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;IACxD,MAAM,GAAG,GAAG,MAAM,CAAC,CAAC,CAAC,OAAO,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;IACjD,MAAM,KAAK,GAAG,MAAM,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;IACpD,MAAM,OAAO,GAAG,MAAM,CAAC,CAAC,CAAC,UAAU,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;IACxD,MAAM,OAAO,GAAG,MAAM,CAAC,CAAC,CAAC,UAAU,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;IAExD,OAAO,GAAG,IAAI,IAAI,KAAK,IAAI,GAAG,IAAI,KAAK,IAAI,OAAO,IAAI,OAAO,EAAE,CAAC;AAClE,CAAC,CAAC;AAdW,QAAA,gBAAgB,oBAc3B;AAEF,2CAA2C;AACpC,MAAM,cAAc,GAAG,CAAC,KAAc,EAAU,EAAE;IACvD,IAAI,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,SAAS,EAAE,CAAC;QAC1C,OAAO,EAAE,CAAC;IACZ,CAAC;IAED,qCAAqC;IACrC,IAAI,OAAO,KAAK,KAAK,SAAS,EAAE,CAAC;QAC/B,OAAO,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC;IAC9B,CAAC;IAED,4CAA4C;IAC5C,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE,CAAC;QAC9B,OAAO,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;IAC/B,CAAC;IAED,sDAAsD;IACtD,IAAI,GAAG,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC;IAExB,8BAA8B;IAC9B,GAAG,GAAG,GAAG,CAAC,OAAO,CAAC,WAAW,EAAE,GAAG,CAAC,CAAC;IAEpC,OAAO,GAAG,CAAC;AACb,CAAC,CAAC;AAtBW,QAAA,cAAc,kBAsBzB;AAEF,uDAAuD;AAC1C,QAAA,qBAAqB,GAAG;IACnC,aAAa,EAAE;QACb,EAAE,KAAK,EAAE,SAAS,EAAE,KAAK,EAAE,IAAI,EAAE;QACjC,EAAE,KAAK,EAAE,UAAU,EAAE,KAAK,EAAE,UAAU,EAAE;QACxC,EAAE,KAAK,EAAE,SAAS,EAAE,KAAK,EAAE,YAAY,EAAE;QACzC,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,aAAa,EAAE;QACtC,EAAE,KAAK,EAAE,YAAY,EAAE,KAAK,EAAE,WAAW,EAAE;QAC3C,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,UAAU,EAAE;QAClC,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,QAAQ,EAAE;QAChC,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,cAAc,EAAE;QACvC,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,WAAW,EAAE;KACtC;IACD,cAAc,EAAE;QACd,EAAE,KAAK,EAAE,QAAQ,EAAE,KAAK,EAAE,QAAQ,EAAE;QACpC,EAAE,KAAK,EAAE,SAAS,EAAE,KAAK,EAAE,OAAO,EAAE;QACpC,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE;QAC9B,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,kBAAkB,EAAE;QAC3C,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,OAAO,EAAE;QAChC,EAAE,KAAK,EAAE,OAAO,EAAE,KAAK,EAAE,WAAW,EAAE;QACtC,EAAE,KAAK,EAAE,OAAO,EAAE,KAAK,EAAE,iBAAiB,EAAE;QAC5C,EAAE,KAAK,EAAE,QAAQ,EAAE,KAAK,EAAE,YAAY,EAAE;KACzC;IACD,YAAY,EAAE;QACZ,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,QAAQ,EAAE;QAChC,EAAE,KAAK,EAAE,SAAS,EAAE,KAAK,EAAE,YAAY,EAAE;QACzC,EAAE,KAAK,EAAE,QAAQ,EAAE,KAAK,EAAE,YAAY,EAAE;QACxC,EAAE,KAAK,EAAE,OAAO,EAAE,KAAK,EAAE,YAAY,EAAE;QACvC,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,gBAAgB,EAAE;QACzC,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,kBAAkB,EAAE;QAC5C,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,kBAAkB,EAAE;KAC5C;IACD,UAAU,EAAE;QACV,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,UAAU,EAAE;QAClC,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,WAAW,EAAE;QACnC,EAAE,KAAK,EAAE,SAAS,EAAE,KAAK,EAAE,YAAY,EAAE;QACzC,EAAE,KAAK,EAAE,OAAO,EAAE,KAAK,EAAE,cAAc,EAAE;QACzC,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE;KACnC;IACD,aAAa,EAAE;QACb,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE;QAC9B,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,kBAAkB,EAAE;QAC3C,EAAE,KAAK,EAAE,YAAY,EAAE,KAAK,EAAE,aAAa,EAAE;QAC7C,EAAE,KAAK,EAAE,OAAO,EAAE,KAAK,EAAE,WAAW,EAAE;QACtC,EAAE,KAAK,EAAE,QAAQ,EAAE,KAAK,EAAE,UAAU,EAAE;QACtC,EAAE,KAAK,EAAE,UAAU,EAAE,KAAK,EAAE,UAAU,EAAE;QACxC,EAAE,KAAK,EAAE,cAAc,EAAE,KAAK,EAAE,aAAa,EAAE;KAChD;CACF,CAAC",
      names: [],
      sources: ["/Users/yusukeyoshioka/projects/youtube/ai-chat/ai-chat-api/src/utils/csvExporter.ts"],
      sourcesContent: ["import { Parser } from 'json2csv';\n\ninterface CSVExportOptions {\n  fields?: string[];\n  delimiter?: string;\n  includeHeaders?: boolean;\n  withBOM?: boolean;\n}\n\nexport const exportToCSV = (\n  data: Record<string, unknown>[],\n  options: CSVExportOptions = {}\n): string => {\n  const {\n    fields,\n    delimiter = ',',\n    includeHeaders = true,\n    withBOM = true,\n  } = options;\n\n  // If no data, return empty string\n  if (!data || data.length === 0) {\n    return '';\n  }\n\n  // Configure parser options\n  const parserOptions: {\n    delimiter: string;\n    header: boolean;\n    fields?: string[];\n  } = {\n    delimiter,\n    header: includeHeaders,\n  };\n\n  // If fields are specified, use them\n  if (fields && fields.length > 0) {\n    parserOptions.fields = fields;\n  }\n\n  // Create parser and convert data\n  const parser = new Parser(parserOptions);\n  let csv = parser.parse(data);\n\n  // Add UTF-8 BOM for Excel compatibility\n  if (withBOM) {\n    csv = '\\ufeff' + csv;\n  }\n\n  return csv;\n};\n\n// Helper function to format dates for CSV\nexport const formatDateForCSV = (date: Date | string | null): string => {\n  if (!date) return '';\n\n  const d = typeof date === 'string' ? new Date(date) : date;\n\n  // Format as YYYY-MM-DD HH:mm:ss\n  const year = d.getFullYear();\n  const month = String(d.getMonth() + 1).padStart(2, '0');\n  const day = String(d.getDate()).padStart(2, '0');\n  const hours = String(d.getHours()).padStart(2, '0');\n  const minutes = String(d.getMinutes()).padStart(2, '0');\n  const seconds = String(d.getSeconds()).padStart(2, '0');\n\n  return `${year}-${month}-${day} ${hours}:${minutes}:${seconds}`;\n};\n\n// Helper function to sanitize data for CSV\nexport const sanitizeForCSV = (value: unknown): string => {\n  if (value === null || value === undefined) {\n    return '';\n  }\n\n  // Convert boolean to readable string\n  if (typeof value === 'boolean') {\n    return value ? 'Yes' : 'No';\n  }\n\n  // Convert arrays and objects to JSON string\n  if (typeof value === 'object') {\n    return JSON.stringify(value);\n  }\n\n  // Convert to string and remove problematic characters\n  let str = String(value);\n\n  // Remove line breaks and tabs\n  str = str.replace(/[\\r\\n\\t]/g, ' ');\n\n  return str;\n};\n\n// Report-specific field mappings with Japanese headers\nexport const REPORT_FIELD_MAPPINGS = {\n  chat_sessions: [\n    { label: '\u30BB\u30C3\u30B7\u30E7\u30F3ID', value: 'id' },\n    { label: '\u30A6\u30A3\u30B8\u30A7\u30C3\u30C8ID', value: 'widgetId' },\n    { label: '\u30A6\u30A3\u30B8\u30A7\u30C3\u30C8\u540D', value: 'widgetName' },\n    { label: '\u4F1A\u793E\u540D', value: 'companyName' },\n    { label: '\u30E6\u30FC\u30B6\u30FC\u30A8\u30FC\u30B8\u30A7\u30F3\u30C8', value: 'userAgent' },\n    { label: '\u8CEA\u554F', value: 'question' },\n    { label: '\u56DE\u7B54', value: 'answer' },\n    { label: '\u6E80\u8DB3\u5EA6', value: 'satisfaction' },\n    { label: '\u4F5C\u6210\u65E5\u6642', value: 'createdAt' },\n  ],\n  user_analytics: [\n    { label: '\u30E6\u30FC\u30B6\u30FCID', value: 'userId' },\n    { label: '\u30E1\u30FC\u30EB\u30A2\u30C9\u30EC\u30B9', value: 'email' },\n    { label: '\u540D\u524D', value: 'name' },\n    { label: '\u7D44\u7E54\u540D', value: 'organizationName' },\n    { label: '\u30ED\u30FC\u30EB', value: 'roles' },\n    { label: '\u30C1\u30E3\u30C3\u30C8\u6570', value: 'chatCount' },\n    { label: '\u6E80\u8DB3\u5EA6\u5E73\u5747', value: 'avgSatisfaction' },\n    { label: '\u6700\u7D42\u30A2\u30AF\u30BB\u30B9', value: 'lastActive' },\n  ],\n  satisfaction: [\n    { label: '\u671F\u9593', value: 'period' },\n    { label: '\u30A6\u30A3\u30B8\u30A7\u30C3\u30C8\u540D', value: 'widgetName' },\n    { label: '\u7DCF\u30C1\u30E3\u30C3\u30C8\u6570', value: 'totalChats' },\n    { label: '\u8A55\u4FA1\u6E08\u307F\u6570', value: 'ratedChats' },\n    { label: '\u6E80\u8DB3\u6570', value: 'satisfiedCount' },\n    { label: '\u4E0D\u6E80\u8DB3\u6570', value: 'unsatisfiedCount' },\n    { label: '\u6E80\u8DB3\u7387', value: 'satisfactionRate' },\n  ],\n  unresolved: [\n    { label: '\u8CEA\u554F', value: 'question' },\n    { label: '\u983B\u5EA6', value: 'frequency' },\n    { label: '\u30A6\u30A3\u30B8\u30A7\u30C3\u30C8\u540D', value: 'widgetName' },\n    { label: '\u6700\u7D42\u767A\u751F\u65E5', value: 'lastOccurred' },\n    { label: '\u89E3\u6C7A\u72B6\u6CC1', value: 'status' },\n  ],\n  usage_summary: [\n    { label: '\u65E5\u4ED8', value: 'date' },\n    { label: '\u7D44\u7E54\u540D', value: 'organizationName' },\n    { label: '\u30A2\u30AF\u30C6\u30A3\u30D6\u30E6\u30FC\u30B6\u30FC\u6570', value: 'activeUsers' },\n    { label: '\u30C1\u30E3\u30C3\u30C8\u6570', value: 'chatCount' },\n    { label: 'FAQ\u95B2\u89A7\u6570', value: 'faqViews' },\n    { label: 'API\u547C\u3073\u51FA\u3057\u6570', value: 'apiCalls' },\n    { label: '\u30B9\u30C8\u30EC\u30FC\u30B8\u4F7F\u7528\u91CF(MB)', value: 'storageUsed' },\n  ],\n};\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "addd7859954b5c896e3501c8d93a9f2ee5e5e1a5"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_6ilyeas22 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_6ilyeas22();
cov_6ilyeas22().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_6ilyeas22().s[1]++;
exports.REPORT_FIELD_MAPPINGS = exports.sanitizeForCSV = exports.formatDateForCSV = exports.exportToCSV = void 0;
const json2csv_1 =
/* istanbul ignore next */
(cov_6ilyeas22().s[2]++, require("json2csv"));
/* istanbul ignore next */
cov_6ilyeas22().s[3]++;
const exportToCSV = (data, options =
/* istanbul ignore next */
(cov_6ilyeas22().b[0][0]++, {})) => {
  /* istanbul ignore next */
  cov_6ilyeas22().f[0]++;
  const {
    fields,
    delimiter =
    /* istanbul ignore next */
    (cov_6ilyeas22().b[1][0]++, ','),
    includeHeaders =
    /* istanbul ignore next */
    (cov_6ilyeas22().b[2][0]++, true),
    withBOM =
    /* istanbul ignore next */
    (cov_6ilyeas22().b[3][0]++, true)
  } =
  /* istanbul ignore next */
  (cov_6ilyeas22().s[4]++, options);
  // If no data, return empty string
  /* istanbul ignore next */
  cov_6ilyeas22().s[5]++;
  if (
  /* istanbul ignore next */
  (cov_6ilyeas22().b[5][0]++, !data) ||
  /* istanbul ignore next */
  (cov_6ilyeas22().b[5][1]++, data.length === 0)) {
    /* istanbul ignore next */
    cov_6ilyeas22().b[4][0]++;
    cov_6ilyeas22().s[6]++;
    return '';
  } else
  /* istanbul ignore next */
  {
    cov_6ilyeas22().b[4][1]++;
  }
  // Configure parser options
  const parserOptions =
  /* istanbul ignore next */
  (cov_6ilyeas22().s[7]++, {
    delimiter,
    header: includeHeaders
  });
  // If fields are specified, use them
  /* istanbul ignore next */
  cov_6ilyeas22().s[8]++;
  if (
  /* istanbul ignore next */
  (cov_6ilyeas22().b[7][0]++, fields) &&
  /* istanbul ignore next */
  (cov_6ilyeas22().b[7][1]++, fields.length > 0)) {
    /* istanbul ignore next */
    cov_6ilyeas22().b[6][0]++;
    cov_6ilyeas22().s[9]++;
    parserOptions.fields = fields;
  } else
  /* istanbul ignore next */
  {
    cov_6ilyeas22().b[6][1]++;
  }
  // Create parser and convert data
  const parser =
  /* istanbul ignore next */
  (cov_6ilyeas22().s[10]++, new json2csv_1.Parser(parserOptions));
  let csv =
  /* istanbul ignore next */
  (cov_6ilyeas22().s[11]++, parser.parse(data));
  // Add UTF-8 BOM for Excel compatibility
  /* istanbul ignore next */
  cov_6ilyeas22().s[12]++;
  if (withBOM) {
    /* istanbul ignore next */
    cov_6ilyeas22().b[8][0]++;
    cov_6ilyeas22().s[13]++;
    csv = '\ufeff' + csv;
  } else
  /* istanbul ignore next */
  {
    cov_6ilyeas22().b[8][1]++;
  }
  cov_6ilyeas22().s[14]++;
  return csv;
};
/* istanbul ignore next */
cov_6ilyeas22().s[15]++;
exports.exportToCSV = exportToCSV;
// Helper function to format dates for CSV
/* istanbul ignore next */
cov_6ilyeas22().s[16]++;
const formatDateForCSV = date => {
  /* istanbul ignore next */
  cov_6ilyeas22().f[1]++;
  cov_6ilyeas22().s[17]++;
  if (!date) {
    /* istanbul ignore next */
    cov_6ilyeas22().b[9][0]++;
    cov_6ilyeas22().s[18]++;
    return '';
  } else
  /* istanbul ignore next */
  {
    cov_6ilyeas22().b[9][1]++;
  }
  const d =
  /* istanbul ignore next */
  (cov_6ilyeas22().s[19]++, typeof date === 'string' ?
  /* istanbul ignore next */
  (cov_6ilyeas22().b[10][0]++, new Date(date)) :
  /* istanbul ignore next */
  (cov_6ilyeas22().b[10][1]++, date));
  // Format as YYYY-MM-DD HH:mm:ss
  const year =
  /* istanbul ignore next */
  (cov_6ilyeas22().s[20]++, d.getFullYear());
  const month =
  /* istanbul ignore next */
  (cov_6ilyeas22().s[21]++, String(d.getMonth() + 1).padStart(2, '0'));
  const day =
  /* istanbul ignore next */
  (cov_6ilyeas22().s[22]++, String(d.getDate()).padStart(2, '0'));
  const hours =
  /* istanbul ignore next */
  (cov_6ilyeas22().s[23]++, String(d.getHours()).padStart(2, '0'));
  const minutes =
  /* istanbul ignore next */
  (cov_6ilyeas22().s[24]++, String(d.getMinutes()).padStart(2, '0'));
  const seconds =
  /* istanbul ignore next */
  (cov_6ilyeas22().s[25]++, String(d.getSeconds()).padStart(2, '0'));
  /* istanbul ignore next */
  cov_6ilyeas22().s[26]++;
  return `${year}-${month}-${day} ${hours}:${minutes}:${seconds}`;
};
/* istanbul ignore next */
cov_6ilyeas22().s[27]++;
exports.formatDateForCSV = formatDateForCSV;
// Helper function to sanitize data for CSV
/* istanbul ignore next */
cov_6ilyeas22().s[28]++;
const sanitizeForCSV = value => {
  /* istanbul ignore next */
  cov_6ilyeas22().f[2]++;
  cov_6ilyeas22().s[29]++;
  if (
  /* istanbul ignore next */
  (cov_6ilyeas22().b[12][0]++, value === null) ||
  /* istanbul ignore next */
  (cov_6ilyeas22().b[12][1]++, value === undefined)) {
    /* istanbul ignore next */
    cov_6ilyeas22().b[11][0]++;
    cov_6ilyeas22().s[30]++;
    return '';
  } else
  /* istanbul ignore next */
  {
    cov_6ilyeas22().b[11][1]++;
  }
  // Convert boolean to readable string
  cov_6ilyeas22().s[31]++;
  if (typeof value === 'boolean') {
    /* istanbul ignore next */
    cov_6ilyeas22().b[13][0]++;
    cov_6ilyeas22().s[32]++;
    return value ?
    /* istanbul ignore next */
    (cov_6ilyeas22().b[14][0]++, 'Yes') :
    /* istanbul ignore next */
    (cov_6ilyeas22().b[14][1]++, 'No');
  } else
  /* istanbul ignore next */
  {
    cov_6ilyeas22().b[13][1]++;
  }
  // Convert arrays and objects to JSON string
  cov_6ilyeas22().s[33]++;
  if (typeof value === 'object') {
    /* istanbul ignore next */
    cov_6ilyeas22().b[15][0]++;
    cov_6ilyeas22().s[34]++;
    return JSON.stringify(value);
  } else
  /* istanbul ignore next */
  {
    cov_6ilyeas22().b[15][1]++;
  }
  // Convert to string and remove problematic characters
  let str =
  /* istanbul ignore next */
  (cov_6ilyeas22().s[35]++, String(value));
  // Remove line breaks and tabs
  /* istanbul ignore next */
  cov_6ilyeas22().s[36]++;
  str = str.replace(/[\r\n\t]/g, ' ');
  /* istanbul ignore next */
  cov_6ilyeas22().s[37]++;
  return str;
};
/* istanbul ignore next */
cov_6ilyeas22().s[38]++;
exports.sanitizeForCSV = sanitizeForCSV;
// Report-specific field mappings with Japanese headers
/* istanbul ignore next */
cov_6ilyeas22().s[39]++;
exports.REPORT_FIELD_MAPPINGS = {
  chat_sessions: [{
    label: 'セッションID',
    value: 'id'
  }, {
    label: 'ウィジェットID',
    value: 'widgetId'
  }, {
    label: 'ウィジェット名',
    value: 'widgetName'
  }, {
    label: '会社名',
    value: 'companyName'
  }, {
    label: 'ユーザーエージェント',
    value: 'userAgent'
  }, {
    label: '質問',
    value: 'question'
  }, {
    label: '回答',
    value: 'answer'
  }, {
    label: '満足度',
    value: 'satisfaction'
  }, {
    label: '作成日時',
    value: 'createdAt'
  }],
  user_analytics: [{
    label: 'ユーザーID',
    value: 'userId'
  }, {
    label: 'メールアドレス',
    value: 'email'
  }, {
    label: '名前',
    value: 'name'
  }, {
    label: '組織名',
    value: 'organizationName'
  }, {
    label: 'ロール',
    value: 'roles'
  }, {
    label: 'チャット数',
    value: 'chatCount'
  }, {
    label: '満足度平均',
    value: 'avgSatisfaction'
  }, {
    label: '最終アクセス',
    value: 'lastActive'
  }],
  satisfaction: [{
    label: '期間',
    value: 'period'
  }, {
    label: 'ウィジェット名',
    value: 'widgetName'
  }, {
    label: '総チャット数',
    value: 'totalChats'
  }, {
    label: '評価済み数',
    value: 'ratedChats'
  }, {
    label: '満足数',
    value: 'satisfiedCount'
  }, {
    label: '不満足数',
    value: 'unsatisfiedCount'
  }, {
    label: '満足率',
    value: 'satisfactionRate'
  }],
  unresolved: [{
    label: '質問',
    value: 'question'
  }, {
    label: '頻度',
    value: 'frequency'
  }, {
    label: 'ウィジェット名',
    value: 'widgetName'
  }, {
    label: '最終発生日',
    value: 'lastOccurred'
  }, {
    label: '解決状況',
    value: 'status'
  }],
  usage_summary: [{
    label: '日付',
    value: 'date'
  }, {
    label: '組織名',
    value: 'organizationName'
  }, {
    label: 'アクティブユーザー数',
    value: 'activeUsers'
  }, {
    label: 'チャット数',
    value: 'chatCount'
  }, {
    label: 'FAQ閲覧数',
    value: 'faqViews'
  }, {
    label: 'API呼び出し数',
    value: 'apiCalls'
  }, {
    label: 'ストレージ使用量(MB)',
    value: 'storageUsed'
  }]
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,