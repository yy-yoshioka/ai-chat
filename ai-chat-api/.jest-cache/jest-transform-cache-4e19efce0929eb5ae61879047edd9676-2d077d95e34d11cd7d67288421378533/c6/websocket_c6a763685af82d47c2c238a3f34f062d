718823300638dee73a230b86d5ae8f93
"use strict";

/* istanbul ignore next */
function cov_1d2x1bxizy() {
  var path = "/Users/yusukeyoshioka/projects/youtube/ai-chat/ai-chat-api/src/lib/websocket.ts";
  var hash = "cf3c116cce9c9ee5bbb3a6dcbf17ac1f703cd03c";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/yusukeyoshioka/projects/youtube/ai-chat/ai-chat-api/src/lib/websocket.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 16
        },
        end: {
          line: 10,
          column: 1
        }
      },
      "1": {
        start: {
          line: 3,
          column: 28
        },
        end: {
          line: 3,
          column: 110
        }
      },
      "2": {
        start: {
          line: 3,
          column: 91
        },
        end: {
          line: 3,
          column: 106
        }
      },
      "3": {
        start: {
          line: 4,
          column: 4
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "4": {
        start: {
          line: 5,
          column: 36
        },
        end: {
          line: 5,
          column: 97
        }
      },
      "5": {
        start: {
          line: 5,
          column: 42
        },
        end: {
          line: 5,
          column: 70
        }
      },
      "6": {
        start: {
          line: 5,
          column: 85
        },
        end: {
          line: 5,
          column: 95
        }
      },
      "7": {
        start: {
          line: 6,
          column: 35
        },
        end: {
          line: 6,
          column: 100
        }
      },
      "8": {
        start: {
          line: 6,
          column: 41
        },
        end: {
          line: 6,
          column: 73
        }
      },
      "9": {
        start: {
          line: 6,
          column: 88
        },
        end: {
          line: 6,
          column: 98
        }
      },
      "10": {
        start: {
          line: 7,
          column: 32
        },
        end: {
          line: 7,
          column: 116
        }
      },
      "11": {
        start: {
          line: 8,
          column: 8
        },
        end: {
          line: 8,
          column: 78
        }
      },
      "12": {
        start: {
          line: 11,
          column: 22
        },
        end: {
          line: 13,
          column: 1
        }
      },
      "13": {
        start: {
          line: 12,
          column: 4
        },
        end: {
          line: 12,
          column: 62
        }
      },
      "14": {
        start: {
          line: 14,
          column: 0
        },
        end: {
          line: 14,
          column: 62
        }
      },
      "15": {
        start: {
          line: 15,
          column: 0
        },
        end: {
          line: 15,
          column: 37
        }
      },
      "16": {
        start: {
          line: 16,
          column: 20
        },
        end: {
          line: 16,
          column: 40
        }
      },
      "17": {
        start: {
          line: 17,
          column: 23
        },
        end: {
          line: 17,
          column: 63
        }
      },
      "18": {
        start: {
          line: 18,
          column: 17
        },
        end: {
          line: 18,
          column: 36
        }
      },
      "19": {
        start: {
          line: 20,
          column: 15
        },
        end: {
          line: 31,
          column: 6
        }
      },
      "20": {
        start: {
          line: 33,
          column: 4
        },
        end: {
          line: 60,
          column: 8
        }
      },
      "21": {
        start: {
          line: 33,
          column: 29
        },
        end: {
          line: 60,
          column: 6
        }
      },
      "22": {
        start: {
          line: 34,
          column: 8
        },
        end: {
          line: 59,
          column: 9
        }
      },
      "23": {
        start: {
          line: 35,
          column: 26
        },
        end: {
          line: 35,
          column: 53
        }
      },
      "24": {
        start: {
          line: 36,
          column: 30
        },
        end: {
          line: 36,
          column: 61
        }
      },
      "25": {
        start: {
          line: 37,
          column: 12
        },
        end: {
          line: 54,
          column: 13
        }
      },
      "26": {
        start: {
          line: 39,
          column: 32
        },
        end: {
          line: 39,
          column: 92
        }
      },
      "27": {
        start: {
          line: 40,
          column: 16
        },
        end: {
          line: 40,
          column: 47
        }
      },
      "28": {
        start: {
          line: 42,
          column: 17
        },
        end: {
          line: 54,
          column: 13
        }
      },
      "29": {
        start: {
          line: 44,
          column: 31
        },
        end: {
          line: 46,
          column: 18
        }
      },
      "30": {
        start: {
          line: 47,
          column: 16
        },
        end: {
          line: 49,
          column: 17
        }
      },
      "31": {
        start: {
          line: 48,
          column: 20
        },
        end: {
          line: 48,
          column: 65
        }
      },
      "32": {
        start: {
          line: 50,
          column: 16
        },
        end: {
          line: 50,
          column: 45
        }
      },
      "33": {
        start: {
          line: 53,
          column: 16
        },
        end: {
          line: 53,
          column: 66
        }
      },
      "34": {
        start: {
          line: 55,
          column: 12
        },
        end: {
          line: 55,
          column: 19
        }
      },
      "35": {
        start: {
          line: 58,
          column: 12
        },
        end: {
          line: 58,
          column: 53
        }
      },
      "36": {
        start: {
          line: 61,
          column: 4
        },
        end: {
          line: 132,
          column: 7
        }
      },
      "37": {
        start: {
          line: 62,
          column: 8
        },
        end: {
          line: 62,
          column: 54
        }
      },
      "38": {
        start: {
          line: 64,
          column: 8
        },
        end: {
          line: 69,
          column: 9
        }
      },
      "39": {
        start: {
          line: 65,
          column: 12
        },
        end: {
          line: 65,
          column: 49
        }
      },
      "40": {
        start: {
          line: 67,
          column: 13
        },
        end: {
          line: 69,
          column: 9
        }
      },
      "41": {
        start: {
          line: 68,
          column: 12
        },
        end: {
          line: 68,
          column: 54
        }
      },
      "42": {
        start: {
          line: 71,
          column: 8
        },
        end: {
          line: 117,
          column: 12
        }
      },
      "43": {
        start: {
          line: 71,
          column: 44
        },
        end: {
          line: 117,
          column: 10
        }
      },
      "44": {
        start: {
          line: 73,
          column: 12
        },
        end: {
          line: 116,
          column: 13
        }
      },
      "45": {
        start: {
          line: 74,
          column: 36
        },
        end: {
          line: 74,
          column: 40
        }
      },
      "46": {
        start: {
          line: 76,
          column: 32
        },
        end: {
          line: 87,
          column: 18
        }
      },
      "47": {
        start: {
          line: 89,
          column: 16
        },
        end: {
          line: 92,
          column: 19
        }
      },
      "48": {
        start: {
          line: 96,
          column: 16
        },
        end: {
          line: 109,
          column: 26
        }
      },
      "49": {
        start: {
          line: 96,
          column: 33
        },
        end: {
          line: 109,
          column: 18
        }
      },
      "50": {
        start: {
          line: 97,
          column: 39
        },
        end: {
          line: 97,
          column: 94
        }
      },
      "51": {
        start: {
          line: 99,
          column: 20
        },
        end: {
          line: 102,
          column: 23
        }
      },
      "52": {
        start: {
          line: 104,
          column: 20
        },
        end: {
          line: 108,
          column: 23
        }
      },
      "53": {
        start: {
          line: 112,
          column: 16
        },
        end: {
          line: 112,
          column: 60
        }
      },
      "54": {
        start: {
          line: 113,
          column: 16
        },
        end: {
          line: 115,
          column: 19
        }
      },
      "55": {
        start: {
          line: 119,
          column: 8
        },
        end: {
          line: 127,
          column: 11
        }
      },
      "56": {
        start: {
          line: 120,
          column: 25
        },
        end: {
          line: 122,
          column: 46
        }
      },
      "57": {
        start: {
          line: 123,
          column: 12
        },
        end: {
          line: 126,
          column: 15
        }
      },
      "58": {
        start: {
          line: 129,
          column: 8
        },
        end: {
          line: 131,
          column: 11
        }
      },
      "59": {
        start: {
          line: 130,
          column: 12
        },
        end: {
          line: 130,
          column: 61
        }
      },
      "60": {
        start: {
          line: 133,
          column: 4
        },
        end: {
          line: 133,
          column: 14
        }
      },
      "61": {
        start: {
          line: 135,
          column: 0
        },
        end: {
          line: 135,
          column: 50
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 44
          },
          end: {
            line: 2,
            column: 45
          }
        },
        loc: {
          start: {
            line: 2,
            column: 89
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "adopt",
        decl: {
          start: {
            line: 3,
            column: 13
          },
          end: {
            line: 3,
            column: 18
          }
        },
        loc: {
          start: {
            line: 3,
            column: 26
          },
          end: {
            line: 3,
            column: 112
          }
        },
        line: 3
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 3,
            column: 70
          },
          end: {
            line: 3,
            column: 71
          }
        },
        loc: {
          start: {
            line: 3,
            column: 89
          },
          end: {
            line: 3,
            column: 108
          }
        },
        line: 3
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 4,
            column: 36
          },
          end: {
            line: 4,
            column: 37
          }
        },
        loc: {
          start: {
            line: 4,
            column: 63
          },
          end: {
            line: 9,
            column: 5
          }
        },
        line: 4
      },
      "4": {
        name: "fulfilled",
        decl: {
          start: {
            line: 5,
            column: 17
          },
          end: {
            line: 5,
            column: 26
          }
        },
        loc: {
          start: {
            line: 5,
            column: 34
          },
          end: {
            line: 5,
            column: 99
          }
        },
        line: 5
      },
      "5": {
        name: "rejected",
        decl: {
          start: {
            line: 6,
            column: 17
          },
          end: {
            line: 6,
            column: 25
          }
        },
        loc: {
          start: {
            line: 6,
            column: 33
          },
          end: {
            line: 6,
            column: 102
          }
        },
        line: 6
      },
      "6": {
        name: "step",
        decl: {
          start: {
            line: 7,
            column: 17
          },
          end: {
            line: 7,
            column: 21
          }
        },
        loc: {
          start: {
            line: 7,
            column: 30
          },
          end: {
            line: 7,
            column: 118
          }
        },
        line: 7
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 11,
            column: 56
          },
          end: {
            line: 11,
            column: 57
          }
        },
        loc: {
          start: {
            line: 11,
            column: 71
          },
          end: {
            line: 13,
            column: 1
          }
        },
        line: 11
      },
      "8": {
        name: "initializeWebSocket",
        decl: {
          start: {
            line: 19,
            column: 9
          },
          end: {
            line: 19,
            column: 28
          }
        },
        loc: {
          start: {
            line: 19,
            column: 41
          },
          end: {
            line: 134,
            column: 1
          }
        },
        line: 19
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 33,
            column: 11
          },
          end: {
            line: 33,
            column: 12
          }
        },
        loc: {
          start: {
            line: 33,
            column: 29
          },
          end: {
            line: 60,
            column: 6
          }
        },
        line: 33
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 33,
            column: 61
          },
          end: {
            line: 33,
            column: 62
          }
        },
        loc: {
          start: {
            line: 33,
            column: 74
          },
          end: {
            line: 60,
            column: 5
          }
        },
        line: 33
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 61,
            column: 24
          },
          end: {
            line: 61,
            column: 25
          }
        },
        loc: {
          start: {
            line: 61,
            column: 36
          },
          end: {
            line: 132,
            column: 5
          }
        },
        line: 61
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 71,
            column: 34
          },
          end: {
            line: 71,
            column: 35
          }
        },
        loc: {
          start: {
            line: 71,
            column: 44
          },
          end: {
            line: 117,
            column: 10
          }
        },
        line: 71
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 71,
            column: 76
          },
          end: {
            line: 71,
            column: 77
          }
        },
        loc: {
          start: {
            line: 71,
            column: 89
          },
          end: {
            line: 117,
            column: 9
          }
        },
        line: 71
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 96,
            column: 27
          },
          end: {
            line: 96,
            column: 28
          }
        },
        loc: {
          start: {
            line: 96,
            column: 33
          },
          end: {
            line: 109,
            column: 18
          }
        },
        line: 96
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 96,
            column: 65
          },
          end: {
            line: 96,
            column: 66
          }
        },
        loc: {
          start: {
            line: 96,
            column: 78
          },
          end: {
            line: 109,
            column: 17
          }
        },
        line: 96
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 119,
            column: 33
          },
          end: {
            line: 119,
            column: 34
          }
        },
        loc: {
          start: {
            line: 119,
            column: 43
          },
          end: {
            line: 127,
            column: 9
          }
        },
        line: 119
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 129,
            column: 32
          },
          end: {
            line: 129,
            column: 33
          }
        },
        loc: {
          start: {
            line: 129,
            column: 38
          },
          end: {
            line: 131,
            column: 9
          }
        },
        line: 129
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 16
          },
          end: {
            line: 10,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 17
          },
          end: {
            line: 2,
            column: 21
          }
        }, {
          start: {
            line: 2,
            column: 25
          },
          end: {
            line: 2,
            column: 39
          }
        }, {
          start: {
            line: 2,
            column: 44
          },
          end: {
            line: 10,
            column: 1
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 3,
            column: 35
          },
          end: {
            line: 3,
            column: 109
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 3,
            column: 56
          },
          end: {
            line: 3,
            column: 61
          }
        }, {
          start: {
            line: 3,
            column: 64
          },
          end: {
            line: 3,
            column: 109
          }
        }],
        line: 3
      },
      "2": {
        loc: {
          start: {
            line: 4,
            column: 16
          },
          end: {
            line: 4,
            column: 34
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 4,
            column: 16
          },
          end: {
            line: 4,
            column: 17
          }
        }, {
          start: {
            line: 4,
            column: 22
          },
          end: {
            line: 4,
            column: 33
          }
        }],
        line: 4
      },
      "3": {
        loc: {
          start: {
            line: 7,
            column: 32
          },
          end: {
            line: 7,
            column: 115
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 7,
            column: 46
          },
          end: {
            line: 7,
            column: 67
          }
        }, {
          start: {
            line: 7,
            column: 70
          },
          end: {
            line: 7,
            column: 115
          }
        }],
        line: 7
      },
      "4": {
        loc: {
          start: {
            line: 8,
            column: 51
          },
          end: {
            line: 8,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 8,
            column: 51
          },
          end: {
            line: 8,
            column: 61
          }
        }, {
          start: {
            line: 8,
            column: 65
          },
          end: {
            line: 8,
            column: 67
          }
        }],
        line: 8
      },
      "5": {
        loc: {
          start: {
            line: 11,
            column: 22
          },
          end: {
            line: 13,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 11,
            column: 23
          },
          end: {
            line: 11,
            column: 27
          }
        }, {
          start: {
            line: 11,
            column: 31
          },
          end: {
            line: 11,
            column: 51
          }
        }, {
          start: {
            line: 11,
            column: 56
          },
          end: {
            line: 13,
            column: 1
          }
        }],
        line: 11
      },
      "6": {
        loc: {
          start: {
            line: 12,
            column: 11
          },
          end: {
            line: 12,
            column: 61
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 12,
            column: 37
          },
          end: {
            line: 12,
            column: 40
          }
        }, {
          start: {
            line: 12,
            column: 43
          },
          end: {
            line: 12,
            column: 61
          }
        }],
        line: 12
      },
      "7": {
        loc: {
          start: {
            line: 12,
            column: 12
          },
          end: {
            line: 12,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 12,
            column: 12
          },
          end: {
            line: 12,
            column: 15
          }
        }, {
          start: {
            line: 12,
            column: 19
          },
          end: {
            line: 12,
            column: 33
          }
        }],
        line: 12
      },
      "8": {
        loc: {
          start: {
            line: 25,
            column: 16
          },
          end: {
            line: 25,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 25,
            column: 16
          },
          end: {
            line: 25,
            column: 40
          }
        }, {
          start: {
            line: 25,
            column: 44
          },
          end: {
            line: 25,
            column: 67
          }
        }],
        line: 25
      },
      "9": {
        loc: {
          start: {
            line: 37,
            column: 12
          },
          end: {
            line: 54,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 37,
            column: 12
          },
          end: {
            line: 54,
            column: 13
          }
        }, {
          start: {
            line: 42,
            column: 17
          },
          end: {
            line: 54,
            column: 13
          }
        }],
        line: 37
      },
      "10": {
        loc: {
          start: {
            line: 42,
            column: 17
          },
          end: {
            line: 54,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 42,
            column: 17
          },
          end: {
            line: 54,
            column: 13
          }
        }, {
          start: {
            line: 52,
            column: 17
          },
          end: {
            line: 54,
            column: 13
          }
        }],
        line: 42
      },
      "11": {
        loc: {
          start: {
            line: 47,
            column: 16
          },
          end: {
            line: 49,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 47,
            column: 16
          },
          end: {
            line: 49,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 47
      },
      "12": {
        loc: {
          start: {
            line: 64,
            column: 8
          },
          end: {
            line: 69,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 64,
            column: 8
          },
          end: {
            line: 69,
            column: 9
          }
        }, {
          start: {
            line: 67,
            column: 13
          },
          end: {
            line: 69,
            column: 9
          }
        }],
        line: 64
      },
      "13": {
        loc: {
          start: {
            line: 67,
            column: 13
          },
          end: {
            line: 69,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 67,
            column: 13
          },
          end: {
            line: 69,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 67
      },
      "14": {
        loc: {
          start: {
            line: 80,
            column: 32
          },
          end: {
            line: 80,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 80,
            column: 32
          },
          end: {
            line: 80,
            column: 45
          }
        }, {
          start: {
            line: 80,
            column: 49
          },
          end: {
            line: 80,
            column: 53
          }
        }],
        line: 80
      },
      "15": {
        loc: {
          start: {
            line: 81,
            column: 34
          },
          end: {
            line: 85,
            column: 34
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 82,
            column: 30
          },
          end: {
            line: 84,
            column: 75
          }
        }, {
          start: {
            line: 85,
            column: 30
          },
          end: {
            line: 85,
            column: 34
          }
        }],
        line: 81
      },
      "16": {
        loc: {
          start: {
            line: 82,
            column: 30
          },
          end: {
            line: 84,
            column: 75
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 84,
            column: 61
          },
          end: {
            line: 84,
            column: 67
          }
        }, {
          start: {
            line: 84,
            column: 70
          },
          end: {
            line: 84,
            column: 75
          }
        }],
        line: 82
      },
      "17": {
        loc: {
          start: {
            line: 82,
            column: 30
          },
          end: {
            line: 84,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 82,
            column: 30
          },
          end: {
            line: 84,
            column: 41
          }
        }, {
          start: {
            line: 84,
            column: 45
          },
          end: {
            line: 84,
            column: 58
          }
        }],
        line: 82
      },
      "18": {
        loc: {
          start: {
            line: 120,
            column: 25
          },
          end: {
            line: 122,
            column: 46
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 121,
            column: 18
          },
          end: {
            line: 121,
            column: 41
          }
        }, {
          start: {
            line: 122,
            column: 18
          },
          end: {
            line: 122,
            column: 46
          }
        }],
        line: 120
      },
      "19": {
        loc: {
          start: {
            line: 124,
            column: 24
          },
          end: {
            line: 124,
            column: 52
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 124,
            column: 24
          },
          end: {
            line: 124,
            column: 37
          }
        }, {
          start: {
            line: 124,
            column: 41
          },
          end: {
            line: 124,
            column: 52
          }
        }],
        line: 124
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/yusukeyoshioka/projects/youtube/ai-chat/ai-chat-api/src/lib/websocket.ts",
      mappings: "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",
      names: [],
      sources: ["/Users/yusukeyoshioka/projects/youtube/ai-chat/ai-chat-api/src/lib/websocket.ts"],
      sourcesContent: ["import { Server as SocketIOServer, Socket } from 'socket.io';\nimport { Server as HTTPServer } from 'http';\nimport jwt from 'jsonwebtoken';\nimport { prisma } from './prisma';\n\ninterface AuthenticatedSocket extends Socket {\n  userId?: string;\n  widgetKey?: string;\n}\n\ninterface ChatMessageData {\n  message: string;\n  conversationId?: string;\n}\n\ninterface TypingData {\n  isTyping: boolean;\n}\n\nexport function initializeWebSocket(httpServer: HTTPServer) {\n  const io = new SocketIOServer(httpServer, {\n    cors: {\n      origin: [\n        'http://localhost:3000',\n        'http://localhost:8000',\n        process.env.FRONTEND_URL || 'http://localhost:3000',\n      ],\n      methods: ['GET', 'POST'],\n      credentials: true,\n    },\n    transports: ['websocket', 'polling'],\n  });\n\n  // Authentication middleware\n  io.use(async (socket: AuthenticatedSocket, next: (err?: Error) => void) => {\n    try {\n      const token = socket.handshake.auth.token;\n      const widgetKey = socket.handshake.auth.widgetKey;\n\n      if (token) {\n        // Authenticated user\n        const decoded = jwt.verify(token, process.env.JWT_SECRET!) as {\n          userId: string;\n        };\n        socket.userId = decoded.userId;\n      } else if (widgetKey) {\n        // Widget user\n        const widget = await prisma.widget.findUnique({\n          where: { widgetKey, isActive: true },\n        });\n\n        if (!widget) {\n          return next(new Error('Invalid widget key'));\n        }\n\n        socket.widgetKey = widgetKey;\n      } else {\n        return next(new Error('Authentication required'));\n      }\n\n      next();\n    } catch (error) {\n      next(new Error('Authentication failed'));\n    }\n  });\n\n  io.on('connection', (socket: AuthenticatedSocket) => {\n    console.log(`Client connected: ${socket.id}`);\n\n    // Join room based on user type\n    if (socket.userId) {\n      socket.join(`user:${socket.userId}`);\n    } else if (socket.widgetKey) {\n      socket.join(`widget:${socket.widgetKey}`);\n    }\n\n    // Handle chat messages\n    socket.on('chat:message', async (data: ChatMessageData) => {\n      try {\n        const { message } = data;\n\n        // Save message to database\n        const chatLog = await prisma.chatLog.create({\n          data: {\n            question: message,\n            answer: '', // Will be updated when AI responds\n            userId: socket.userId || null,\n            widgetId: socket.widgetKey\n              ? (\n                  await prisma.widget.findUnique({\n                    where: { widgetKey: socket.widgetKey },\n                  })\n                )?.id\n              : null,\n          },\n        });\n\n        // Emit message received confirmation\n        socket.emit('chat:message:received', {\n          messageId: chatLog.id,\n          timestamp: chatLog.createdAt,\n        });\n\n        // TODO: Process with AI and emit response\n        // This would integrate with your existing AI chat logic\n\n        // Simulate AI response for now\n        setTimeout(async () => {\n          const aiResponse =\n            'This is a WebSocket response. AI integration pending.';\n\n          // Update chat log with AI response\n          await prisma.chatLog.update({\n            where: { id: chatLog.id },\n            data: { answer: aiResponse },\n          });\n\n          // Emit AI response\n          socket.emit('chat:response', {\n            messageId: chatLog.id,\n            response: aiResponse,\n            timestamp: new Date(),\n          });\n        }, 1000);\n      } catch (error) {\n        console.error('Chat message error:', error);\n        socket.emit('chat:error', {\n          error: 'Failed to process message',\n        });\n      }\n    });\n\n    // Handle typing indicators\n    socket.on('chat:typing', (data: TypingData) => {\n      const room = socket.userId\n        ? `user:${socket.userId}`\n        : `widget:${socket.widgetKey}`;\n      socket.to(room).emit('chat:typing', {\n        userId: socket.userId || 'anonymous',\n        isTyping: data.isTyping,\n      });\n    });\n\n    // Handle disconnect\n    socket.on('disconnect', () => {\n      console.log(`Client disconnected: ${socket.id}`);\n    });\n  });\n\n  return io;\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "cf3c116cce9c9ee5bbb3a6dcbf17ac1f703cd03c"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1d2x1bxizy = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1d2x1bxizy();
var __awaiter =
/* istanbul ignore next */
(cov_1d2x1bxizy().s[0]++,
/* istanbul ignore next */
(cov_1d2x1bxizy().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_1d2x1bxizy().b[0][1]++, this.__awaiter) ||
/* istanbul ignore next */
(cov_1d2x1bxizy().b[0][2]++, function (thisArg, _arguments, P, generator) {
  /* istanbul ignore next */
  cov_1d2x1bxizy().f[0]++;
  function adopt(value) {
    /* istanbul ignore next */
    cov_1d2x1bxizy().f[1]++;
    cov_1d2x1bxizy().s[1]++;
    return value instanceof P ?
    /* istanbul ignore next */
    (cov_1d2x1bxizy().b[1][0]++, value) :
    /* istanbul ignore next */
    (cov_1d2x1bxizy().b[1][1]++, new P(function (resolve) {
      /* istanbul ignore next */
      cov_1d2x1bxizy().f[2]++;
      cov_1d2x1bxizy().s[2]++;
      resolve(value);
    }));
  }
  /* istanbul ignore next */
  cov_1d2x1bxizy().s[3]++;
  return new (
  /* istanbul ignore next */
  (cov_1d2x1bxizy().b[2][0]++, P) ||
  /* istanbul ignore next */
  (cov_1d2x1bxizy().b[2][1]++, P = Promise))(function (resolve, reject) {
    /* istanbul ignore next */
    cov_1d2x1bxizy().f[3]++;
    function fulfilled(value) {
      /* istanbul ignore next */
      cov_1d2x1bxizy().f[4]++;
      cov_1d2x1bxizy().s[4]++;
      try {
        /* istanbul ignore next */
        cov_1d2x1bxizy().s[5]++;
        step(generator.next(value));
      } catch (e) {
        /* istanbul ignore next */
        cov_1d2x1bxizy().s[6]++;
        reject(e);
      }
    }
    function rejected(value) {
      /* istanbul ignore next */
      cov_1d2x1bxizy().f[5]++;
      cov_1d2x1bxizy().s[7]++;
      try {
        /* istanbul ignore next */
        cov_1d2x1bxizy().s[8]++;
        step(generator["throw"](value));
      } catch (e) {
        /* istanbul ignore next */
        cov_1d2x1bxizy().s[9]++;
        reject(e);
      }
    }
    function step(result) {
      /* istanbul ignore next */
      cov_1d2x1bxizy().f[6]++;
      cov_1d2x1bxizy().s[10]++;
      result.done ?
      /* istanbul ignore next */
      (cov_1d2x1bxizy().b[3][0]++, resolve(result.value)) :
      /* istanbul ignore next */
      (cov_1d2x1bxizy().b[3][1]++, adopt(result.value).then(fulfilled, rejected));
    }
    /* istanbul ignore next */
    cov_1d2x1bxizy().s[11]++;
    step((generator = generator.apply(thisArg,
    /* istanbul ignore next */
    (cov_1d2x1bxizy().b[4][0]++, _arguments) ||
    /* istanbul ignore next */
    (cov_1d2x1bxizy().b[4][1]++, []))).next());
  });
}));
var __importDefault =
/* istanbul ignore next */
(cov_1d2x1bxizy().s[12]++,
/* istanbul ignore next */
(cov_1d2x1bxizy().b[5][0]++, this) &&
/* istanbul ignore next */
(cov_1d2x1bxizy().b[5][1]++, this.__importDefault) ||
/* istanbul ignore next */
(cov_1d2x1bxizy().b[5][2]++, function (mod) {
  /* istanbul ignore next */
  cov_1d2x1bxizy().f[7]++;
  cov_1d2x1bxizy().s[13]++;
  return /* istanbul ignore next */(cov_1d2x1bxizy().b[7][0]++, mod) &&
  /* istanbul ignore next */
  (cov_1d2x1bxizy().b[7][1]++, mod.__esModule) ?
  /* istanbul ignore next */
  (cov_1d2x1bxizy().b[6][0]++, mod) :
  /* istanbul ignore next */
  (cov_1d2x1bxizy().b[6][1]++, {
    "default": mod
  });
}));
/* istanbul ignore next */
cov_1d2x1bxizy().s[14]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1d2x1bxizy().s[15]++;
exports.initializeWebSocket = void 0;
const socket_io_1 =
/* istanbul ignore next */
(cov_1d2x1bxizy().s[16]++, require("socket.io"));
const jsonwebtoken_1 =
/* istanbul ignore next */
(cov_1d2x1bxizy().s[17]++, __importDefault(require("jsonwebtoken")));
const prisma_1 =
/* istanbul ignore next */
(cov_1d2x1bxizy().s[18]++, require("./prisma"));
function initializeWebSocket(httpServer) {
  /* istanbul ignore next */
  cov_1d2x1bxizy().f[8]++;
  const io =
  /* istanbul ignore next */
  (cov_1d2x1bxizy().s[19]++, new socket_io_1.Server(httpServer, {
    cors: {
      origin: ['http://localhost:3000', 'http://localhost:8000',
      /* istanbul ignore next */
      (cov_1d2x1bxizy().b[8][0]++, process.env.FRONTEND_URL) ||
      /* istanbul ignore next */
      (cov_1d2x1bxizy().b[8][1]++, 'http://localhost:3000')],
      methods: ['GET', 'POST'],
      credentials: true
    },
    transports: ['websocket', 'polling']
  }));
  // Authentication middleware
  /* istanbul ignore next */
  cov_1d2x1bxizy().s[20]++;
  io.use((socket, next) => {
    /* istanbul ignore next */
    cov_1d2x1bxizy().f[9]++;
    cov_1d2x1bxizy().s[21]++;
    return __awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_1d2x1bxizy().f[10]++;
      cov_1d2x1bxizy().s[22]++;
      try {
        const token =
        /* istanbul ignore next */
        (cov_1d2x1bxizy().s[23]++, socket.handshake.auth.token);
        const widgetKey =
        /* istanbul ignore next */
        (cov_1d2x1bxizy().s[24]++, socket.handshake.auth.widgetKey);
        /* istanbul ignore next */
        cov_1d2x1bxizy().s[25]++;
        if (token) {
          /* istanbul ignore next */
          cov_1d2x1bxizy().b[9][0]++;
          // Authenticated user
          const decoded =
          /* istanbul ignore next */
          (cov_1d2x1bxizy().s[26]++, jsonwebtoken_1.default.verify(token, process.env.JWT_SECRET));
          /* istanbul ignore next */
          cov_1d2x1bxizy().s[27]++;
          socket.userId = decoded.userId;
        } else {
          /* istanbul ignore next */
          cov_1d2x1bxizy().b[9][1]++;
          cov_1d2x1bxizy().s[28]++;
          if (widgetKey) {
            /* istanbul ignore next */
            cov_1d2x1bxizy().b[10][0]++;
            // Widget user
            const widget =
            /* istanbul ignore next */
            (cov_1d2x1bxizy().s[29]++, yield prisma_1.prisma.widget.findUnique({
              where: {
                widgetKey,
                isActive: true
              }
            }));
            /* istanbul ignore next */
            cov_1d2x1bxizy().s[30]++;
            if (!widget) {
              /* istanbul ignore next */
              cov_1d2x1bxizy().b[11][0]++;
              cov_1d2x1bxizy().s[31]++;
              return next(new Error('Invalid widget key'));
            } else
            /* istanbul ignore next */
            {
              cov_1d2x1bxizy().b[11][1]++;
            }
            cov_1d2x1bxizy().s[32]++;
            socket.widgetKey = widgetKey;
          } else {
            /* istanbul ignore next */
            cov_1d2x1bxizy().b[10][1]++;
            cov_1d2x1bxizy().s[33]++;
            return next(new Error('Authentication required'));
          }
        }
        /* istanbul ignore next */
        cov_1d2x1bxizy().s[34]++;
        next();
      } catch (error) {
        /* istanbul ignore next */
        cov_1d2x1bxizy().s[35]++;
        next(new Error('Authentication failed'));
      }
    });
  });
  /* istanbul ignore next */
  cov_1d2x1bxizy().s[36]++;
  io.on('connection', socket => {
    /* istanbul ignore next */
    cov_1d2x1bxizy().f[11]++;
    cov_1d2x1bxizy().s[37]++;
    console.log(`Client connected: ${socket.id}`);
    // Join room based on user type
    /* istanbul ignore next */
    cov_1d2x1bxizy().s[38]++;
    if (socket.userId) {
      /* istanbul ignore next */
      cov_1d2x1bxizy().b[12][0]++;
      cov_1d2x1bxizy().s[39]++;
      socket.join(`user:${socket.userId}`);
    } else {
      /* istanbul ignore next */
      cov_1d2x1bxizy().b[12][1]++;
      cov_1d2x1bxizy().s[40]++;
      if (socket.widgetKey) {
        /* istanbul ignore next */
        cov_1d2x1bxizy().b[13][0]++;
        cov_1d2x1bxizy().s[41]++;
        socket.join(`widget:${socket.widgetKey}`);
      } else
      /* istanbul ignore next */
      {
        cov_1d2x1bxizy().b[13][1]++;
      }
    }
    // Handle chat messages
    /* istanbul ignore next */
    cov_1d2x1bxizy().s[42]++;
    socket.on('chat:message', data => {
      /* istanbul ignore next */
      cov_1d2x1bxizy().f[12]++;
      cov_1d2x1bxizy().s[43]++;
      return __awaiter(this, void 0, void 0, function* () {
        /* istanbul ignore next */
        cov_1d2x1bxizy().f[13]++;
        var _a;
        /* istanbul ignore next */
        cov_1d2x1bxizy().s[44]++;
        try {
          const {
            message
          } =
          /* istanbul ignore next */
          (cov_1d2x1bxizy().s[45]++, data);
          // Save message to database
          const chatLog =
          /* istanbul ignore next */
          (cov_1d2x1bxizy().s[46]++, yield prisma_1.prisma.chatLog.create({
            data: {
              question: message,
              answer: '',
              // Will be updated when AI responds
              userId:
              /* istanbul ignore next */
              (cov_1d2x1bxizy().b[14][0]++, socket.userId) ||
              /* istanbul ignore next */
              (cov_1d2x1bxizy().b[14][1]++, null),
              widgetId: socket.widgetKey ?
              /* istanbul ignore next */
              (cov_1d2x1bxizy().b[15][0]++,
              /* istanbul ignore next */
              (cov_1d2x1bxizy().b[17][0]++, (_a = yield prisma_1.prisma.widget.findUnique({
                where: {
                  widgetKey: socket.widgetKey
                }
              })) === null) ||
              /* istanbul ignore next */
              (cov_1d2x1bxizy().b[17][1]++, _a === void 0) ?
              /* istanbul ignore next */
              (cov_1d2x1bxizy().b[16][0]++, void 0) :
              /* istanbul ignore next */
              (cov_1d2x1bxizy().b[16][1]++, _a.id)) :
              /* istanbul ignore next */
              (cov_1d2x1bxizy().b[15][1]++, null)
            }
          }));
          // Emit message received confirmation
          /* istanbul ignore next */
          cov_1d2x1bxizy().s[47]++;
          socket.emit('chat:message:received', {
            messageId: chatLog.id,
            timestamp: chatLog.createdAt
          });
          // TODO: Process with AI and emit response
          // This would integrate with your existing AI chat logic
          // Simulate AI response for now
          /* istanbul ignore next */
          cov_1d2x1bxizy().s[48]++;
          setTimeout(() => {
            /* istanbul ignore next */
            cov_1d2x1bxizy().f[14]++;
            cov_1d2x1bxizy().s[49]++;
            return __awaiter(this, void 0, void 0, function* () {
              /* istanbul ignore next */
              cov_1d2x1bxizy().f[15]++;
              const aiResponse =
              /* istanbul ignore next */
              (cov_1d2x1bxizy().s[50]++, 'This is a WebSocket response. AI integration pending.');
              // Update chat log with AI response
              /* istanbul ignore next */
              cov_1d2x1bxizy().s[51]++;
              yield prisma_1.prisma.chatLog.update({
                where: {
                  id: chatLog.id
                },
                data: {
                  answer: aiResponse
                }
              });
              // Emit AI response
              /* istanbul ignore next */
              cov_1d2x1bxizy().s[52]++;
              socket.emit('chat:response', {
                messageId: chatLog.id,
                response: aiResponse,
                timestamp: new Date()
              });
            });
          }, 1000);
        } catch (error) {
          /* istanbul ignore next */
          cov_1d2x1bxizy().s[53]++;
          console.error('Chat message error:', error);
          /* istanbul ignore next */
          cov_1d2x1bxizy().s[54]++;
          socket.emit('chat:error', {
            error: 'Failed to process message'
          });
        }
      });
    });
    // Handle typing indicators
    /* istanbul ignore next */
    cov_1d2x1bxizy().s[55]++;
    socket.on('chat:typing', data => {
      /* istanbul ignore next */
      cov_1d2x1bxizy().f[16]++;
      const room =
      /* istanbul ignore next */
      (cov_1d2x1bxizy().s[56]++, socket.userId ?
      /* istanbul ignore next */
      (cov_1d2x1bxizy().b[18][0]++, `user:${socket.userId}`) :
      /* istanbul ignore next */
      (cov_1d2x1bxizy().b[18][1]++, `widget:${socket.widgetKey}`));
      /* istanbul ignore next */
      cov_1d2x1bxizy().s[57]++;
      socket.to(room).emit('chat:typing', {
        userId:
        /* istanbul ignore next */
        (cov_1d2x1bxizy().b[19][0]++, socket.userId) ||
        /* istanbul ignore next */
        (cov_1d2x1bxizy().b[19][1]++, 'anonymous'),
        isTyping: data.isTyping
      });
    });
    // Handle disconnect
    /* istanbul ignore next */
    cov_1d2x1bxizy().s[58]++;
    socket.on('disconnect', () => {
      /* istanbul ignore next */
      cov_1d2x1bxizy().f[17]++;
      cov_1d2x1bxizy().s[59]++;
      console.log(`Client disconnected: ${socket.id}`);
    });
  });
  /* istanbul ignore next */
  cov_1d2x1bxizy().s[60]++;
  return io;
}
/* istanbul ignore next */
cov_1d2x1bxizy().s[61]++;
exports.initializeWebSocket = initializeWebSocket;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,