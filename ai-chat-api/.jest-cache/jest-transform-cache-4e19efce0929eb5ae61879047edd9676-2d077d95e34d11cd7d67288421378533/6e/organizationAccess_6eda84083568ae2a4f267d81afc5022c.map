{"file":"/Users/yusukeyoshioka/projects/youtube/ai-chat/ai-chat-api/src/middleware/organizationAccess.ts","mappings":";;;AAMO,MAAM,mBAAmB,GAAG,CACjC,GAAY,EACZ,GAAa,EACb,IAAkB,EAClB,EAAE;IACF,IAAI,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,cAAc,EAAE,CAAC;QAC1C,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,8BAA8B,EAAE,CAAC,CAAC;IAC3E,CAAC;IACD,GAAG,CAAC,cAAc,GAAG,GAAG,CAAC,IAAI,CAAC,cAAc,CAAC;IAC7C,OAAO,IAAI,EAAE,CAAC;AAChB,CAAC,CAAC;AAVW,QAAA,mBAAmB,uBAU9B;AAEW,QAAA,yBAAyB,GAAG,2BAAmB,CAAC","names":[],"sources":["/Users/yusukeyoshioka/projects/youtube/ai-chat/ai-chat-api/src/middleware/organizationAccess.ts"],"sourcesContent":["import { Request, Response, NextFunction } from 'express';\n\nexport interface OrganizationRequest extends Request {\n  organizationId: string;\n}\n\nexport const orgAccessMiddleware = (\n  req: Request,\n  res: Response,\n  next: NextFunction\n) => {\n  if (!req.user || !req.user.organizationId) {\n    return res.status(403).json({ message: 'Organization access required' });\n  }\n  req.organizationId = req.user.organizationId;\n  return next();\n};\n\nexport const requireOrganizationAccess = orgAccessMiddleware;\n"],"version":3}