{"version":3,"names":["cov_6ilyeas22","actualCoverage","s","json2csv_1","require","exportToCSV","data","options","b","f","fields","delimiter","includeHeaders","withBOM","length","parserOptions","header","parser","Parser","csv","parse","exports","formatDateForCSV","date","d","Date","year","getFullYear","month","String","getMonth","padStart","day","getDate","hours","getHours","minutes","getMinutes","seconds","getSeconds","sanitizeForCSV","value","undefined","JSON","stringify","str","replace","REPORT_FIELD_MAPPINGS","chat_sessions","label","user_analytics","satisfaction","unresolved","usage_summary"],"sources":["/Users/yusukeyoshioka/projects/youtube/ai-chat/ai-chat-api/src/utils/csvExporter.ts"],"sourcesContent":["import { Parser } from 'json2csv';\n\ninterface CSVExportOptions {\n  fields?: string[];\n  delimiter?: string;\n  includeHeaders?: boolean;\n  withBOM?: boolean;\n}\n\nexport const exportToCSV = (\n  data: Record<string, unknown>[],\n  options: CSVExportOptions = {}\n): string => {\n  const {\n    fields,\n    delimiter = ',',\n    includeHeaders = true,\n    withBOM = true,\n  } = options;\n\n  // If no data, return empty string\n  if (!data || data.length === 0) {\n    return '';\n  }\n\n  // Configure parser options\n  const parserOptions: {\n    delimiter: string;\n    header: boolean;\n    fields?: string[];\n  } = {\n    delimiter,\n    header: includeHeaders,\n  };\n\n  // If fields are specified, use them\n  if (fields && fields.length > 0) {\n    parserOptions.fields = fields;\n  }\n\n  // Create parser and convert data\n  const parser = new Parser(parserOptions);\n  let csv = parser.parse(data);\n\n  // Add UTF-8 BOM for Excel compatibility\n  if (withBOM) {\n    csv = '\\ufeff' + csv;\n  }\n\n  return csv;\n};\n\n// Helper function to format dates for CSV\nexport const formatDateForCSV = (date: Date | string | null): string => {\n  if (!date) return '';\n\n  const d = typeof date === 'string' ? new Date(date) : date;\n\n  // Format as YYYY-MM-DD HH:mm:ss\n  const year = d.getFullYear();\n  const month = String(d.getMonth() + 1).padStart(2, '0');\n  const day = String(d.getDate()).padStart(2, '0');\n  const hours = String(d.getHours()).padStart(2, '0');\n  const minutes = String(d.getMinutes()).padStart(2, '0');\n  const seconds = String(d.getSeconds()).padStart(2, '0');\n\n  return `${year}-${month}-${day} ${hours}:${minutes}:${seconds}`;\n};\n\n// Helper function to sanitize data for CSV\nexport const sanitizeForCSV = (value: unknown): string => {\n  if (value === null || value === undefined) {\n    return '';\n  }\n\n  // Convert boolean to readable string\n  if (typeof value === 'boolean') {\n    return value ? 'Yes' : 'No';\n  }\n\n  // Convert arrays and objects to JSON string\n  if (typeof value === 'object') {\n    return JSON.stringify(value);\n  }\n\n  // Convert to string and remove problematic characters\n  let str = String(value);\n\n  // Remove line breaks and tabs\n  str = str.replace(/[\\r\\n\\t]/g, ' ');\n\n  return str;\n};\n\n// Report-specific field mappings with Japanese headers\nexport const REPORT_FIELD_MAPPINGS = {\n  chat_sessions: [\n    { label: 'セッションID', value: 'id' },\n    { label: 'ウィジェットID', value: 'widgetId' },\n    { label: 'ウィジェット名', value: 'widgetName' },\n    { label: '会社名', value: 'companyName' },\n    { label: 'ユーザーエージェント', value: 'userAgent' },\n    { label: '質問', value: 'question' },\n    { label: '回答', value: 'answer' },\n    { label: '満足度', value: 'satisfaction' },\n    { label: '作成日時', value: 'createdAt' },\n  ],\n  user_analytics: [\n    { label: 'ユーザーID', value: 'userId' },\n    { label: 'メールアドレス', value: 'email' },\n    { label: '名前', value: 'name' },\n    { label: '組織名', value: 'organizationName' },\n    { label: 'ロール', value: 'roles' },\n    { label: 'チャット数', value: 'chatCount' },\n    { label: '満足度平均', value: 'avgSatisfaction' },\n    { label: '最終アクセス', value: 'lastActive' },\n  ],\n  satisfaction: [\n    { label: '期間', value: 'period' },\n    { label: 'ウィジェット名', value: 'widgetName' },\n    { label: '総チャット数', value: 'totalChats' },\n    { label: '評価済み数', value: 'ratedChats' },\n    { label: '満足数', value: 'satisfiedCount' },\n    { label: '不満足数', value: 'unsatisfiedCount' },\n    { label: '満足率', value: 'satisfactionRate' },\n  ],\n  unresolved: [\n    { label: '質問', value: 'question' },\n    { label: '頻度', value: 'frequency' },\n    { label: 'ウィジェット名', value: 'widgetName' },\n    { label: '最終発生日', value: 'lastOccurred' },\n    { label: '解決状況', value: 'status' },\n  ],\n  usage_summary: [\n    { label: '日付', value: 'date' },\n    { label: '組織名', value: 'organizationName' },\n    { label: 'アクティブユーザー数', value: 'activeUsers' },\n    { label: 'チャット数', value: 'chatCount' },\n    { label: 'FAQ閲覧数', value: 'faqViews' },\n    { label: 'API呼び出し数', value: 'apiCalls' },\n    { label: 'ストレージ使用量(MB)', value: 'storageUsed' },\n  ],\n};\n"],"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","ignoreList":[]}