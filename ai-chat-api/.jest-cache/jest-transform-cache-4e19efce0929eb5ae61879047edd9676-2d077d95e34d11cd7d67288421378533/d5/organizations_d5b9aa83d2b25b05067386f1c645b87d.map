{"file":"/Users/yusukeyoshioka/projects/youtube/ai-chat/ai-chat-api/src/routes/organizations.ts","mappings":"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","names":[],"sources":["/Users/yusukeyoshioka/projects/youtube/ai-chat/ai-chat-api/src/routes/organizations.ts"],"sourcesContent":["import express from 'express';\nimport { authMiddleware as requireAuth } from '../middleware/auth';\nimport * as organizationService from '../services/organizationService';\n\nconst router = express.Router();\n\n// Get user's organizations\nrouter.get('/', requireAuth, async (req, res) => {\n  try {\n    const organizations = await organizationService.getUserOrganizations(\n      req.user!.id\n    );\n\n    // Add computed fields\n    const enhancedOrgs = organizations.map((org) => ({\n      ...org,\n      userCount: org._count.users,\n      widgetCount: org.companies.reduce(\n        (sum, company) => sum + company._count.widgets,\n        0\n      ),\n      plan: org.companies[0]?.plan || 'free', // Use first company's plan as org plan\n    }));\n\n    res.json(enhancedOrgs);\n  } catch (error) {\n    res.status(500).json({ error: 'Failed to fetch organizations' });\n  }\n});\n\n// Get organization by ID\nrouter.get('/:id', requireAuth, async (req, res) => {\n  try {\n    const organization = await organizationService.getOrganizationById(\n      req.params.id,\n      req.user!.id\n    );\n    res.json(organization);\n  } catch (error) {\n    const message =\n      error instanceof Error ? error.message : 'Failed to fetch organization';\n    const status =\n      message.includes('not found') || message.includes('access denied')\n        ? 404\n        : 500;\n    res.status(status).json({ error: message });\n  }\n});\n\n// Update organization\nrouter.put('/:id', requireAuth, async (req, res) => {\n  try {\n    const organization = await organizationService.updateOrganization(\n      req.params.id,\n      req.user!.id,\n      req.body\n    );\n    res.json(organization);\n  } catch (error) {\n    const message =\n      error instanceof Error ? error.message : 'Failed to update organization';\n    const status =\n      message.includes('not found') || message.includes('insufficient')\n        ? 403\n        : 500;\n    res.status(status).json({ error: message });\n  }\n});\n\n// Get organization stats\nrouter.get('/:id/stats', requireAuth, async (req, res) => {\n  try {\n    const stats = await organizationService.getOrganizationStats(req.params.id);\n    res.json(stats);\n  } catch (error) {\n    res.status(500).json({ error: 'Failed to fetch organization stats' });\n  }\n});\n\nexport default router;\n"],"version":3}