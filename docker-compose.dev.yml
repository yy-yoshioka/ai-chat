version: "3.8"

services:
  # PostgreSQL Database
  postgres:
    image: pgvector/pgvector:pg16
    container_name: postgres-dev
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: ai_chat_db
    volumes:
      - postgres-dev-data:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - chat-dev-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for rate limiting and caching
  redis:
    image: redis:7-alpine
    container_name: redis-dev
    ports:
      - "6380:6379"
    volumes:
      - redis-dev-data:/data
    restart: unless-stopped
    networks:
      - chat-dev-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  ai-chat-api:
    build:
      context: ./ai-chat-api
      dockerfile: Dockerfile.dev
    container_name: ai-chat-api-dev
    ports:
      - "8000:3001"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/ai_chat_db?schema=public
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=development-secret-key-for-testing-only
      - OPENAI_API_KEY=${OPENAI_API_KEY:-your_openai_api_key_here}
      - OPENAI_MODEL=gpt-4o-mini-2024-07-18
      - NEXT_PUBLIC_API_URL=http://localhost:8000
      - FRONTEND_URL=http://localhost:3000
      - PORT=3001
      # Stripe関連（開発用）
      - STRIPE_SECRET_KEY=${STRIPE_SECRET_KEY:-sk_test_development_key}
      - STRIPE_WEBHOOK_SECRET=whsec_development_webhook_secret
      - STRIPE_PUBLISHABLE_KEY=${STRIPE_PUBLISHABLE_KEY:-pk_test_development_key}
    volumes:
      # ソースコードのボリュームマウント（ホットリロード用）
      - ./ai-chat-api:/app
      - /app/node_modules
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - chat-dev-network
    command: sh -c "npx prisma migrate deploy && yarn db:seed && yarn dev"

  ai-chat-ui:
    build:
      context: ./ai-chat-ui
      dockerfile: Dockerfile.dev
    container_name: ai-chat-ui-dev
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - JWT_SECRET=development-secret-key-for-testing-only
      - NEXT_PUBLIC_API_URL=http://ai-chat-api:3001
    volumes:
      # ソースコードのボリュームマウント（ホットリロード用）
      - ./ai-chat-ui:/app
      - /app/node_modules
      - /app/.next
    depends_on:
      - ai-chat-api
    restart: unless-stopped
    networks:
      - chat-dev-network
    command: yarn dev

volumes:
  postgres-dev-data:
    driver: local
  redis-dev-data:
    driver: local

networks:
  chat-dev-network:
    driver: bridge
