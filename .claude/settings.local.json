{
  "permissions": {
    "allow": [
      "Bash(claude update)",
      "Bash(git fetch:*)",
      "Bash(git checkout:*)",
      "Bash(mkdir:*)",
      "Bash(mv:*)",
      "Bash(git add:*)",
      "Bash(git reset:*)",
      "Bash(git commit:*)",
      "Bash(docker compose:*)",
      "Bash(grep:*)",
      "Bash(find:*)",
      "Bash(yarn add:*)",
      "Bash(ls:*)",
      "Bash(rm:*)",
      "Bash(yarn lint)",
      "Bash(touch:*)",
      "Bash(wc:*)",
      "Bash(yarn lint:*)",
      "Bash(rg:*)",
      "Bash(yarn format)",
      "Bash(yarn build)",
      "Bash(*)",
      "Bash(git push:*)",
      "Bash(git pull:*)",
      "Bash(scripts/slack-notify.sh:*)",
      "Bash(source .env)",
      "Bash(./scripts/slack-notify.sh:*)",
      "Bash(./slack-notify.sh:*)",
      "Bash(yarn test)",
      "Bash(yarn test:*)",
      "Bash(git remote:*)",
      "Bash(# 依存関係チェック用の関数\ncheck_page_dependencies() {\n  local page_path=$1\n  echo \"Checking: $page_path\"\n  \n  if [ -f \"$page_path\" ]; then\n    # hooksのimportを確認\n    echo \"  Hooks used:\"\n    grep \"from '@/_hooks\" \"$page_path\" | sed 's/.*from/    -/' || echo \"    - None found\"\n    \n    # componentsのimportを確認\n    echo \"  Components used:\"\n    grep \"from '@/_components\" \"$page_path\" | sed 's/.*from/    -/' || echo \"    - None found\"\n    \n    # APIコールを確認\n    echo \"  API calls:\"\n    grep -E \"(fetchGet|fetchPost|fetchPut|fetchDelete)\" \"$page_path\" | sed 's/^/    - /' | head -5 || echo \"    - None found\"\n  else\n    echo \"  ❌ Page not found\"\n  fi\n  echo \"\"\n}\n\necho -e \"\\n=== Dependency Check ===\"\n# 主要ページの依存関係をチェック\ncheck_page_dependencies \"ai-chat-ui/app/(org)/admin/[orgId]/dashboard/page.tsx\"\ncheck_page_dependencies \"ai-chat-ui/app/(org)/admin/[orgId]/users/page.tsx\"\ncheck_page_dependencies \"ai-chat-ui/app/(org)/admin/[orgId]/reports/page.tsx\")",
      "Bash(git merge:*)",
      "Bash(yarn prisma migrate dev:*)",
      "Bash(docker-compose:*)",
      "Bash(cat:*)",
      "Bash(docker exec:*)",
      "Bash(npx prisma:*)",
      "Bash(/Users/yusukeyoshioka/projects/youtube/ai-chat/scripts/slack-notify.sh:*)",
      "Bash(npx tsc:*)",
      "Bash(gh pr create:*)",
      "Bash(gh auth:*)",
      "Bash(DATABASE_URL=\"postgresql://postgres:password@localhost:5432/ai_chat_db?schema=public\" yarn prisma migrate dev --name add_message_feedback)",
      "Bash(cp:*)",
      "Bash(yarn prisma migrate:*)",
      "Bash(DATABASE_URL=\"postgresql://postgres:postgres@localhost:5432/ai_chat_db?schema=public\" yarn prisma migrate dev --name add_auth_tokens)",
      "Bash(bash:*)",
      "Bash(yarn prettier:*)",
      "Bash(yarn type-check)",
      "Bash(yarn:*)",
      "Bash(chmod:*)",
      "Bash(node:*)",
      "Bash(npx storybook@latest init:*)",
      "Bash(DATABASE_URL=\"postgresql://postgres:postgres@localhost:5432/ai_chat_db?schema=public\" yarn prisma migrate dev --name add_data_retention)",
      "Bash(for file in src/utils/*.ts)",
      "Bash(do [ \"$file\" != \"src/utils/email.ts\" ])",
      "Bash(done)",
      "Bash(# Create directories for all modules\nmodules=(widgets chat faqs knowledge-base webhooks users security analytics status themes custom-responses)\nfor module in \"\"${modules[@]}\"\"; do\n  mkdir -p \"\"src/modules/$module/services\"\" \"\"src/modules/$module/controllers\"\"\ndone)",
      "Bash(# Create directories for all modules\nfor module in widgets chat faqs knowledge-base webhooks users security analytics status themes custom-responses; do\n  mkdir -p \"\"src/modules/$module/services\"\" \"\"src/modules/$module/controllers\"\"\ndone)",
      "Bash(./scripts/migrate-modules.sh:*)",
      "Bash(# Migrate users module\ncp src/routes/users.ts src/modules/users/routes.ts 2>/dev/null || true\ncp src/services/userManagementService.ts src/modules/users/services/ 2>/dev/null || true\n\n# Migrate security module  \ncp src/routes/security.ts src/modules/security/routes.ts 2>/dev/null || true\ncp src/services/securityService.ts src/modules/security/services/ 2>/dev/null || true\ncp src/services/dataRetentionService.ts src/modules/security/services/ 2>/dev/null || true\n\n# Migrate analytics module\ncp src/routes/analytics.ts src/modules/analytics/routes.ts 2>/dev/null || true\ncp src/services/reportService.ts src/modules/analytics/services/ 2>/dev/null || true\n\n# Migrate status module\ncp src/routes/status.ts src/modules/status/routes.ts 2>/dev/null || true\ncp src/services/healthMonitorService.ts src/modules/status/services/ 2>/dev/null || true\n\n# Migrate themes module\ncp src/routes/themes.ts src/modules/themes/routes.ts 2>/dev/null || true\ncp src/services/themeService.ts src/modules/themes/services/ 2>/dev/null || true)",
      "Bash(./scripts/create-module-indexes.sh:*)",
      "Bash(./scripts/fix-imports.sh:*)"
    ],
    "deny": [],
    "autoConfirm": true
  }
}